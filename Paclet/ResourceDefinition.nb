Notebook[{

Cell[CellGroupData[{
Cell["PatrickMLenggenhager/HyperBloch", "Title",
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Name", "TemplateCell", "Title"},
 CellID->24221692,ExpressionUUID->"4eac1940-375e-4832-ad4d-83ca9d7d4e08"],

Cell["\<\
Import HyperCells output, define tight-binding models, construct hyperbolic \
Bloch Hamiltonians, and apply the supercell method\
\>", "Text",
 Deletable->False,
 TaggingRules->{},
 CellChangeTimes->{
  3.903609333174508*^9, {3.940560642464204*^9, 3.940560664070977*^9}},
 CellTags->{"Description", "TemplateCell"},
 CellID->381582870,ExpressionUUID->"0385bc61-13fa-46c0-b6d0-078e816bb4af"],

Cell[CellGroupData[{

Cell["Paclet Manifest", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PacletManifest"},
 CellTags->{"Paclet Manifest", "PacletManifest", "TemplateCellGroup"},
 CellID->196832285,ExpressionUUID->"31af9a98-9e52-4ce7-95f5-396d2eee746e"],

Cell[BoxData[
 TemplateBox[{},
  "PacletDirectoryChooserTemplate"]], "PacletDirectoryChooser",
 TaggingRules->{
  "PacletDirectoryType" -> "Notebook", "PacletDirectory" -> 
   "C:\\Users\\pklen\\Documents\\PhD\\HyperBloch\\Paclet", "Refreshing" -> 
   False},
 CellTags->"PacletManifestPanel",
 CellID->115408480,ExpressionUUID->"dcd3c94c-7ece-4436-9eb5-46f2fc57cb7f"],

Cell[CellGroupData[{

Cell["", "FileManagerTopSpacer",
 CellGroupingRules->{"SectionGrouping", 99},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->578595387,ExpressionUUID->"e3fda144-9ad1-e840-85e1-82947a95d854"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Documentation\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"e68271c4-d3cd-d14c-82c8-88a9355b602a"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDocumentationIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->178445695,ExpressionUUID->"a15a327e-a1a6-3d4c-806c-5fb90bfbad44"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"English\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"4764dc28-4359-b24a-94ef-8e3c07266b38"]], \
"FileManagerDirectory",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->446029362,ExpressionUUID->"afbe7d76-f575-1745-bc39-582b920c6bb2"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Guides\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Guides"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"a27dd849-0124-9143-aa45-aba5ae71d375"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->6649987,ExpressionUUID->"683ee7d0-47ff-724a-80d8-8f52b46732b2"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"HyperBlochPackage.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Guides", 
       "HyperBlochPackage.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Guides", 
    "HyperBlochPackage.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->622344259,ExpressionUUID->"13bed265-1934-5f48-87b5-4ac423c669ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Index\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Index"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"a60a6b79-ba48-2143-bc50-5e5e72c1628e"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->82040286,ExpressionUUID->"c120095b-f6e1-c942-ab13-0de4d575cf0f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"_0.cfs\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Index", "_0.cfs"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Index", "_0.cfs"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->860653227,ExpressionUUID->"3a5a9752-3258-2c41-b21b-dc6b1af878ef"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"segments_3\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Index", 
       "segments_3"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Index", "segments_3"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->71620870,ExpressionUUID->"7cdc51b3-eda4-d34c-8494-8984c5a010e3"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"segments.gen\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Index", 
       "segments.gen"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Index", "segments.gen"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->102431912,ExpressionUUID->"293f3822-5ec9-1048-a975-27fc2e4d3d1a"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"ReferencePages\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"2bc25f51-7464-434a-8bf3-7815d38c2990"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->486379451,ExpressionUUID->"aad27438-05f1-694c-a244-3744da6c1b5b"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Symbols\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"3f3655ca-6891-8448-90f9-a64ac8d7953e"]], \
"FileManagerDirectory",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->35637609,ExpressionUUID->"30526e7f-3038-7541-8f1c-417acb18a130"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"AbelianBlochHamiltonianExpression.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "AbelianBlochHamiltonianExpression.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "AbelianBlochHamiltonianExpression.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->21427092,ExpressionUUID->"c6f15091-67ab-5843-acbd-b1e006097533"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"AbelianBlochHamiltonian.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "AbelianBlochHamiltonian.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "AbelianBlochHamiltonian.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->178982199,ExpressionUUID->"d3361323-996e-0c4b-8326-24e53527c7e7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetCellBoundary.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "GetCellBoundary.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "GetCellBoundary.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->30381600,ExpressionUUID->"f29bfc0a-2c23-f646-a66e-e1cb768e64c4"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetCellGraphEdge.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "GetCellGraphEdge.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "GetCellGraphEdge.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->20660427,ExpressionUUID->"9bec0012-5da8-a246-8378-81300af191c7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetCellGraphFace.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "GetCellGraphFace.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "GetCellGraphFace.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->382265305,ExpressionUUID->"bd10ad9f-666d-584e-a346-b07dee08fea7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetCellGraphVertex.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "GetCellGraphVertex.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "GetCellGraphVertex.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->209636970,ExpressionUUID->"866f7b55-36ba-f14e-a5cc-0f47314844a4"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetEdge.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "GetEdge.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "GetEdge.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->264705350,ExpressionUUID->"392bd5d8-4058-e649-afef-2358a713fc4d"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetSchwarzTriangle.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "GetSchwarzTriangle.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "GetSchwarzTriangle.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1007860019,ExpressionUUID->"370b39e8-d4f3-4546-90f6-368d6e3962a2"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetTranslatedCellGraphEdge.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "GetTranslatedCellGraphEdge.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "GetTranslatedCellGraphEdge.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->335144061,ExpressionUUID->"4e4d43e6-5235-b347-b286-d80d4dd4cfdd"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetVertex.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "GetVertex.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "GetVertex.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->98560654,ExpressionUUID->"2e5e14bc-b0ff-5c4c-b9ec-3d1698516492"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetWyckoffPosition.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "GetWyckoffPosition.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "GetWyckoffPosition.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->201174298,ExpressionUUID->"ab50fac1-8322-a948-aaa1-df100361663d"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"HBDisclinationModelGraph.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "HBDisclinationModelGraph.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "HBDisclinationModelGraph.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->100553160,ExpressionUUID->"f98424fb-e8b2-2448-b97f-94fa9dbe26fe"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"HBDisclinationSupercellModelGraph.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "HBDisclinationSupercellModelGraph.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "HBDisclinationSupercellModelGraph.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->274937934,ExpressionUUID->"4bb7e683-6989-8a48-8eca-6bbbbd939a03"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"HCCellGraph.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "HCCellGraph.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "HCCellGraph.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->250966863,ExpressionUUID->"4f8c2a0c-f3cb-8d47-a4e4-3c6d89bca6f8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"HCModelGraph.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "HCModelGraph.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "HCModelGraph.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->183321551,ExpressionUUID->"7f9a3ffd-97dc-e94f-bb4d-cb7e29c5b81f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"HCQuotientSequencesAdjMat.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "HCQuotientSequencesAdjMat.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "HCQuotientSequencesAdjMat.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->5949132,ExpressionUUID->"536ecf74-d231-494a-9a73-aab96a280453"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"HCSupercellModelGraph.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "HCSupercellModelGraph.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "HCSupercellModelGraph.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->764528861,ExpressionUUID->"9211485f-78cd-ae43-81aa-9685515f807d"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ImportCellGraphString.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ImportCellGraphString.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ImportCellGraphString.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->132223557,ExpressionUUID->"d71db6bc-fa1f-b04b-9f78-6227a55822fa"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ImportModelGraphString.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ImportModelGraphString.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ImportModelGraphString.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->196594241,ExpressionUUID->"6a90935f-c767-d94d-a599-959f66d73fa0"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ImportQuotientSequencesAdjMatString.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ImportQuotientSequencesAdjMatString.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ImportQuotientSequencesAdjMatString.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->47013414,ExpressionUUID->"16c0d47f-02ce-4540-a500-1f213ab837f5"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ImportSupercellModelGraphString.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ImportSupercellModelGraphString.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ImportSupercellModelGraphString.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->22324312,ExpressionUUID->"86929755-af35-5f45-ba55-bdc33ea5b144"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"IntroduceDisclination.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "IntroduceDisclination.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "IntroduceDisclination.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->16470276,ExpressionUUID->"c34f11c2-07be-d545-95ba-95fd152ecc10"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"NonReciprocalAbelianBlochHamiltonianExpression.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "NonReciprocalAbelianBlochHamiltonianExpression.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "NonReciprocalAbelianBlochHamiltonianExpression.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->54022958,ExpressionUUID->"9122eb75-8b62-7f46-abee-7c23fbc4087c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"NonReciprocalAbelianBlochHamiltonian.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "NonReciprocalAbelianBlochHamiltonian.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "NonReciprocalAbelianBlochHamiltonian.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->151085922,ExpressionUUID->"3304dfa0-a602-9347-81b2-3c517634977a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"NonReciprocalTBHamiltonian.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "NonReciprocalTBHamiltonian.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "NonReciprocalTBHamiltonian.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->119286480,ExpressionUUID->"50ab6ffe-a6b1-f949-b6ae-a9a641a0f45c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ShowCellBoundary.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ShowCellBoundary.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ShowCellBoundary.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->132421592,ExpressionUUID->"d3528a8e-36b9-1842-8336-788972fc7341"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ShowCellGraphFlattened.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ShowCellGraphFlattened.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ShowCellGraphFlattened.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->746689652,ExpressionUUID->"4f20acf5-1a33-8b4e-9489-dcfe754665cc"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ShowCellGraph.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ShowCellGraph.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ShowCellGraph.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->117581433,ExpressionUUID->"09429484-86c9-9a4e-b1a9-4b93f81afcbd"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ShowCellSchwarzTriangles.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ShowCellSchwarzTriangles.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ShowCellSchwarzTriangles.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->721149501,ExpressionUUID->"303aeffe-6a6e-d84a-86f0-33adbf0e283a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ShowTriangles.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ShowTriangles.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ShowTriangles.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->58700440,ExpressionUUID->"90f0bba4-60bf-1d42-90f4-c38457ee15a8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"TBHamiltonian.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "TBHamiltonian.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "TBHamiltonian.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->123725713,ExpressionUUID->"45c51032-a8b0-f748-bebd-2249586d9017"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"VisualizeCellGraph.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "VisualizeCellGraph.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "VisualizeCellGraph.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->161844371,ExpressionUUID->"cf06837a-32f5-0a41-9f91-b9e5535883d4"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"VisualizeModelGraph.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "VisualizeModelGraph.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "VisualizeModelGraph.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->107105493,ExpressionUUID->"60e7b6db-830e-7f4e-a411-1085c5ec8a82"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"VisualizeQuotientSequences.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "VisualizeQuotientSequences.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "VisualizeQuotientSequences.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->32430056,ExpressionUUID->"e881d2f3-1225-294d-8c6f-03798b9c5363"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"SearchIndex\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "SearchIndex"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"95a4baea-522f-644b-8335-20096dacd237"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->365521975,ExpressionUUID->"ab511121-7f6c-e64e-9bee-13674cc7b564"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"5\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "SearchIndex", "5"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"dc9ad7ee-827e-d446-a5a5-0262c4c21d77"]], \
"FileManagerDirectory",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->418743249,ExpressionUUID->"f778b8f6-017e-d648-b796-457b55508ee2"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"_0.cfe\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "SearchIndex", "5", 
       "_0.cfe"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "SearchIndex", "5", 
    "_0.cfe"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->188857398,ExpressionUUID->"e78dd2b3-3281-a145-ab57-37d8c9c98b27"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"_0.cfs\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "SearchIndex", "5", 
       "_0.cfs"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "SearchIndex", "5", 
    "_0.cfs"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->146783964,ExpressionUUID->"9fa78ccb-3134-7c4e-a529-a04e5fd940c9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"_0.si\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "SearchIndex", "5", 
       "_0.si"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "SearchIndex", "5", 
    "_0.si"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->366060740,ExpressionUUID->"d4ff9dfc-36b3-eb44-b355-4a12cdb5eec5"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"fields.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "SearchIndex", "5", 
       "fields.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "SearchIndex", "5", 
    "fields.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->830230155,ExpressionUUID->"96e3b157-a3f1-e340-9459-d9e1abf09f2a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"indexMetadata.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "SearchIndex", "5", 
       "indexMetadata.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "SearchIndex", "5", 
    "indexMetadata.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->133870684,ExpressionUUID->"8822fe1f-9308-7346-aaec-ffd9566720e3"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"segments_2\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "SearchIndex", "5", 
       "segments_2"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "SearchIndex", "5", 
    "segments_2"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->356579299,ExpressionUUID->"5053fa2b-709e-8d4e-9181-6e45acdfbacd"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"write.lock\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "SearchIndex", "5", 
       "write.lock"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "SearchIndex", "5", 
    "write.lock"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->8640479,ExpressionUUID->"1c8b396d-665c-e841-af72-5c7ff00434c6"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"SpellIndex\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "SpellIndex"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"bf3e6c80-220b-764b-af17-65e38adc4e97"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->935804088,ExpressionUUID->"b80b3e91-6e7f-8244-b550-b45eea4708ab"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"_7.cfs\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "SpellIndex", 
       "_7.cfs"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "SpellIndex", "_7.cfs"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->260467735,ExpressionUUID->"553545f6-5448-4147-bbf3-4a5dbe93f8e8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"segments.gen\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "SpellIndex", 
       "segments.gen"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "SpellIndex", 
    "segments.gen"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->91135025,ExpressionUUID->"cd121c4c-e8d6-8145-bba4-b64862162678"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"segments_h\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "SpellIndex", 
       "segments_h"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "SpellIndex", 
    "segments_h"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->19613767,ExpressionUUID->"94adaaaf-2807-3342-87e2-e5d709300cf9"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Tutorials\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Tutorials"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"2c06c686-5ae8-5b48-ac97-2d0f66913b8e"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->270626448,ExpressionUUID->"263f4cfb-dd01-154d-bbc1-1abf6bf2fd38"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"BasicUsage.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Tutorials", 
       "BasicUsage.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Tutorials", 
    "BasicUsage.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->565637431,ExpressionUUID->"b99bc89c-579a-ca48-9e90-376d440eac1e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Kernel\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"1e49f32b-c87c-d544-868b-f48e4f88c9bb"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerKernelIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->7072344,ExpressionUUID->"bc319dfc-776e-7743-ac9a-58ca5e43335c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"HyperBloch.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "HyperBloch.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "HyperBloch.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->146061984,ExpressionUUID->"24a779cf-dcc4-9e4e-b42f-0ac29b2f716a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"L2Primitives.m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "L2Primitives.m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "L2Primitives.m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->209391763,ExpressionUUID->"3d77786e-d68c-cc41-bda7-d4c9615b9653"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"PacletInfo.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "PacletInfo.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "PacletInfo.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerPacletInfoIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->459546126,ExpressionUUID->"0bbd3515-a693-a54b-98c5-be065904378b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ResourceDefinition.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "ResourceDefinition.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "ResourceDefinition.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->337259689,ExpressionUUID->"0904eddc-7fe9-ad45-bb46-12a307701ee6"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Resources\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Resources"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"8e49cbb4-2e9f-d943-9acb-50b3b664a520"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->466318685,ExpressionUUID->"f5a6c58f-4408-e342-9034-9b294eb9804c"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"ExampleData\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Resources", "ExampleData"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"93602299-c55d-d242-b83a-c4a17f371058"]], \
"FileManagerDirectory",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->933435232,ExpressionUUID->"93e68fe8-a1ae-4943-8118-b0d918fcaa83"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"(2,3,8)_T2.1_3.hcc\"", 
     FileNameJoin[{
       NotebookDirectory[], "Resources", "ExampleData", 
       "(2,3,8)_T2.1_3.hcc"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Resources", "ExampleData", "(2,3,8)_T2.1_3.hcc"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->340707616,ExpressionUUID->"2b0faab4-615c-0c45-9d7e-d8b83c9a4c91"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"(2,4,6)-adjMat-BBG_102_sparse.hcqs\"", 
     FileNameJoin[{
       NotebookDirectory[], "Resources", "ExampleData", 
       "(2,4,6)-adjMat-BBG_102_sparse.hcqs"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Resources", "ExampleData", 
    "(2,4,6)-adjMat-BBG_102_sparse.hcqs"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->608049100,ExpressionUUID->"6804697a-bde5-3c45-a3db-9e3eaf39ec0e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"(2,4,6)-adjMat-BBG_35_sparse.hcqs\"", 
     FileNameJoin[{
       NotebookDirectory[], "Resources", "ExampleData", 
       "(2,4,6)-adjMat-BBG_35_sparse.hcqs"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Resources", "ExampleData", 
    "(2,4,6)-adjMat-BBG_35_sparse.hcqs"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->636299934,ExpressionUUID->"7fd02ed4-3425-344e-9d1c-84c54305c1cd"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"(2,8,8)_T2.6_3.hcc\"", 
     FileNameJoin[{
       NotebookDirectory[], "Resources", "ExampleData", 
       "(2,8,8)_T2.6_3.hcc"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Resources", "ExampleData", "(2,8,8)_T2.6_3.hcc"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->773024181,ExpressionUUID->"2cb78246-cf5b-d647-8f4d-f8de098ff279"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"{8,3}-tess_T2.1_3.hcm\"", 
     FileNameJoin[{
       NotebookDirectory[], "Resources", "ExampleData", 
       "{8,3}-tess_T2.1_3.hcm"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Resources", "ExampleData", "{8,3}-tess_T2.1_3.hcm"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->370492080,ExpressionUUID->"d5e094f0-e213-e74f-9474-1f69c0e28dff"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"{8,3}-tess_T2.1_3_sc-T5.1.hcs\"", 
     FileNameJoin[{
       NotebookDirectory[], "Resources", "ExampleData", 
       "{8,3}-tess_T2.1_3_sc-T5.1.hcs"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Resources", "ExampleData", 
    "{8,3}-tess_T2.1_3_sc-T5.1.hcs"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->189208814,ExpressionUUID->"70523d3b-5ce0-9a40-b324-58947ed5229d"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"{8,8}-tess_T2.6_3.hcm\"", 
     FileNameJoin[{
       NotebookDirectory[], "Resources", "ExampleData", 
       "{8,8}-tess_T2.6_3.hcm"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Resources", "ExampleData", "{8,8}-tess_T2.6_3.hcm"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->322189732,ExpressionUUID->"a5a83253-42a2-7140-82c9-42b737e26c7a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"{8,8}-tess_T2.6_3_sc-T3.11.hcs\"", 
     FileNameJoin[{
       NotebookDirectory[], "Resources", "ExampleData", 
       "{8,8}-tess_T2.6_3_sc-T3.11.hcs"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Resources", "ExampleData", 
    "{8,8}-tess_T2.6_3_sc-T3.11.hcs"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->125167819,ExpressionUUID->"3407d9ba-d835-cd45-b6d8-75d115357439"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"generate_example_data.g\"", 
     FileNameJoin[{
       NotebookDirectory[], "Resources", "ExampleData", 
       "generate_example_data.g"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Resources", "ExampleData", 
    "generate_example_data.g"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->963885359,ExpressionUUID->"efd53b71-35fe-6045-aeca-5f56d3975dde"]
}, Closed]]
}, Closed]],

Cell["", "FileManagerBottomSpacer",
 CellGroupingRules->{"SectionGrouping", 100},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->769472820,ExpressionUUID->"f31021a1-697b-864e-975e-d5f9bc174c4e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Web Content",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"WebContent", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide content that you want to display on the main landing page \
for your paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoWebContent"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "37ec9d81-718d-42fa-8383-4ab5ead72307"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "WebContent"},
 CellTags->{"TemplateSection", "Web Content", "WebContent"},
 CellID->184208365,ExpressionUUID->"9b2ffd7d-ae9e-4955-a5a6-483c12b011b2"],

Cell[CellGroupData[{

Cell[TextData[{
 "Headline Image",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"HeroImage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Provide an image that you want to display on the main landing page \
for your paclet. This will be displayed along side the basic description \
that's given below. The image can be given directly (i.e. pasted from the \
clipboard) or as code that generates the desired image. \n\nIf importing the \
image from a local file, use notebook-relative paths when possible (e.g. ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{
                TagBox[
                 ButtonBox[
                  StyleBox[
                  "Import", "SymbolsRefLink", ShowStringCharacters -> True, 
                   FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Import", 
                  ContentPadding -> False], 
                 MouseAppearanceTag["LinkHand"]], "[", 
                RowBox[{
                  TagBox[
                   ButtonBox[
                    StyleBox[
                    "FileNameJoin", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/FileNameJoin", 
                    ContentPadding -> False], 
                   MouseAppearanceTag["LinkHand"]], "[", 
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "NotebookDirectory", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/NotebookDirectory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], "[", "]"}], ",", 
                    StyleBox["\[Ellipsis]", "TR"]}], "}"}], "]"}], "]"}], 
              ShowStringCharacters -> True, FontFamily -> 
              "Source Sans Pro"]]], ") rather than absolute file names."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoHeroImage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "aa37ec98-9467-4817-b79b-5edf63113739"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "HeroImage"},
 CellTags->{"Headline Image", "HeroImage", "TemplateCellGroup"},
 CellID->509724307,ExpressionUUID->"ac2ab9ee-3e4f-4a98-af96-3c3c7463ee6f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsXQeYFFXWrQkEEURExZx3dc3ZNWBGJKqIrmIOZDAQDKgguGZQESWrCKiA
CKggKEFBFphEnpxzTsQZ0vnfeVW3p6anu6dn1N1/3Xe+79JDd3XFV9X3vHvv
uac//nSPPqGWZQ1trv7p8djzNw0Z8tiLdx+p/nPPU0P7932q95OdnhrWu2/v
IX9/PEy9eZ3651pl4ZaBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGB
gYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGB
gYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGB
gYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGB
gYGBgYGBgYGBgYGBgYGBgYGBwZ8MIb/BDAwMDAwMDAwMDAwMfiv+bLzjz3Qs
BgYGBgYGBgYGBgY2fk/ecpiyE5VdouxGZVcr66LsYWUPOa+9lPVX9rKyVxx7
SdnryiYr+0TZdGXTlM1U9oOylcqWO68/OO9Pc5b7xPne6856ZJ0vO9vp5bX9
Ls5+cf8uVXaassMbeJx/Nq5nYGBgYGBgYGBg8N+IxvrjLSybt1ysrKOynsoG
Kxul7ANlc5UtURajLFvZTmUHXHawHjsUhCGABfP9+vbhoGt/9yjLVbZR2U/K
5ikbr2yMskHO8Xd0zseJzvkJBoYLGRgYGBgYGBgYGDQODeUyYcpOUXaDZcc5
GP/43KrhLVlWYN4SDA/5s5gvzuQ+Lzud8xXjnL9ZykYre1zZLcrOUNYkwLUw
cSEDAwMDAwMDAwOD4P3hUGUnWzVcZqRl53kx/ytN2V6rNof5X+Iu/y5+5OZF
1coyla1wrsNI57pc71ynUN+XUcNwIAMDAwMDAwMDgz8TgvFvj1F2nbIHlI1Q
NkXZj8qSlO22/kNcJiQk5L/W/h3nx6odJ5JrRO5JDkouKlzoEcvmQsf8hjFi
YGBgYGBgYGBg8J9CMLlLzDe7wLJ937ctuy4/T9l+6w/kMv9pfnD44Yfj5JNP
Rrt27XD88cdrO+644zyvNH7O5f6offgPnQNvLsTrXKBsmbJ3lT1q2XoKvvLi
TC6cgYGBgYGBgYHBfwLB+KDHK7td2YuWXT+zzarJNxNO84f58A1dT+vWrXH2
2WfjkksuQceOHfHwww+jT58+ePHFF/H2229jypQp+OKLLzB//nzMnTsXs2fP
xqpVqxAREYE1a9Zoi46ORk5ODjIzM5GdnY2dO3ciLS0NqampqKqqQm5urv5/
rrNMenq6Xq6goADFxcX6tbS0FPn5+UhJScGePXv0d1esWKG3s27dOqxduxZL
ly7F119/jWXLlmHOnDmYN2+e/v/777+Pl156CQMGDMCDDz6IW265BZdffrk+
rjZt2iAsLOw/cm79mJsDUUchXtlXznjpZtn5cI0dewYGBgYGBgYGBgbBIpBv
SX1jah4/qexDy85dKrHsOXzab+I1jfG3W7RooTnLjTfeiE6dOuHRRx/F4MGD
8corr2DChAmas/zwww+aK5BvFBUVITk52cMxyDvIOchNysrKNE/hMuQl+/fv
B1FeXq65SV5eHjIyMvR3uTy5Dt/PysrSxvf5eUlJieYuXIZWUFSMrGy1bGGR
3h45DZchdu/erbe3b98+/f+9e/fq/REexfXzc+FU/B4/Lyws1NvasWOH3lZC
QoLeFveRHIvHsnXrVs2bVq9ejU8++QTjx4/X54Xn54knnkDXrl1x3XXX4fzz
z9fn8fe+NvWY8B8ZO2XKflE2QVkfZdcqO6KB49PAwMDAwMDAwMBAEGjevKll
5xwNUfaNslTrd4jVNNRnbtasGc466yzcfPPNeOyxxzBy5EhMnjxZc5dt27Zp
3588gVyDvj//Jl+QOMrBgwc1FyAHIEfQPEK9n56ept7L1TyG/IPLkx8I3yBv
4LrJffh/8g0uQ55CnlFZWam/x++TE3E57gM5io7fqHXv3n8IMQs/x+edTsHE
C8Ixt9dl2LxyMcp37cHBA/v198iPyFPIu7iPwp3IV8hvuC2+z+0Kz6JxO3yP
f/OYuYzEjfg3389Uy+/atUuvQ3gSj5HngP/n38KdZH3kRdOmTcPo0aN1vIvx
onPOOUdfh4Ze18aMD6t2DGifsgxl85UNV3aNsuYNGMMGBgYGBgYGBgb/Owjk
F7ZR1lXZP5X9rKzSqqmt+V04ja/lwsPDceqpp6J9+/Z48sknMWbMGHz00UdY
sGABNmzYoGMwzA8jr5DYBv1y8gG+J3EXeY/+O3178hIaOcuhQ4d0/ENyyvIK
CpEUH4vkmHXITklGhlpvcXGRXteBAwf0Nrgs+YLwCfIH8gKuOykpSa/PG+Qu
5A0ZartJSYnIzs3HitF9MOEvFqZefRg+OtdCzGfv6GWLCvL1/nE75Dl8JU+R
2AyPSbgN959G3sZX8iqJ+3AZnoedan9ychUnituGlE0b9D6UlVegVO2zrJN8
jaiurtbHKP9nbInLCHeT+BTf4zL8W5879X/m1ZFrPvfcc+jVq5e+bmeeeSaa
Nm36R3Mg0UPYoWydZdcA3ans6AaMcQMDAwMDAwMDgz8PAvl87J9C/eCJll0/
QX1hidn8Jl7ja5mjjjoKV111la4t+eCDD3T9S1xcnPb36UtLPIQ8QnLAyF3o
X9P3lpiE5I7RLyff0PEL5fPzfYnlCFfh++QR/H9V1V7s3rMX6Qlx+O6ZuzDp
4nBMvDAcP49/GTurD+DQwQPYu3eP/g75DY3xFu4b10uOQ65BPiLbkTw0bxzY
v09zktS1SzG72xmYdKGFaX8/DBMV15nz4N8Rt/4XFCpOlJmRrrkct5WtY03p
+pjJt8jveGxuTuIGYznC7/IcLlOg9nHZqN74+LxwTL40HD++1g+Ziv+Q9zAO
xX0STsbjkDiWrI/vcXsSN+I6aVxOvstj5j5XVFRoziT5dDzfzJdjTdHYsWMx
aNAgzYNYO9TYMVOPHbJqYj/U8Juu7AllZ9ZzHxj+Y2BgYGBgYGDw34lA+WiX
KRtq2flo+VZNzCboXLRg5uhZE8+cp3vuuQcjRozArFmzsHHjRiQmJmq/WGIw
5CoSO2CeFf15+sz03YVD0OenT81l+D59canzF45DbkQ+w8+5LH1y+u0Sk+H7
urYlPQ25hSWI/fl7zL7jbMVzLEy8yMJXd52N5H/9iPyScqSn2ctznfTn+Te3
xe1yX8TX5+fCTdz1OeQQ+5T/z78L83Ox5Ln78NHZFqZe1RxTLg/H1Cub4eNz
Q7D8zaeQmZOPRMWlGP8hTyCnYHxFOAW5CdfPc+XeB4nxEHzltpgvV1CxExFf
TdKcasrlTfDR3yzMf/Q65Cdt54Kay5Gr8VxLPEk4Jt/jvsv5lnMseXzkXeQ7
fF9iSTynsg8S++G+kH/y3Mh5lP1n3dQrI0fh3vvux3nnn6/jeY0ZXwFMuA/H
daGyhcqGKbvSqqv9ZniPgYGBgYGBgcH/f/jz2Voq66zsDcvOR2PeT4Py0YLx
OamfzDqagQMH6ryz5cuXe/Kx6N9y3p++s8Rj6L/r/C3lG9O3p9/MV/rg9LOl
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
puM2uocn+2peEuIy+/+6Tl352V/eewmWju6HLSu+0zrHlc45bwjTaWgem/TU
DEaLrSFcR7gKx0h98SL3upl7yBhCsPlr7u0lJCYhR/nfrPk6ULUXuTGr8a93
nsHcu8/TWhQ8z+SR+m8vYwyNdVLz778U68YOQeH2SK3nveu70Sh+0ukd6ufa
l6pxUfh0O8T1cmI7nnEuPF693nUYNg24GFs/fgaxSz5HwpYoJKYq7pOaZlta
ptbFi1+3HLFfT8CW0Xcj5v5ja3i9N99X69T3QWfnvqrFedz3kb97SZYP059z
v1Omv4BydRsnK67Da0AuQ+PYEI5D/iN/s76In0mvX86H3H777Z7nSANiPXw+
rVf2kLJWfp5nBgYGBgYGBv+b8O6HQ63oDyx7zjSoOhyPRvSJJ+KVV17B5s2b
PT1u6POQ6/Bv+jX0b/gZ53j5KjpPnOelv8Nl+R393dRkpBRWYuPoexF5q1XL
H4vqZDn8JNzx1cJrfDCPOe8r/hKjfLZ1t1lI/fJNlG9ahbhBF9nrJEfp5prz
7ixz22q9dzbHRuVjbr6/Lbb1+Su29z8fsQPOx+Zex+jPaNHdbf5kcxzXnDnn
w7n+fpcic+Q1KHvmKP88h/bssSgdfATyR12KlDULkZCRg4TYbbo2IzYmAlFL
vsaaT8fi549fVTYGP3/0KtZMexvrvpyEmJ++RdzmGN3vhnUcWlNA+e7sa7ov
SK1mb85ATYZspydqfVyHy0hc7vfiOlIHxLERbO4al+P4IW8JtieO+xg4Psuc
XjKCgwf24UB1lY6Psd6J/VLjF32C2PmTlE1G7DdTkPLjHBTFxqBqR5nuRXuw
eq/+bvW2ZSh+9jjn+nrHdNp63mfMp3zk2cgf2w2bHz0dUR2dcdk1rC7n0bHL
Zrb942jEPHkOYp74K2IePgUxd7dENMfkHc6YFq7i5igcrx0sbB5+E/I3r0XW
lKexjvmh+l5p4uc+ct1L3Rw+39k1X6D+jrqrBXLmj7WPe89uPX/BOjxeP8Zu
+X/Ji+T7jNVxjPma49i4cSNGjBih+wX7es4EMD6vii27V+nFrmea4TwGBgYG
Bgb/e+Dvf5jr/72URVgNjOGEhYXhhhtu0LXHnNdnnxv6MuQujOVIjw7xP8lj
pD6HfIb+Mf0hzvXye5zj5TJ6nl35+sn5Zdj49qOI7Gj7VuQX69tbOp6S9eUY
RPVsozlLlPhfjn/H/2s+pGzDXa2wbfxAxEf9imLFp7QvX5SLuHFPIqqL47vR
h/Se2+7srKeza35bWZ33as13N7G1E9TnW/95HxI2rEL++LtQ2i8cJUPa2b7t
wFYo/+cVKBt5HkoGuXKbhh6P0j6hyJr9nJ6zT0piLUmS1jHW9RkenWOXOTlY
WuvYWc4da3FrcTcEoscWTC9NqYvh9auPixD1cR3Rd+MY4DgJFuwBE1B/LUBM
h6/8Lntl1nMQjs5Zje63Tz273eXYMas/ivuE6ZidzW/UdR58JIpe+hsKR12i
ua2+9mpcFD0Zit0LR6CqrBhJL3fQOWE2T/cTc/Eak7Xfc4/LMA/fj+Y9dHcr
xH02EqnJifp6UVdwZ0Ystr1+H9Z3aYKY273W4dwHvI+ohRj54EnYMul5bFXL
R92k3r+zmf4s+p4jkbvE7sV6yNEMFD04jiVyUM0l1f2u+5uqscV4HbkOc9z4
ynFBPsT94jK8JosWLcIdd9yhnzNWw2I9VcqilT1o2XWG8szz7nNsYGBgYGBg
8OeBxHCE47RR9qwVhJaat49x8sknY9iwYYiJidFz4pKjxnlZ8hYa/ReZq6Vf
o7Wk1f/5t9To8DP6lxL3EZ1hbZrrlGLTO0/qXDDNde46DOuvsVD43YdaQ+Bg
9R7szYxF8fIZyJw2FPFv9ULiOw8jc/pw5C76CCkRq3ROja7PTkxCubOfRFFx
CRJXLsDW52+p8em6ecWIurr8zFrmPedt5/LQ79v07DWI+2kuElKzkPrrIhSO
uRKlA1vo2A35TNETIdjz/Rjs+uFNFA9RfvDTRzl8x+Y8Rc+0Q9rSaUjIKkQi
9bZcdSU+LYD/7u6NEizcnES00Orr+RkXF6e5woEDdXu8+FpvfVxHuFq5E2cJ
pm8PxyD3tSH5a24NhGD13gLioH2u9274EkV9m6N0aLtacbuCVy5E5pcvIY/8
t39zm/8qK+7bBBUfdsWBihzFFapREfk94p65zKORXov3BBqX7jHpxDsj1To2
9WyJ5An9kB7zqz3/oON+uZ7d3lel7tvMNCSv+R7xn41CzD97IfqVuxD9Unds
HtcHsd98jPh1K/U9lBCzDltG90DULZYdR6J+3D+ORt6PM+zz59JH59gjdxH9
Ct7v0sNH6qokV5L7Q25Lfs6Yj2gzcgzz8+effx6nn356nVhPPbyHz7UsZS8q
a+s898IsE+sxMDAwMDD4M8FbT+10y+5RXqRsvxVkjhrnVjt27KjnWumryvys
9FTnq1v3ln6NL79U8vbpv0jcgbxIcvtpOpYQu11znY3vPFGX63w73nvFeo76
IPXQlK9VWlyEjPQ0pKVn6D4oac46pTc8Ua38sGwn7hS/6ltsffthxNx3rD3/
7a7D9vIdPfPsMu+tfMmNvY7D1jd6IXblQjveEh+L+OxiZM0bbXMc5iyRzww9
AcWPWdj76zTdr6Ry2oMoYj3HEGfuX/m9pf2bIW/CPUjevB6JyWlOzXmQdfZe
fIFW7pWXFSykr2gw+gT0V0VTT66zr2tPBMN1RJdArld9/IMcK9i+QN65ckmO
3x+IpwUF9p9R+7kvYxNK37wOJQNbqmverua69glH9qRHkZCWhZzpfVHWN1S9
f7w9Pga10nG+6q2LnXXtxyHF43dsXonUt+7Fxrtb6VhPlDtmo/M3m9j6hO74
j9SkKd69vf+5KFw4DnvyUhXnyNcabskpNncl33DzYJ7hEnVt0tMU91OWzD6p
1H7z8G01DlLTkbB9K7a89TCibna4jieuM9Vej8N15Hkgcxh8dc91cPs8/8Kn
GUPkMrwOXI6xYXJQ8h/yHr5yGT5/evTogaZNmzYkx439ekqUfazsbOc5aDiP
gYGBgYHBfze863MvVzZXWaUVIE/NW2fgb3/7G8aMGaP9HXIT+hz0Q0VHVuZp
pQcn/Rb6j1Kr7vZ1+V0uK3lq7mX4OfP45fPMVOUPF+/AxtfuR8StltY3i7mr
Bdb93ULJ8s/s73j1iq+qrkY2a4HYK16tQ3xn+lDcP+FlNX53GTKzspHC2AX9
OuXHxS2fj22Thmn9q039zsfG+462uY/yNWPYx/TeNtjU91xsebGDWm4o4lZ8
g8Stm22fUGItCXHap839+H7l04Y5+WvKp33qKJSOOAvVccttfzByDkpG/EW9
f6TDiWy/uKRvE2R+/ToSMvJqx3YaaKJ7V29ulh9I/UuteJsPbiIcVeJ7v4Xr
iAWVU+aAnEjGX0NjOtKPxt9+BwX9PVsrffe3r2r+Wip6BIzpDDoc+a9djeTV
CxGfV4GMxRNQOti55k4eW3G/pti16BV7dZ7YiKNpvrNc8Z4VyP7seSSN7ITY
gRcgpkcLnb8Z2cGeB9j62KmIH3I10t97FIXfT9DxTl07dOgAduzcpe8Hnh+J
xfE+8+am/Lea8w55+XqegPcR9el0jmSi3YM1SY3Hre/1dXLYmtfU6yx4T6+D
9TpSd8fnhPBJ/i3b4XZlTkTyICX24x4v5EV8vjA2xGcN91k0DzZs2ICRI0fi
ggsuaIh2NZ977Hn8rbJr/DwnDQwMDAwMDP5/wzsvvZOytZadw+5TL9p7bpRz
ppw7XbZsmfZBpJ6GvqFbT0n8Dv4t8Ripl6CPIv0lGbcRvQKuQ+beJW+ottto
c57czHTFdXZh06s9dd9PzmNT03ndVRZK18y1lz1g5/ozdkE/SMx7bt/b5xef
y44n5ejPk+nPJ6c4XCUeiXHbdR5d4vYtSNi2WVsiTf1fv8/PuRyX17UyzjaV
L5iQmonU1fNR+Opl2s+189eOU/5sM+yY9gAOVjj5Q+r87PhisK7X8MR2lO9b
+nQbFA47FanLZyIhs6BRfEfiLW7dgOBd9xpdM7lm9elD8xwGygMLlus0Rpeg
oT11ZDs0juv6+qDWCyd3rSp6PooGtHL0xR0bciyKB7RE5owhSMgu1P1ydG7j
6MtRorWoj/XksVV+dAcOVjp1Tz56PHG8M8ft4L69OFi1Gwf37rKNf1fvwaF9
VWqZfbW+u2/ffn1/8hq5x4XUy+n1ep1nyT3leeV10nFc6oooLsLXeMXx2T9U
63N0sXT/0+RPX0LRzmqkJMbX4p3cFr8vPEa2RR4j8V1+xvuWsRzv/eHf5LKi
28ZxIRyNMSCuJyIiAg888AAOP/zwhsR6+Dxcp+xO17NSYj0GBgYGBgYG///g
rsVhPe4jymKVVVtB5qmdffbZGDt2rEdDib4HeQT/pj/Cv+kX8m/6KOQO9DW4
vMz90x/hnC6/I3EgyWERX1Repb+6T/exeq/2c5Je74kN7S2754fyrfh3xrIZ
KNxRhfTUFM+cscwh+/OduR/ePhTB2FKdmnYdn3H4S3KKD3M+85XfpThQfHYJ
sr58CSWKs0hdeumwE1D0uIW9Kz60d+CAPXd/oDAFFe/dhuL+zeyYjieXrTly
x/dA8sZ1vzmXjcfnHdMKBqJRUF9umJw7+tS/RYetMboE9Mm5j/XVFXlvR3rA
NKR/j++TxNjiIVRnbkbpm9ejZODhtXPX+oYj9/27dKxPxlZS3DbkTOutPmti
c1xyo6dao/TFM1EVOUevT8bHbwGPiXxG5iDc55jnX85xoGvGMcCxw/Xo50Jx
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
hek6gIgOFrYvmGL7TX5iOhKP+k21GQHgiS1UMqc/HSmKR+R+dJ+tReCupaEf
/Gw7VG108o0a0fPeL+jzKT9894oPUfw0t+nyhXUOnf1a9OxxSFc+eCJ1uePj
g9YscPOd+uI7cj64nIxFb50BvufOP/LHderTmhadrPr0CCS+0WhNioMHPfG3
XUvfRtHgI3VfUH2e3T1dFacsGn6KK2/td+A57uuQqq7B3JEoGdBMxwhreJba
j0GtsXP+8ygpK0WqOofp6YHrlhrDd0SvWfpSBc5ls89Z0dKpWOeJ7YQp3mMh
6t6jsOXLcUjOzEVC3HbP9fOlNeDNdeR+5rX0Bsecd62YLBtI10LqmtxxaYn/
cZ+E19A4Fnn8HEdchuvl84w8i3zcHffie/Fxseh1b0/7WR4aDtZcBuA8Vcp+
UXa587vQxDKcx8DAwMDgvw/MTxCOw5qcCZat0RNQV412/XGhmNU+BBHdmuha
36RXu6E8S/2W5xcixfER+fvM32z+dvN3ndyBv9H8LNiafP5eS82F91y5+Bpc
r69e5e6eksJjRL/VvX7JN5J5WpkbdeeYMReGticrAbGDL0HkLZZd56xjOqFO
TCfKpa9c10eTc9LonKVg4NQT7d5bhaIZA7QOWk0uGXPXTkBxv2bYveR1Vyzn
N+Su+dwHO59tz/rZKH7+dJQ81dqlR11jRYOORPakR5G0dSMSUtKCjvE0NL4j
2tze9SIyJty96v1xHanf8lffI7lrgfQIfnPemhNjPFCajYpJ92it8FocR/qE
DmqJglcuQurKLxQnSXc4zu/HNfT4Tk5D0rZNyJ30MEr7MZft+Jr4nY4xHYOC
eS8jjRodrp6dv6fJufTWl/A5HhV2Zydg+zNXKY4Tqvv+8v6NUvfxpqHtbS6o
89hq5lGEK8h6+UyRfDzZvi8tA9FH42fuay8akv4v737P97yfde5YoeTBSd0Y
40B8n//3Oa6c46/KS0b0Qydh/o2huOX40FrP9QC5bewLPV3Zsc7vRBPL5LUZ
GBgYGPx3INz1dz9lOZYf3QFq+YieT9dOt2NzUga2Db0WUexBrvyFmDubIfKm
EKTOG4dsp/4mh3lUTj8MyQOj/yg+Kn/Pg52Xl5wO77p7d+2LO5dNvic9KCQm
xFfvXqTkM/y++BPiw9D/9eSvkT8csP2e5Lfuw4abQux+OozpqNeITha2f8s6
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
cOWVV+rfB/5OBOA8rPlk7WdH53fH5LUZGBgYGPxRkDm1Fso+tmzN0IA1OUce
eSTGjRvnyZVwcx36bNIrvGrvHu0n7MmMxbbef60V6/DU7LjmDqM6hSJxZFeU
ZqdpLeqkBuQhBVPDzfiNcBjJn5dcNPoS4rdyPpTLCCeSHDX6opLfJroFVbtt
/2hncjS2U1u6g4vnsK73Ngsbn7oGcf9agaT0zFr+tmzjj+qfo+HW5FozHWUv
n4OSOnlrx3riOTbPkV4dCZ79lPqG+vSr/kgwR3BfynqUvXkdivs2RcnQ42r3
4vFwniNtzjPsJOSM7YqUtd8jIS3bjqdJrMeL9/DYpPbKX995jhGJD0q/RpmD
F67D9dDcsTDGatw1OqIHJutizppfHin85lANx6mOW4my9zqq4z/RPn7v6ynX
lHywX3Pkvn0bUjb8FFAP448w4fE8Rvf95To4+4X9lZaQ7zR3eu/U5js67+7V
S5G+fAYSU7OD1t5rKB/jvV3klYNWcxlqandi7j8OMToHt2behvlsMc9eh6St
McjKyUV5aUmtcSNchGOD4Bhz66jxfeHavjT7hA/542sSaxRNtWBig6XFavvp
6nz+axkiHzwFMV1EOybU0YxsUutZrXP2+l2AhPjtug+SPAv4XOUzgsfD7fP3
YMKECWjTpo2H8wTIa9ut7DNlbZ3fIZlzMzAwMDAw+K1w9wO9U1myZWuF1vk9
Yt9s+fvhhx/Weeeca6SPJr+vhNSy0K9j7Xb1HpsDpbz7MCI6uvhNpxBEPXyq
jnnovHB3TltX9dljZ2oN3BTdr6/+XH36KKIlXN9vPH0M+g7iv7u11Nzf59yo
5LDJ8fFVji81NQUVpXbvlKLVc7H5kVN07ZHnWDjvy+N89CxsX7EQSayd53E4
uTOi7xXMPjcONZpch3YUad1on3UcuhbmKBS/cCYyfpiMhBTqadf1h+mfix8f
bK+jPwqHqnZh108f2Dlbyg+2Oc8xfuI8x2j/OX/035G+cByS4uOQQP+Ox+jh
PfGe6yI1M760IeirS98difEID+bYEH+U40v4ErkQOZF7Pl78UtE+99b79fAb
VwxH5x0uG4eSMZejdOgJNZyuDsex89XYJ6nwuTOQvuBddcyx9vEm/fty1iSW
I/HKese44jt7f5li149xTA5x95PluG2juXjOp9Te24ZExtbifecnNsYkVisx
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
AoH9OCa6VOSF6PgQNmowLhd8Ofo/vY/wE+VnZl/AX3MvHgj3j/fC8/Nz8FAP
y6jpDHetBgoSgapCgWsoH3WkugJHfRya567RIK2AvMTlCtYInc87Yqwjt4HO
R/YqReP64RBctrdh+VNctubyAkY/TlD4bqRvQPwvU0oM712afXgN8nZOh2PL
FJRufAkVq0agZuntqOe8q0t5nQn1h6Fci5vnhboqdVvBhuCb8dzMXPFZN/sO
+q7aJbei4sdhKF3/AooYpsln9132oR85H82UEs21/aj/DT/mXMNcwTZHqaF2
tEOeb4p5Zfzb8vtceR+7Dz0HvxD3iE97uo+ihX0/rAx38tqwFuSRG+BYjnkM
bG6Ph2X3auTNeoJjAyfl7d/q4p97g/WrofleybnQXM7nc3pNagPQ3E1rW8SB
Ix0BWpeSa070ncrnOa6R8znHNoHzuQrf0PeOOYNz1Yo/GYDqvQvgKcmBt95f
g+cuyUXxjMEC3yjbTmtyBR/2hykpCofWRGDOFWKNb96AVhzzRM15n3/WU9+y
Wj7iXEitAsKvstcD4R26p2V9LeEh4rdFRkbiySefbArvkEbbZjY6qmIGzTTT
TLP/Dya11s5lY7cuiCaLnPdGjx7NNQhoXpR5cuL+0t+yXlKuDdJr0lfSI2Ef
WdffpM9NTYEpy4498/6LiFtPR1h/Hcc5s/u0woGvxsJVVc7jqZIv/sWxAfdZ
NBiWyHu/P4xRu0StKNc4E1yIjLRkGBIOI/OXmcj7dggc484KwD1N+Eo1BqL3
+0YnpY6mU8DroXth+7CN9KXsvY7Rp7LREaWzh6I2chXcxf/H3nXAR1Vl76EI
KtYVxF5RLGAXVuwFEVDsuu7q/ldFRUCadde2q2JfXZESIHRQAZEO0qQmBFJJ
m2Raep1UEtKmfP977n138mYyM5lJJgV4x9/9TSSZN2/efe+c853ynVxmE1vJ
7yz51/b+R9ROedTT1M+7AVnRawLq1VH7QhLHdnhuJxChenzCQIQ3qFaM+v0J
gxzOhtOazHEgzaV3pv8GR+ICho3mCHzkWuFwxM+GM+UnOA3r4czeBWd+NFBm
Eseh+Sy15WLWDeVq6Jq3YnZTK7+sgvmq4Ez7WpkZ6r12rTz2c7GfzWDcFmEd
l8/LrknKZ3DuvNfLeYhatrK47xVOjEB52VqzDHyWpgtL8F5+o8j/cAx0iNeK
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
l9eD4jihuR5NpS72V1hHdxGzfCQvwTsXw7L6v0g3Z/F6O89zMyj5ndht6zj+
mDFAx+3n7FtP4LaZ1rw7T8eyJ67Fjv++i4RdW2DKzoMpMxvGjCyGlSyuRfUU
RgvDOVSrUFiMjNRERMz7CqtfvR/z7/4T5wSiWQ/c1g/uiV0/vI9chqEKmL6n
mN97773nr54Nip9BM3i66TS8o4kmmrS9yHlflM8h/eOTU/p///sf16e8Zjc/
n+t6a3ER8oqt2DXtA4Tffqprrufsm7sqfNAnYME9f8Lioedi3Sv3YO+X43Fo
6XdI+TXMtZJXTEfUtPew9c0n8NOjVzCM1FvMBeXYSeGUJk5NdsywW7rh0JLv
UH+kmb53hbusevdclLx7sZjxJrnYXm2Gi62F/oBer+/EeQynK9Zv3/iSmG+h
zunMuQq1C4e0mJPAm09ANd/kC8s+V03aQ5QeHYZrncbpokfHjd9M5klGoG7/
aGQl/x4Qv7SvPQ4J1uFvVOIDxbvhjHxGVWPnXm9HvTvWhFmcl03r3Wn7peYk
CGkMR+Z2snaJmbzhA1UcBVfzWrbS9W8gNaOQYZ3kDr0Gnvc86Xry5z35ykJw
UcQLs101O37k/Dacg22ymIla/MEAmCM3ueY+ed8vyu8QX0EENn74Iu9nJRtM
9lSNeciezr/nLCx5pB/WTnocW6a+gV0zP2HrU9fa9u3bWPfm0/iF4aaF9/XF
XGbfZymxzNk3d3Mdb+H9fZG89Vdk5eQiJzuL63vipZkzZw66dOnij5M6gq3e
Om3mqCaaaNK20lVZfdjap/OCc6SeWr16Nbd1FKeXM8eoljc/NxeZ2Tkw7t3C
8Qz10JAOJLxD8R56JX1IOpfjlkE9OUc05b8b16lCF98s+DKpxjiM4Rr6W/7v
DN9QLmfjuIdgTYvlPJrNisLF1mCMRNlHAzgXaCMXWw9k/fY1XDXaIbCBsmar
086V4XNgHHCaN8O2eAhssy5rzOnMHQjnjAv5zHajPlHhpwtNzJyuC90rreJu
0iRwcZuj87DSo+OJGURep/DQYqXfv2V7HVKsI94szj9zKcNow7zkdqh352HY
I59FXhLF/HO13p02XHJ/iScm5DkMeZzqQtg3jRa89+ED3HI7NUsfQGbc70If
hTD/3tpFWEfy7IT0mihYx1l7GNUr3oJ17EnKDGuFg+0/N8GQHK/gHD/XgzhD
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
Jydi/n1n82ea4hc/9tche99m19+RfqHnWcZWvPUgBquDZXyddDDpRfU8nub8
G194R8xLtvBzlceQr/T3UmfS39J3Id3kpFo6h8Ba5T+MhJVwjqxb5txrZyDv
vw/DcOgg0k0ZrvOXnAuUR2o935rTvVaN/iVzF2zrnodt/s0M41zmtV6tMZdz
KeoWDEb+nlkwph4SuRytZs3nor2nPZR8HaEV2kvVPpbshTNhsojRc4wzyke9
mszlPIgjBychO3kL710+nvDq8Yt1SFTfk3gLSg/AGTNGlePx3scj6tpG8rmy
1QffZPfN79AbsiHq2kKT55H7Qnqf8tf8bI+bfWmJqK5NTQns8bNhJ6zjyvF4
6vGr+SweWnXzb0HlqueRdeA3pJpzuB5vDeZR4x2ygU1y2TK3U5qNko8GopS4
R2Wcj+bKTTgDOT88g/S8UuRkmJpwsZFvIGtFpF0nPODrPgkG50iuH8nlGmpe
U7oW5BtJrm76TKPJDH1KCrb/9z3erzNncE9ev/brX29Bdb3NxUsnZ5aSn0XH
ID+L4p0UZ50yZYo/brbpiv+m4R1NNPEtsrftabYO6zy4COj17rvv5s8e+Qr0
/Hqbn+jGxWwywpxTgF+eH4TZN3XBnEEnYuYAHeLmf8kggHt+hPQU6Tqpz7zN
SA52SXxCuo/ON1DuAl94R+Z2ZOxRflfSvfJvJS8Bx1cKr1n1hi9hnXR2I8c0
rbfOQ/HYXjDvWiFq15S4leTXbPX8HKdT4RxozAk5M3fCvv7vsC0YJHpyfNWr
UV/O3Gtgn3kRKtaNRUb8dlEDYTz++KRbYv9lr23oYtRO9308nA5nyn+Yn9pc
vdpjrr4ckcuZBZM+TsnlHNs1a9725fjFOlJU37eW+Yvm2ezeGaH08fjianOv
a6uM+Q8sKZFKL48+JHNIpc6XdcfH3760QiiGVZQA+6aXYfvxPJGjJ37qJnVt
V/Mcj332lTx2VfkrwzwHVzPMk8v1OuVWDGnB41f1TCQ5Z5PEbQ8ptxO7CkUv
6VD69vmNNvCN01H81oXI3DADluw85GZnub2XjkXHVteIk330ln8JlIdAxlQl
31Coao3V8U+Kh0puOfocGQOlGRqpifFYO+kxXufCedkG9cDeL8by92ZnCs5X
ieukvpIYkPAY9e4Q963OO1dBDVuvevhzmmiiSaNQTxtxtV/NVrbOo0eHnqlL
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
J4wkMYTk6Et8o+bA/1V8o3a+FqQkYcOHr2DmzTq+90uYhzj9ZE670Kwj7EZ4
i85N5rBkv13Oh4bQZpAxDH0Oim/ovF9//fVAWgVNzIf5xIGaafZ3NFmjcwnz
XJ2PFgF5r169uHYUzQPqelHKaUj8Ivmi/vZRCFuodQOys7OQsHUt5tx7Nh/b
Yb1PxbSrdajI0vufc4+S0ZwnsRthH8oJy7yPzIHLvl1COybLXYskNStlnMT3
WQjzVJahlk1NtclT4Qhn67iyN+/c2R/2DQ/CvuR2NM28Bk3TrxB6AAtvh33O
TWJ9oL2z4H8xTPMvj54AxzVXtYBrVNiG+Gm0/lD+htaW6RfyHgkVa4chL3IR
LEnhSi2OhWMcrQ/osXC6vnp3PQLpUFHtTHbqJlTFfo6m6NfhpL4lpKnm7gF6
iHocrh/dB/XRo5Gfslb0yaE8jlaT02bXsM6RMN+8gA0o3AJXzBtw7XpQ3Lst
9iP1YB6uVx31jMBL5tmiLkj9Pu5cj/YdHT3z9Pp0W0MlUGmF07gOjs3D4Zhz
A8M9F3jyPbSGUe+eZlpuvthH4bzx3I/QOeAYiHJAxMMOu5atWTejcd6t7nWy
kXJDy3vDsekROHcNUHiQfRg2fgnFKb8jp6Ac5WU2vo63hqtG8QjFLmptJYlt
iKshYxqJJY4GvvFyg3iPfYuDEXxdO8wiLbYbdVjc9x9orC5HHZuXZJ0AxRn0
N2oOCp27Oi6jzyX1byhuof/T56I4LoBWQQHza5U4UKvd0ezvajJ3uUHno0VA
Oc9TTjkFERERnKtK8wKNGYldpOYhjTc5Dluaa+jvqhmeKCixYfMXIzDrji5c
l2DWbR2wZPAVqK84dG+do20y7yPxD+310J4J7Y/IPA7NI/SZ5Rwoe6Xl5+Yw
vJOL2pQZbD4eKmp2+d4m80i2zkcOFdykXf3h3PAAHItvYZjmck+NTZjALKIe
NBCu8cU2N/BH2jujNcMVfCHfL6tcx/DN3jmwJO6GMS1exMKmLNWevxYPHz3P
4H1EBL7R82tPfeQt6dEoTZiBuv0jYY98XnB5iMcTMRAOzkcLrKsmMM4AHg/W
RY9lGGc1TPp4eLTVtO/0cFzDOkfSXN4/k2Zb0Rahkb77QaWeJzDmofvfEaHM
m7RHRLVqB16FK+VDuAr+FFw59+EdGsftmJifsVBfDpSb4NQvh2PL23DM7QX7
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
/zpOPmBFRUU73ogd9VlJCB92IiLVfVBovHARrEkxKC4pQV1ty/of4h3yN4lz
yN+lr1uJ7QS4+c+6ebdRviHF4W5go9qgEdMJDw93cg0N4l6j0chjLjToZxTr
Id0L4mGuW6DkVhUFrEHEsF5cf1r23aGYYtSsF5DM/JjDMYaMXx6xb0q1Omwt
qDu4WKnVOb25VuedE5G+bb7yWl2s+aTksqbGh6JyzeOw0Xqm5hyeu3YL76/j
sO48smPRbnM47x1ps85IrseWlhhwXLCO3It13uk6a6R9yNaEZ/dsVDQKWrIO
aU/7LJiFUxd/h2Whh1Bg7ZmxHZ11mk1qEmxIKMSJkmm0NAno64k78dqKUBTq
MZ1jOo5PziFTrqmqVDj2/puxzhMarPMWY528zmcdGswnon51eXu/Z37AZS1r
d6h2d8EVsO0ax7bmBiVH3wvWBVsjanZ8jaLRp4rYDq/ZOR1Fky9F2t6Vok77
CGp2aA0kv7Kt5mD7S+LkexWNLEUTeIgPwob3Q9Ke32HJyEYW81mJoWhtJd+V
cpboHn5VVRXPI6Kfk19L9/Ypp+m0007Tiu3UG0QulK9Br9s5HkzmG84zaMR0
XnvtNX7OiXVkbY6M8RED0yPpEzh12dzmHJnpy6e5jjnNN2ftziN9kByw/bCs
I2NGR8464j1ULniKXXtn8rw1XqtDWiHvnoHUiP1eUKuTzGuYqE6n4veXYCON
SS0tAr/LYI9bemTH4Yis+7GO3JN13ukak/rTi5NjcdYv3zOm+UJbo0DRn37X
fyPSqK+oF8ybYz101hGmhOZR1WDDmI3JrWoS+DDOuXTmPvx6IBY5aWZdZ/oY
jeOXc8haY50RvL9Odeh4JJlzjw3rsH00mffdMaJo23uwz7tIm3fmXwX7wU/E
e7fVo3NzPNpmTelRKHpDXbNzFs+hob4eyZb0dvcUpRw2tRbW4Yx8zrKQTQhR
566R38n8z9h5E2FKz2J+lpGvq/T8VHtO6yv5tjSIe2QfUvlziu2MHz9eK7bj
YOM3Nz9aN+80GdM5h41igxvr9OnTB4cOHeK5ksS8xDv0NZ3/NuVPKn2fGkrz
EPHUWQiX2mzE2qSLMel+JCfEISXVcy4bzUWal0ekxaZskvaybJR8dJ0qf+1c
fg0WfHk/TAnRXVyrk8xzgIlzyv94XZW3JrUI2NdLbuf9Qm1Bs45xPaKadd7p
Nqwj92add4692dmconykioZ63Lt5FQyzPxXaa+7608Q/82fgplULsTUqHJmK
JltXz5tjOXTWEdakaBIEppfhwi8OwjB5J3yn7tLWXxu3A48uCkKmxYzEHjZf
umoc35xDJlnHxFjnbg3WGYrKsKmMdbKPEeso17+J+T4J4Shf/zxsfhTf0dCi
Zl87wmeL98+12bp2fXBUl6D0o2uEjyVrdsacjvxP/4oUS1q7a3Zo/SMfsK3z
ylZbieiXLkXk0N5KzYS4vx7+8pVIofseCmvJnGiau/QaNIhv6LWIbSi+Q99T
vIfu9beiyVbOxuWKH63HdrzX5PmZanDrp0Pn9MUXX+SMQXEb4huK51H8htY1
+X1Dg9A+9LgHK35kwfZFiHq0f3Mu24g+CH3YgOSAba1qstEcJLaXr9Muo9dm
vnpdwE8onnShSmta9NXJXPuZuPa6rFZHaFjSmlayeQyanD10VJxD8RzinF1j
gbry9h+DozXOVszXiHqXsc7D3YZ15Dqn886xNxnb+TT8IHrN/0LRJ9CK7XwF
X78ZmLl/J/LZPpl0nM2vox066zTHdMhm7U3z2DtUahKc8fEefLU1CoUZjHWS
uv4cdvdx/HOOykoj4Nh3r9ewDuXVUy8Ha8w+1KweKu6DLrrJNd+DeIf9zBH+
o/gMXcw7joZqVP76JvO1zmzOYxsj8tgs+9dD5rC09RgQe0hdtMOtfQ7mqxTv
/w0h9xu4f8n9TLqnPqIfEnesgSnV4vG1aQ7Ta1EdBs1jqg+i+gzKW6L7+vT1
22+/7dQlNrjW7Xyj8qd1806jc9OfjSyDW0yHHkNDQ525a1IPjUzW7RD30jhc
LiXNQYotRr95rcI6Ps2xnSkPITkuxqNOgWQd4q12mxIDKf/uwWbOUWp1ikef
DEuIP1JSu6qvjpFf99RHp3TjKLZuXePGOaI+p8lvAGxbXgKqcuTRbP9xOBpT
NOwc0eMY6zzUrVhH7tU67xxbsym1fJGF+bhh7WL4zJ2uWbcj8tg+x5A/VyI0
IR6WHqZRoLMO3a5y8BXPUlKHe36KhOHd7Zr5azzO864/7pwdgKgEI9cH7ol5
j8dydCvOISsJ9jLWocHWvNR0pEdsQ/3yu4WP4M471HtHzTt8z+6idYLqMWM3
o+i/fVA8UemzQ3UD489FzoIXkWzNbnMeG/l9NL/aqjfdVFuF6FeuQOSwPs26
a+RnTroXpoxszZgSvYb0YymWI19D5rNRXId+RnlNVLdOvSY1WKeQjbMMemzH
W03mr71kEHmHLr1DH3roIR7LI6aluUYxHLme0Twg/5D2YZqLNE9a7YGj+JDF
B9cicuQJCB/s09xjdKAPkiMCPTKHzKtsN+vwG4I2NOUlC/01p9b0OUJr+uuH
YEqI6SLWEfEcylsr++MNXp9j4/FoFeeQtvTCq2Fb+whQapYfqn3HoCOsm7OO
+56t886xMdJka2Ljtf3bYJjzGXot+lpTf5p0Ck5iv1sYdACF1vQepVGgs05z
X6blkXnoN34H+kzd3UKTQOoS+E7ZhbFrwlCcYdY1CTp5yDWTfATpFxz3c7Mk
xAtZJ0VoFTDeyQpZi/olf2FcQ37CjRq8czPsYT+Iz+Kg+7xds5fZK/JR+tG1
rtrTY09D4YfXwRwXIfQJ2lBH197eOlXxATym46zTGWxA+GMnI+mQv8fnl5xT
XV3d/P7ZviQ1uGiOy5wi8nEfe+wx7h+75bHRGKf403psx/tMnpNEg4p16DzS
44EDB3hMh841cY6aNYh1aH7QXizXPJqTreWZObgemh0xr1+r1O0QczP+HmhA
zJzxSE5M0MwlO2LWUWI6VavHiuuNYqoyf23UiUjf9AMEcxxj/TWuz0/9QhOd
nNMinsM551reNwy5Ee373B1tPYB11Hu33m/02JjMY1tvTcYFy3+ED+Wy/fSl
dmxnzjS8sW2D2J+8YK4cq9HTWYc+K33a4upGvLQmAYbRWzXz17gm24SduPar
/fgzKB4ZFpOuSdCJQyue0y3mpbeyDu2rxDvmNGQH/iL6i3PWcecdUb9jO/SZ
+DwOWyf3GvdgtkZU//4Bisac3pzHRjrUzPfKWPMp4zZLm/TY2sM69roaGD8d
iohHlHpwpZdO+MR7YE7PRkpSy1gSPbc758jXodeUeW30tfybqKgoFz/Z0KxR
kGrQWccbjWI6pJM3iA2bQVWnQ+fwtttu40wrY3juDEPsQ3NE7se09lGOG80d
j/lsiv+Yv8VPxHZUOgWhT5yG5NhIpKS21Ag4ohw23gLTBntFHko/voFrvItY
6jlcE6R44oUwRwaIXr7HcM2iOA5p51viglCx4WUPnHOz+Nmvd8GRFdj2z9xZ
1kNYR72H67zT+UZHl3LZqpsaMWTHeq4/zblGU6NgJq741Q8bIkKRzfbJnhLb
6emsI3Wmd5tLceqn+3g9DtcfcNckoPy18f54akkw8tLMSNRjOp02ui3nkHkt
69CQvGNFzsGfBe8scuedG0R8Z+E1sB34iF1Ait9mP9b5hQ40Zceh6J2TGN9c
0Fw7MPZ05H32V1Gf3QaNgvawTkNJDkIG9Uakqk4n8rGTkLhzDcT9bNc1gZ6X
BuWttXj37HWkj0vvQfIO+cM0/v3vf2vFduxsPGXQ9ae9zSR7HjKoYjoyD3HF
ihX8PFMvJfX5l4/ENXT+1XuyrHugOaGlP83/l62N9voaRD19NsIHG5x5bOEP
GmDcv1mp2XGNsxyRNoES06nZOlPogciYDvu6ZOwZyFn0OuP8hDb1Mu2oQXU5
Rksm0iK3oeo3xggLLm+dc7K9gHPIehDrqPdynXc632Rv0a9jQ9CfMQ3lrGnq
T1N+29zP8dHercixCD22nlCL0aNZR9EksLEp8rG/BYZR1Du0ZZ0O1ySYvAvn
frYXc/2jUZBOrNP15647jm7NOWQloV7MOjQU3km1IvfQz0rdjgbvUD78/KuE
nlGtopdrPwId26MwR301yr9/WNxfHifz2M7gGlFp2+YzZks9rEYB+X3yHnqr
r8X2keI9yxH2EOkQ9OUxHbqXHvbCAJjSMlrUB0m9A/d4jvP52Jwm35fy2KRv
S/6wfFy1apUn/eloN/9at641GdOhHkgNBjfttQEDBqC8vJyfa9KkoHw1dUyF
5gfNE5qHWvuy7Cuq5SfKfjuJHwxExBBF91zRKIj59i0kJ7XMY6N52S7WoaWX
sY69Mh+ln92iiulITYJTYAnZzjjn2NXpUDzHaMlDVvAq1KwcCNv8AW660sQ5
t6CJ4jwr7vaOeI40J+uM7xGso97Tdd7pXJO1GJaKMvx1wzL4zJmmGdvhmtTz
Psc965fiQFyM6LfTA2I7PZl1bIrOdHxeFW77MRSG8TvgO1VDk4DrTPvjgXmB
jIFJj6BncPCxHt2ec8iKg7ycdWhoxHc0eYf671wO2+YX4SiKF5/PdgT6Tkdq
DjsaEnag6M2+Ko0CwTt5n/9DfI42xHZo/SPeaT1/rQrxk+9BpOxnMsSAcMY8
0d+NEjrXyc2sQ/NY6q21ZlSbQ39Hr02D5j5ps5EuMa3L1113nZb+dCMb9xn0
2I63mGRO6oHUQntt1qxZ/FwT09AeK2u3iH1ojZO6BFrzUs07pNnWYn4quaOl
wRsR9fjJSh6bL5ujvgh57hIkx0S0yGOTc63NOi9KTKd6zQSh//Humc2aBOzr
vNmPwZQUf2xiOslGXpdjtGQhb/+PqF/2b8Y5VzSvR1JXmjiH/dy2bhgceV1c
n+NiDmfOryNqdLfTnG7L3q7zTueajO2MC2J+7NzpPK6jpVHg+9OX6L/gS/x4
aB+KeohGQU9lHfqENuVjLgjJRu9x29Fnass6HQPFdN7bif7s8f3fI1Ccmapr
EnTC6JY6BC6mfJYKo1f11/E8qNeoqN8RvHOL8Cdc9NkU3vEbgCbyK6y7xGc8
hj1HHbXlKP3iTpFb44ztnM7rdtL//J+oIUhuXZNNsomnXCGyxvJChA7u45q/
9sQpSA494BI7ovWUfFeqQz/c/KV5Tusu3Wcnvpe1GeQL0Hv68ssvPcV2trv5
2bp1jUnttavYqDS4sc7JJ5/M54TU2CPGkdoAFKuhOSJ7LnmamzSfZP9PuT+7
zH+7DY6mBkT95yyED5J5bH2FHltkYAvWkZqDbfI3edJDI2y5iSj54CpxXbnE
dE6F5dBGET/t5PWIr4m0HrFRtH0qGhbfrvQJVdUS8v45t7L16DLY1g4BCuMP
/xmPqal7iY7qVr1E27PH67zTeSZZxz8rDZet8oPBbwZ6aeSx9aGfzZ2G57as
QbwxCWbSn+5m88199FTWsSuaBDkV9Rj5aywMY7R76nBNgvH+uPXbA9gbmQCr
2cRjO1193rrTUMdzpL/Z/eag7CVqZazzbw3WGYKqsCmMdXK8hHVoNOsV5Bxc
zPyL2zT0qJX7qcQ7K+6GPW6p8nHFnt75h9WO+sh1KHqrn/C/pC/27hko+PR2
mCiPx5hw2M96uHrtKmMQwh5gfDO8WX8t4oVLYErPcslfo3lMdeitcZPa6L6+
u5465ReRf5uYmIjzzz+fx3XcYjvVbNxo0PWnu9oka/7PoNE79PXXX+c8Q0bn
mOIzNEfokeYJ8Q8N+poGrYOe5qes53KfVw4l7hL77j9EXIfy2IYzHn/YgMQt
y9j1axJDeR7iKppzbfI1bSLfqvLn50U8592znDGdEnZ95c5+HCk8ptOZ+Wui
Z06SJRvW6L0o+/M1vgbZqGZQnbPG++fcjqY5F8C28VmgKEkeoTZdh8fG2sI6
j3Zb1lHv9TrvdI7RbCft6TpbE57c9ScMsz/V7LVD2tOGBbNw9tIfsCI0EPlW
a7eP7fRU1pGaBBsTC3HSVMY0pD+goTFNtTqGCTvxyvIQFOk60x0+un88R5pk
nVQN1nmUsc4g1IaOQqI5z4tYh4ZKny14NeqW38P8jCuUOM/1rmP+lfy+qu3Q
NOawK3Uqts6v4bHXlKB05h2usR3SZGO+WfYvo5Gcpt33Rj1oDnrqaUL+ZN7a
WeK++fDeSl2ELyI+GgGTlfkkRqNzLrdWo8OfS5nb5LPKe/u09qrnvoz3kH/7
ySefaMV2aCx187d1O/ZGx556HlHvI5eYDg3qlUTrGrGr7Jsja8OIcaRRPI/4
g/ZhGlq587KOi/Ii1eujg/uLDlj83hWMQ7xDOZZsrsb+OEbU7KgYip5D9nNq
/aIS87E+aDmvf3PpHTrxApSMOxPW4K2dm7vGdeOTkGTNQ86hxaheOVjkrLn3
zqGx5DY0/Xg+bHsmAOUZbVk2usAk69g9sM6jsAU+hbSkg4x10tAdWUe95+u8
0zkmYzvzk6Jw2uJv4bPgC22NAt5bdBom7tqEDA/rTncaPZF1HIomQV2THRM2
mxSd6ZZ1OqTH5jNpFy6avheL98Ygl/TX9JhOhw0153TfeI405XNVW+DYfx8c
gY+7sc5A1IW85YWsQ0PqFWQgI3wTqlcPh93vUsY7t7rxDmm0XcWZh9fw5EWK
z2xr6FxdajZneN0OabJNvMClbqfovcthDfhdfA4PaznFdOheO/mAWmavq0bS
e/c3Mw7zJyNHnoiEdXOFH0k6NkruGs3lwxn5tvR6tObK/pH0vZq1yKcl1qFr
5IQTTtBinXI2LjWIuI4e2zn2JvPXqOeRS0yH9PMGDx7MdfZoTlGcj+YZnWt1
rqLaqEaL5o7Mp3T3O+h7WWvjEn9U1ssyWbND8Uaao0MMCBt/N5LjY1x4hOa6
li6g6/UEfo/CXpaD0mm3uekRnIeS0Scje/FbgkU6JaaT7NSTpseibVNR/8sd
GrU51wudSLrvMvcS2AM+AWpLVB/C28whRlM1HBFvabDOCDQEvQRrUhCSuzHr
qPd+nXc63mTOUkl9Le7ZvAo+P34m9Ai09KfnzcBff/sZ/tGRjHfMXJOtq+dG
Z42eyDpNiiZBWGYFLv86EIZJ/vCdqqEzrWgSDP0pCNZUU4/R5jsWo2dxDpny
2Woy4Dg4nLHOSJd9TrDOO0gwF3gh69CgNdDEeSctejcq1j8P+7wLFd65oWUN
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
JyB33jMwJcQeoe6aZJwkzjjJqdnIDlyG8vXPoWHxX7l2PdX6tWAcZ13OhWha
eQ8cxrVs7axQX+HtWQ68wxzKfb6MlWztf0LE9l1YZyCKo+fxY9VTWcfdZ9B5
5+jMpqwliaXFuHX9L/CZ8zl8NWI7Io9tOh74fRkOxsfCqlFTeryPnsI6NiWm
k1RQjb/PDYNh/A70maqRv0Y/e3cH7p5zCHFJik6SF5yn43HoeWtqUz53YyUc
SV+KXO3Ax5x7HdWlNgU+g5y49ZwXTMcd69AQOW3G1ExY4gKRv+sLXr9jX3C5
0C1Y5BbjIX+GemZQnGfFPbDtHAtHbnjzIbPLe9ZHNmdsZTko//Yh0R9kwnmu
WgXMn8te9i7jnSylz6jQ1JZsoZ6n7nGdcOpf8vnTyMjJQ3Zmy76FVEfhqT6H
np+uC/KJab31tJfT9SJrNaSWF72v559/XiuPjWI7pFHga9B5pzNNxs0OGDQ0
Cfbs2eOsx1HzqzunyEF7r5wjMsbjSQ+a4jey3kf+L80liinamwRrx7x5o4s2
AbFO8iF/pGcxvmDP7TLXFD5yNEjOkfGcc5za0lSzk//lPUiNPNj+Gp1kI0zK
dUW5ahTHoX6gFb+/iPpf7oR9/mVCR5rrN7rlq1HN3wLGP/Mvh/3Ah3AUxje/
7+N5/5CsY13o1Jh2ZZ2HURC92LkWdf163vW+g847R28U26HLZtShnTDMmYZe
P30l4jsaGgUnsN/NC9yH4m6oUdBjWEf5TD+F5qD3+O3oPVVDk4DqdN7bjX7s
6ynrw1CUYdY1CY5yrep5emuHMXsdYFko+si5sQ71zM6PWcp7Zh+frEND6CqQ
dizlu2SErkc59eLxu4TnqFC+SguttkWKPjUxz6oHYds7GY7s4OZjJjUMjkCr
2padgNJPbnL2QXTlnbNFT0TiEaVHu6zbkWshbRItWIdy2D4eiczcfJSWFLm+
HmMUyj2T9ejyuMi6HPJtyT+VdeUepwnbn6RusexTSl+TP23QzmOLdfPHdetY
k5oE17JRa3DTJLj++ut53IR4hfIO6dzR11S7I3svyVxG9f1SdV4bnWOaN+qc
SPWaSXNSXfdDf897OjUQHzkQ89o1LbQJUqJCYUnP5H2dmiepYCN7WS7jnOdE
PMeFc87jsc/86f9AasgORcetLb63EsMhxmHXPvXIobzW3P0/omLd04xx/qEw
zpUta3Loa8pXI/b58VzYfh8Jh2Xb8R/LUZuiw+Iwfu2Sv8ZZJ/BxIOBB5Mat
65G1Oq35EOqcEN3ab1KjYDPzZy9eMQ8+fjMZ73jWKHh563qew2Y6rnLpDz96
Aus4FJ3pwuoGPLM6Xump40GTYLw/bvjmALaHJSAtVdckOJo1So/naJiD+RkZ
qxjrPMRY53EV6wyD/dDjKIyax1gnXdGe7vpzeeQjmee8UIwnNT4Eeftmo27Z
v0Ve2883a+S1yZ48AwT3rLwPNv/RcFi3ux4/3p+nrbEe8TdNpgCUTL5Y+HKy
zyh9TX1H2ciZ/xLv6UHMYzImcX+SeEVaeejmZm0CrsPWC+Hj7kJadi4a61zz
gqTmmjp3TdZn0HOSDlZrWsNqo+uH/od8X/KjiX/o+1tuuUUrttPIxl8MukZB
Z5lkyK8NbjEdOg+zZs3i50/2f6XzTqxDfEr5aTQniGlk/Za71oDch+lv5P/J
3EiXGKPSa1TyET3WVgtttZgXLnT214kc3hehbM6mG+OQnZcPu025ZpQ+oU3W
UJR/P1AjnnMevw9Q8MG1sB78g3FOBlrnHOIbo7h+KIaTmsEYJw+WmH0o8v8U
1b89ioYlSq6aJuNcz9cDPihfbdkdsEcvAMosqgujm9zXV3opO2LfE/e6nDqc
knXuR2bCNn6vqzv5mB3hS+i8c+RGq4eNXUM1TY141H8DDD98oqlR0Iv6jS74
Ahcsm4PfwoKRZ+ledTs9gXWaFJ3pzcYi3hu0F+OaXlp1OqRTMGEnXlwWgoJ0
XZPgaNYmnXM8GTsWeTvh2P+AC+uIfIZHURrxFZJMmd2AdWgoMZ5UivFYkBa5
HcXb3uN6S/b5Mq/txpZ5+pJ55l2KpuX/gm3Ly7AnLAdqVTEUHutpbAP3iN81
xG5ByfsDhC/nwjtnonjM6cidPRKpUYeYb5eO1OREzjtSn7cmNQqhD7r113nz
JmTlF4nabsVo/VT3gCQ/lO690/fk72rFcoQ2pMNV962y0tmHkr5W/47e1/ff
f+8ptrPAzS/XreOM+LEfG9kGt1qdPn36ICYmxqkjION3xDfy/FH9Fn1NMR/a
b2WcT808cs7Q7+g80/8744uq+SLjhvQ/FksqqirKYa+rRvR/zlRYx5fX64QN
74/U+CjU1DeIXFAlrlAftQFlM+8UtWwt4jmMcz68DtZ9q/m14Om6dvINe6Q6
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
Q/lfw5CXZkBWXjFjmVyeZ0Y8Q/sqMYnQjG7qtZjqQYQOMT0KDeKff/7ZlUbB
9yqf3TMaN8Qx00sq1hFMGRoaymNr6msmGTGryFs81VwW7CPie/T7gncEA4n+
OoKNiHfIaA3E6Y0o2jdR5hOKUZ6WZ1QsIzTSiGd47dudMi+Rljvld87rCsvc
q+Ucz21vwOb3tZyblhkMFCUx6C6vPznbax1OQ4ZgnYJwF3rT/VAeOAYmrjft
6a3TVPPwTsOH0CjYYo7HdWsWwMt7FucazdjOgukYtnuz43W4FZzvxlpbYx27
ojOdW1aDt9bF8Pw1l5oEn/ui+/dHse1ENJJNBo8mwSn2EA/nNNdQjlsl6U6/
q1zznHSnT7zPr3vuvK+cfVNzjxLvYfxjjA1FYvghpARuQubhn1G4fQTK1g2Q
890WdpU1DoRmrtLXXWYgmYMsXONazUKnY547YKXHHW/DVpqlnN2zszaInUR9
Oq1HoXtAGgXnnXeeVs1OGrOOkod1GjtELOwuZjWSE+f07NmzNvYi+umo90WK
vdB5ErxyOu4Re6y6D63QmCYTz0FfUzwnLzeHc3PiwvdRuUCpszndPPW+GTWM
ZWooBkk5aPOvYTxzFXu8Vo7jrH8J1p3vw3b8G9iifoU96RDsWeEy21SXamxj
Ng/fNHQIvemMXbCffF1bbzpkBoz6COjjPXrTZ2Ie3mnYoFVrZeu3zFKD/ns3
Q5rnSqPge0iLZ+Lm3xdhc0gg0t1Yo6CtsY7Qmd4Xn4fLpx6G14T6mgQU4+E/
G70P/1kVgMxEjybBqfYOD+c05xBabAWwx3wlX/dqdaflHDbKZ0iN2a30WWhP
WmxNNVWem8HEe5TqTOm813sCYx8zYx+q80nzX4Xs/TNRuGMkyjYMRdXqJzmn
UM0PjwEt+jvnIBv1EPG5jddsny7uY2W8VD6vO5L/+gVpWXnIy8nisRytehuH
WeCkOaxlzoPq2Km+Q+RHiRp3ymnq27evVh4b1e08KXny2Bo7RCxsqqTSXxNx
s9WrV9fq4VFsR9TcCL0B8rXUeuJCf0/dK8fZ6JySpjj9rthzhd6a0KKg63M1
e13qjVtaXITQd2+D/u0LUbXwdlid63FUuZo1S3ugatMrsO96F/YDo2Dz+wrW
UG/Y9FtgTzkKe2YI7Hk6oCSN7Utlrvet2vobz/7fqCE02ExL2F5P97X6O9Xq
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
4BGMvsXB55b6vfwZeSOuQ77fbUj65EaEDb4Om57piuAnb0TMvu0wZeWirJg4
CtXM98/l6z5pNjof2vcoThAVFVXDaVYoOgyLTTqm7xQyWicmJqZmLydeHvHB
6f7RedP5035PeXxk5SXF0LI9Yvvw17CknzcWP+zNruFVOPjatcj98e/CtR9x
PWfiCf2OJP70nzl3Osf3NqQu+S80MRECp0DVeusZHT/dw1bttyM+/9WmY0zr
DHDQOj3Z6IXKFf2Y1ol1Q62j4jVE+qRTKD/11SX40s8B6vl13id4rBWthmXg
wK0uLEPlcRVKFx9AwX8WwNLdpy63ujksA4r19PDl3Grzy9OQOTIYKUG7oTl9
QYj1pOg9sZ7k9tE7PPeLfcwqLcY/9myCYsEPsvzpzlzrTMMjoSsQHh8Ho4bp
1Wb2VXK11qmsFnrqnDDk429zTkDhHyYb0+lMX/M5gLeWn+Tv8luSh9fY4dE5
TibDi67ONaEsaj2KVrM1YtoLsIwiXnQLWQNj+/N+OFb/Psie/zFnDeiP7UJy
UgLnRfPcB08Mp42GiusdrTIOpadGiayCt+T1TsIPbEKUu68PYNXDtuhOpnX6
OtTrPICKVQNhOBdRc76tcR1pHZF841YzXp8j7D0VqmMoXP4xcoZeh9zhf6jL
maa8KvbfFoo5DLkK+slP48DLV2P9k1dhwUOdmK/uhZjASTCmZ/A6laysrJo/
Qfw4iuXQ2kh7Xm5uLv9cUT+uQ/phjpOucCeTjilY4cAkoHPo0qULP6eCggKe
wybFsKQesLT/0TWQ9oKy0lJe03PhxBGsfOYmhAzwxtL+XbCorwJnfvwcpUeC
kDfjMWRLepPfiz/V3gv62pAuyJz5DPQ7fhGY+DRvWmF9o2OnIe3drTYPmVWr
tsC2sh9swY5apwfK1vwDmsQzbqd1KKaTfMkanbf4OodzbB0sz2296+exhk2O
ZaDKQPnWaBT5r2Ea51tY7hmOvD5jRG51M1gGFOvpO4Zzqy2Pf4+sj+cjbcZm
6H+L4npHlelhGbSH3rGJ6+3k01FQLJ7G+dOKkPqxHarluSpoJqYfDYfFYGx2
HpurtY6Uljn9sB6KUfsaZhKwcf13EZj521nkmrStnr/m0TmSyfGimUZVHkfJ
b7+gcMlnQhxmOLEGHHnRjdQ44x1YA/69ucaxTHwaGSE+SPltGbSnj/HcDorj
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
lqFdkb7oPWiP7+H8AdnaN9I6SiXCZo7i8RxeQ8988gNj3uZ/w+7YP4v59FSz
45inRes/7WeS1qF3RPTfivpxHdI6PzvpC3cw6VhWKJx661x99dW8DxLtA7Q3
kBZw1AN2fn3s/N0YaQVnDUjrm1qrw+b/Dqy5rqR1ErcG1rmu9e6tuEbbsrUo
3DCc6Z3OAi/c8f6yweM7myaJeqdl+Wy0/9G9dORnt9gkLkHYMFkGW8H2z6BO
im83rSMw11KRcX4Tfz8j1Og46RxiERx7Hkiazu5LK/fE8lj7mRzLINOKirB4
FM/cDusrM5B7/0hYHvRpPsuAfq7fWFgf8IH14THIeXs20r9dBeOGcLY2K3ms
J1mnueK41a2td6Q8tj0pWty+diG8eC5bfUZBZ+rBs3gqPvrtV57LQPUvje3N
2VKtQ1qMRnZRBd5ed75BJkHnb5ne8QtHz3nHsPdUAlJ0xCRwnZ98Rcdz5FgD
5UWoOLMHxVsmI3/uv5if1AuWUQ/wvp3Nj+EMgHV0d+T7PoicWW8ifd0kGCM2
QnP+LK9/VumMwl7sYQ1csUOVrIMh6TjKqM/4pVgFMR/BnndGnIztqHc4i22w
E4utO++5kxM2RfDBXKB1pBwol+Wvic9y4Qamc4ZcVbc2R9Q5ud9cjdSVI6GO
PyXkiPKcNZnjoxzEpETs8ntX5Ex3RsijXRA5cyj/G87rINV0SL1mJEYBDdI6
9L3E86Jcr1tuuUWOO73NSV+4g0nHckjhdLz33nsv39vovtHeQHE5ytVz1DqU
s0f6zzF3rWaIWmfbl8/W1Trbgi+hdUQT9Y69tADFOyex+9xVjOk46p0/1eod
usct9I1oLye2nsv2PolLsPF5JwZbb4HBxp6xZM5g07TouJszuM7RpCL94g7Y
Tvyngby1d4S8tXhfNvGlOq0rxC/wmLxJ3GpHlkGFDZWntShdFoHCLwN5PQ/n
VjPd0nSWgQO3upcfz3HLfXYysoYGwjR/OzSRZ6DKMEKVahBiPFcIy6A19Q7H
T9DeU1mO9yN2QTF/omweG9c/TAf939rF2BR7Ehk6Pa/5b5Rv00KtIzEJtidk
46aJh9Fp7EFZJgH/2ugwfLHuFNL1Gh57chWTwFHnXFHxHIk14GC2NBXKDq1A
0YoRsE76O3JH3sd1TtNZA7UxHKrjoRiOlX09a/GXMG37BboT+/m1VZoyBZao
hzXwOxlqrg9MF/eJ/sObqM8qEPXO2W9gL9KIc7WdWNSVJag66OvEYuvBYz2F
W953CZ+AdAD5whQPcImJOqdgs7+gc/ycdc6fuM5J2fQ9f1dIsdRL1h2JWmf7
sMGi1vFmWucqnF0+Xfh7Mmsh1eVIfVlo/afPKf5BRnsBjSeeeEJO65xRuF+P
HelY9Aqn433hhRf4uVEOG9Wy0HlJ9fsU/yCdI9Uwyb4fFLXO9q+er6N1ErYs
vbzW4ddefC6Y71W884eG9Y7PrdDv/Fl8n9T8uUqxKfJFXKLJJS5BQSpsqx+F
LfB+By5Bb1QvvRup0aFsH297/pqgc1J4P+TKk58Axwc3wFxj+ufUh2zCqxxP
ymO/F6O1z+bEMjCaUbEzFsUTNsH6zCTk3jMcll4t41ZbHw4QuNXsZ7M/+Alp
kzfAsPUIkomPnJXCPqqFOE8Hz29rzX6jUmxnaWIcrg0R++rI8qdnQ7FkGvzC
dyNT3zZaR+JMl7O55LM7mcd05Op0OtHHgHDcNuUwQiLikWN0HZPgitM5EpPJ
QePYqypRcfEQSnbORsH8/yBvzEMCa6CZvGgLj/sQa6AH7/uZO+V5pK8aC2PY
GmjjoqE0EGtAYNN68tR+j0PD9U7Ghc1iH763GmCzMf/i/FigNE2aqG3/vFTb
YI8LEli4yx1YbEEPoGzNE/x81C6oJaMYCNW6tPx4xXjOrqnIHnotcv3vqKdz
zMNvgHHrDKi0BqZjki///IlaZ+eof9VqnYFdcWrBOOFvNrAekt4h/UZajmpa
aNDaSedK8Y+3335bLo8t30lfuINJvXXKFE61Op999hnXM8Rfoz2CPtI+QedH
sSupX1KDeRBs7pDWCf1okBAvI63zsALJv61tPHtd+j527wW906Wu3uH1Wbcg
O+Au6CLWMb+o+flgdO9It7nED5G4BMk7YVvVH7bgbnW0DsV5dBdOCDWbbbg+
UQ8dlZqdZ+JRlEcPEVkETjpH4klGvweYI6UTavk18VjHtBqWgUOsp7AMlZFJ
KF20HwUfzOe5bZb7Rwpxm8eayTIgbvWDxK32g/nlacj0WQZT8B5oTl8QevWk
6Dt8rMeRR+1KvSO9n0kpKsBTuzbAa+Fk2dhOZ6rlWTwVj/26EkcuxENPPRwb
cdwt0TpUp0Pfejq1AN3mRUPBa3Xqx3QkJsGrQSd4Lx2VKtklMZ0rqj6nhhdd
u39W5aaiPGoDitYGwDr9RZ6jZvHtUae/TZPz1Mb2F2I4/n2Q/ctHSAudDf2x
nbxPB8VwVBqdJ4bzux8iq4DpnRyq940aLN9nlOudV2BPmAxUiDqgPfRORixs
i//qxCfohoqVj8AQFw6h70fz9xXSAi6pgxCf7ZIjgchhesbi/+d67/fNw2+E
YfucpvVfoXqdpCTs++5TBPX3rok/HJ36tfBnL7EmlpWV8T2L/GPawyj2QdqA
8rxGjBjRUM3O9Qr30jpkDfbWIT1HOo72ODo3+m/SOVJe4qXyvQU2gQGrX/iL
A3PaC8Zju5t17+vqnVvr6B3LqJuQPaEPNKdozjYvJ4zmqcvY0/Qss+OuOj5F
ZLo7cgl6omTds9AknmW6o+20jqBz9NAnnUTJqZHy8Rwe03lb6KOTsbfl18Fj
V5bJcKttynSUbT6BYr81XONY7hmOvL4iy4DY1Y2N9QxwiPWwn8/vNhqWx79H
1qcLkDpzM3R7jyOZ6R1Vpth7sIOyDGivoLXT1XqnSlwnv4+N5L1DO8loHSmX
7Ro2Zh07CIvBiIRG6MaWaB0xfQ0/HjHAy2c/1zReckwCNv4wPgLTdp9FborW
JTGdK4YrLcMaqFRHo3T/QhQu/Z8Qh6EYzpiHxJyzpvKihZ+x+vdGPtNKuROe
RGaID0x7gqE9fQzJOqPgV4l9OjrquwbPcPUQWAXUazT37E8iq+DdhvVO8lw2
j6W6/TZ+DkuyhRw2B61D76Arlz+EzCMLxBzMltV8S+yuZq8x4s+VXzwAs+/t
wnv9Ory1W2EecQPTOXNFnnQT8u44hy0J4T/6ihw2QeuEjXlHPOb68Qfnc6G1
n2IeUk9KytmbPXt2Qz12+rabomnYZHvrBAUF8XOhcyI9RzqHPtJ/07Wj/U/i
s9E+KPccUN+iZY//oUbrEHPanBxf75pefg446p1JnEftqHM5c2/4H5A54xmo
E+KFmF4T56qkyylm1+L9UIxB2ra87sSa7sWfr7zdw6FJuiA8X22wJqmTlVAm
63jv4+IYf6ZzXpXvoUPMtWMvAcb1LTt/j13ZJhfrMReiIvw8SubuRv4bs3l/
UmJXN59bzUb/sZzfRhy3nDd/RMbYlTCuPoDkhCSBW63XdkiWgaPecVX9jpTH
dizThL9tCuL9Q72D5WI7s7kWenvXJqZzhD7Gqstcu+ZqHeIR0HelFZTjxZVx
UIzY1wCTgOmf0WEY+EsUjsYlQadpGhO7Id+jQ+sciRftyBoozkN57A4Uh05E
/o+vc1a0xadbC3nRA3iOmtW3J3LmvI20DVNgOBQK9cVzUKUQa8Ag8qI9rAHP
kBuC3lGrElFwejLTOy/Ks6jJ34hieke9QOQc2dGmeqeiENW7/sv8rwcFP8yB
F5W/439Qak3Nrtkh35H8f4oLCI9u87VOlVkPy8TeyKWeoCJ3WNI5ucOuhTF0
ctN1Dh9qvo5HrvpF1DpdEfSINza+cb/wpy9Ru0F5A9RXRuqrI62tpA/Wr1/f
UI+dN9pN0TRsnypkeuts3769Jn9NqkOiWBadL+0f1GuH9I/EmpbOn+seqill
I2b7GoQ8djWC+3tzrUP9WiuLC5o5D2r1TtGmUTAzbVObwyj2Uhp6NdIXvifm
sjU9Jknzlc65RXsif4TZHl+UAduqAUKOqGOtTuA9SI8MFo+tLep1SOfomc6J
RXHs+AZ0jsSWfhbQLKnT78hjHmvQJJaBY6yn2g5bnB5lKw+j6JsQ5D08RmAZ
PBxQy60e0FSWwXhYe/sjn+me3GcmIXPIEph+2Qbt4RgoUw1QpRtrudUd5J2z
pHdcxSuQGAVlzD/+/Og+KOZPQpdlc+UZBUGzcMuq+Vh+KkroLXqZXKTmap1K
kXGx/lwGrmd6hmI3Xs5MgvECZ1rhF45hm2KRaWg5Z7pD6xz+PNXtSWJLuYDS
iGAULRuGvAlPwjLiPlj8+4h65dFm8aLzAh5C/qj7+edZS76GacdC6E6GQcXu
syol04EX7clT84zGDA20yjgUxQYAkQ3pHeo1+jLs2iXizG5DvVNdCfuZRULt
dI3WEWp2Stc+I9SXJzevZkfiElBOV7NNzE+1zh/MfNvr6vYJpcF0Tsr68QKD
oMk6p/Y444+GIbCPgvvjFINY9sR1KMnNZH++7n2gXDxirZE/TPENqVZHysGm
z0n3REZGNpTD5k49dqRjmKiQyWGjGI6kdajeirQNnbtktIdIWo/2lLq6Rwsd
+/mwacO4fuR1UAM6Y/snjzE3ugW9pUS9Yy/NR/7S95A76kYnvXMHZ1MQmy1Z
q+Nxu6bMBSk21yI+AT9GpnWoV+/KfvVrddh/6+OPCjnPrb7+KDkfknROEekc
eq/CdY5cDx1iS89svxizxzq2ybAMqtMsqNhzBiWTt8D63BTkMs1j6dECloHI
rc6nPqf9xyL7vblIn7AOhl8P8doOqutJ1jpwq9t9/7/0cDWfTYrtrE2+iD8u
n4dOQfKMgk68bmcahh7YDhPzbZWX2d+bo3UkJkFBuQ1fbk2EYrg8Z5rYa17+
4bhr5lFsiLyADKZ1klqQvybVkXYsnSOyBhxjOJUVqIjfj5JtM1Dw83uw+PWG
ZeT9Ii+66ayBPIk14NuDM6Nzp7+C9DXfwXBgLTTnYnjvBpU+BR5etGc0d5Cv
oU+KRmnMKKZ3Gug1yuM7g2E3rKqd+23la6Sfqt9TlGmdipX9YTizB0L/zebN
e1p3KBbQLKvpoeOD7K+7OrGl2Rh5A1JXDBV9xubva2ri/Vw4j+VP3sC1TjDl
Wz12DXThofzvl5aV1NTikB8s1avQ+k8fJT1HOkjqI0R7mLe3t5zW+clJZ7Sn
ScewVuHUW+e6667jGofOjbQMnRt9fqk+SVTnUqt70qA3GLH+ze48ThYyoAvX
kDGLvmPLeQtz1EW9U5Wjh2XaQIG9V0fv3I4cpol1R7aK97jxeof2SDrHFmkd
MSZSFTZUjJFKfXWEZ6tkwyvQJJ1rg746SqHvF3/X8u0ldM67TOc8BzjWDnp0
jseaazzAUJdbjdIKVJ5QoXTJARR8vAh5PUbzHDeuYTjLoCncageWQU9f5D/o
i9wXpyJzeBBMS3ZBc+qcyK0WWAZqN4/1uFLvVEPIr84pLcFL+36FYgHFduQZ
BV5Lp6PvphDsizuDFK53LuHDNEPr2KqE/LVD2jzcMTMKijHhspzpzvQ1nwN4
b2U0dJpknrvWXCaBxEXtMDqnhjVQe4xVWTqURa5H0Rp/WKc8K8RwfHvWxnCa
nKf2KGex8Z6fAf2QveBTpP46B/rIPfy5UKZ4WAOe4bpBfo2R2EeniH30skyv
UTG+E/Uq7IaV0oOANvE5Ss2wrXioTlyHaqkrl/VFdthkJGv0Io+taedM8RJa
x5u3fgv9QktPrudsacuYOzhvS/Bnb4HF549In/uKkEPawj6S9O5fmZiAbV9R
H5guAjOMfdzn8wbM1gKkiflbdC50TrSWSr0naY+ieiQ6R9J09G8U+6B4x513
3unuPXakY9incDrOPn36ICEhoYbBLOk3KSfRcf+ot5fQfWN7rfbkQYQMuopp
HaFWJ6ifArnKs67Ze0SOR4XmJMw1sT4HVgGbH1mTB0JNNTFNyGWT+AQtYmnQ
/lVRCNv6p5366vTkMR3L3nHQKC+2cl8dIQ9fo7qIgtOTLq1zjr0IXGRaqDxb
OoGW3x+PeYxMhmVQpclE+dZoFI1bD+tj3wvc6j7+AseAx3oaqXkcudUPBQix
Hvbz2R/PR9r0TTDsiuT1PDzW4+bcalfyqG3ie5pZ56LhzfRMp5DZ9WI7XiJ/
ukvgTPxweD/MeiPvZdOg/9IMrSO9LpoUroNi1D54y8R0OJNg7EHc+H0E5u6L
gzml+flrHUfn1OdFk1Uqo1C652cULvqE6ZT+yB1+L+9p06IYjl8vrnFyJ/0D
Gcv9kPLbMmjPRPH4Dc/5p2vnYQ14houHKlkPU2I4KqI/571G7Y3WOy7qwdmQ
VZagmt5BUx/REIc+O+y/ize+BhWv2WmgF+clhiOXoOlmR1WeCeaxf+N1GHXe
27OR9V1PaGKPCP5iC55TzhFjvi0da9TKuQh8SMGZ0+SfL3vyBlyMOQ4N85Ml
faNWC/U9En/MsbcO6Rupdp/iG4MGDZLTOrFOOqM9TTqGOIXTcT7zzDOcLS3p
VMplk3qG0r5MvVPl71ptjdPBMW9zzkPQI5251ln3+gMoLSqq/d4W1/8Lx1Ya
vQE5I25Ars8ttXOEWAXDroFp2RDm52gbrSuk+9tQ7OryJpxTtemYyJp+oG6t
ztK7YDq1VTye1qnV4by1ZC20yUznnJkmrjWX0Dlxo9hFTK1z/B7zmEuthmXg
8CVrCSojLqJk3m4UvDMPlgdGwXJ/81kGFor19B8Ha/fRvLbHPHgm0v1XwLhi
HzTxCVBlmqAy6hy41e3vEzgORx51S+I7pHXoMseZs9Fry0p4LZkmy5/uQnls
iybjpe3rcDYxARp1coOMgqZqnapqIaajyS3F44Gna/hrDXGmn1l8HKcvKvkx
NIaB7Tw6hM6RWAMOvF17QQ7Ko7eieMO3yJ85GJZR3WDxeVDQLN81lzXwiBDD
IdbA3PeQtmk6DIe3Qp14AUpjBvPn9CJroOX9RDzDM+SHWtA7CXtRefIjkfl6
Kb2zyuFBaUW9w549e+JG2JbeU7fPDvPTylcOhO5idJP1BPmMpHOa3UPUXg1r
0L9hHnlDXRYBsaVH3QLtwXVQ6U3NjrlKWkWKz2i0OugT42vy2IIGeHM//cAP
X0JjSIFKmVSPryzlO0lrKq2xEpuA9M7LL78sp3VUTjqjPU3qa5qqcDpOOnap
zorOS+qdKp039ReVv2/CHpcZfwLLHrtWyF8bKPDXToT8yPZKE9dQjnmNLdqT
xBpOynO0jPpjXb3jfwfnF+iOhNY8f42ZGzQnqD6pWccl5a8dGS/25+3uoHV6
oWJFf2gTTrdaXx3SOUo1u1fKWBSemdxAPOdNB50zEihSS3ei+ffBYx5rrDmz
DJjZLqSgbO0xFA1fwfUKZxk8NKaWZdBozePAMujjD+sDbF14aiKyvlyE1Hlb
oQs7CZVJ4lar3I5b7Qo+m8QooNqdYVFhUCz4Ad4yWkfqN3rj8p+w+MQR5BqM
DTIKmqp1bGL+YmB0Kq4KCIO3TO6aUKsTgc4B4QjYerrZMR231zkyMRyb/ixK
wwJRFDyEaxrL8L/BMqZvLTegGawBK/t5Yg1QD9CMoGFI2bUYulMRvNcg8dR4
7aonhuMZbTbUzBfRI+3iDqZ3Pr683tGFONQKt6LeydOJWseRPd0dlcv7IvPw
vCazpyUuAa0/TTU7WxtKI5cj5+vOdfuFEoNt5I0wbpwosN6VTY81SaNG47C9
hXKyrNZ8lJWX4cjkLxDY34v3vaRcthV/vwUXTkXKairK56I9qea42fpK8Q8p
BvThhx/K8QmsDjqjvU06hmKFE5fgiy++4DVKpEvoHpJulc6b9ruG7qudrenE
Htjx2RNc5wRTTGfQVVj57J+RfD6OaUptDb+arpVjL5tm70/UE7fYAsuMx5zi
f4I2zpz8KNRJjc8Zo/tK592s46F3dpUlsG38p2z+mnXPSGiUrcOaVicnQqlJ
YZo9CkWx43iurLzOeadW5xQmSwfevGvvMY8116RYj4NVZ1hRsS8OJdO3wfrS
DFjuGwnLg6MF/nQLWAbErc7rF4Cct+cg/bs1MGwM5zltxK1O1rkXt9oV+WwS
o2CHIRl/XrMAXoEzBf6a06A8NsXiKfhk7xboKKadnCzbM60pWoe+TqxpS0kl
Pth4oUEmAfUT9fILR7c5x7Dj5EWY9GokNVHruC2HgI6h2okXXV6Eiri9KN4y
FQVz3+I1OJw1MK5/M2I4A2o0EXEG8n0fhHnm60hfOwHG8PVQXzgr8qKNgt/m
YQ14RpsPgTNL714bpXeYTyLwqEW901r9Rpl/VrXtTTGHzSGPLaQ7ijb9i+ex
JTeRPU3rIvnLTTJaJ4tyYR57Nyx1WAS3wMI+ps99VeBrNVPnSGsj7Sfkb9P7
e8fajDxdIvPNr8YyNoK5r+6NnaPegMaYAlVS3b9J/n+RQ04WGb2Lo5gOxURG
jx7dEIutq8J9tM51CuGY6hwr9UKl60NajvYRKaZDg7QAMdmc9xSJr3Ym6Acs
fUjBr13Io1dhaW8FjgROE+pN2X4qXX/SPDRH6Fq1qCZXPI4KzQmYfdhcGXVz
nVy23KHXwLhpgrDmN0Lv0PkRh6LpfAIh39RuPCzw14Kc89fuhil2G4T4kmvz
10jnJGlMMCQeRUmMj6hz3mxA57zg0Tkecx+rYRk4PG8VNlSe0qAsJAKF/1sK
Sy8/gWXAdEvzYz3jYGW/h3Lccp+djKxhQTAt3AFN5Bmo0oxsGNi+kvz/7F0H
XFRX9h5L/tnNbjbJ7iZbspu2auw1pm2qKaYnmmzapu1ukk1iLEgRu8ZuYuyC
Yu819oYdQUAlqIAMM8PMMHSYQq/DfP977nsXHsMDAQtm846/8xsGmVfv3Hu+
953znetCy+By8Q5dScIbeeVleCt0B9efVstja7OYYZ2gKbhv7SJsPRuFNJMZ
Fy8T61TIzUN3J+bgd+OPo5W/uiYBYR3d0IP4aFUUUpONfL9N0SQQa7mSA2tx
nKOmNZCuR+mJlShcMRSu8U/A/vV9cAzv0jytgWq96J48T83FcFLWvH/Btu17
mMP3SrXHtizpWZqmF615i7s33hH5bAPU9dlIjzppNpv/Ze1mz1XofUHPxs+F
qOaxlS9/AMnnT6KpWmcUM1LdSlMtf80gqXeKMndt6O+Q7ftXGM8clbbfhOdv
NE+L2Jr4JorhCYPVxykcn/BvHqsvkbWSSa/g+OKpMFlTa+EdmmepRkdphJvo
9xS/N9BP9Pe66wPrkN2pk46p1rGOGTOGXyNaZ8lpjaPrJ+4rXUPlNauS63cM
e9di6aM3cX1pXqvTuw3Wv9UdiXEXqvWflbVO9Er8H22f8uLENpu8Zsk5AgXb
RsPhI3OAir47OT5/hCkmrFEa1EJ/oclYR+SvhQ6q1adKwjqdUbbiEZjiWVxl
uLL5awLn2OIPoiRqkJy35t23WMM5mv0ErKqubrU7ORtlP0ShaPR6uB4fJ+lW
d7kM3WrSMujpj7z2Q/hns977HmnfrIdl6zHoqYclcT3XgZbB5eIdoVEwN+4M
bgyehtZL6upPt5LxTutFk+F/eA+yks2qGgWNxTqe6lvoge/uJN47VK1Oh/fZ
8T/EsNARLDx0DvYUI+KbcK2vL5xTVy+a3TBUxB9Fyc6ZyJ/7PhwMm5CeGumh
NUdrwCF/xjW8M1zDOsA+8RmkL/eHdf8KGGMikGhJg95ik66Plqem+XXlTeF3
XuO9zD2JU4ASuf7lavT6c5pQGdyhFtaR9Ni6Inf/KOhN1ibpsdF81KQabzZX
VCRHIeeLX9bNXWNu3ja9WTU6op6e5ulL1oqw9wVpyVj5zO0IefBGFq+35fzE
8qd+hzP7tjC8Y6vGOzTXKs+PtkUYgPZH8fKsWbPq6yfarcWQTV3rqVPprTN7
9uxanBydJ52vyE0UuXs8X0Hmc6zHdrLrdgfXluZaduz6hTzyK37dDCp8Cq2f
QteOXokPIz6l2Rpo7gp4SgthH9tNodknYWXH4N8gbf570ti5RP4Y8XV0/5qE
dbgoA1vrirJQuebvtfPXlsj6a3uGw8D1165c/pqEc1KRErcfZZGfyjoEajjn
LQ3naPbTMZHfptCt9hSWouJ4Aopn70H+e3PguH+oxPU80Dwtg2rd6o4+nO/J
fWESMoaFwBqyF8Yz5yXd6hRJt1rKb7v28ePl4B23PH8Z8514aPsatJo/UZXb
act77XyDv29ZgZNx55DM5mpvfYDGYh2hSXAuoxDd5kRC53MAbQPr0yQ4iBcX
n8KFi9J1bSync93gHMHhKNYJtz0NZREbUbRuBPImP89z1Bw+neS6muZoDTzI
++lwDsevO7JmvYfUTVNhObaNjcl4zuHU1ovWMI7m16Or4x11PerXpXy2uNFs
zjdKX6yqy+jJqGaVJaja9c+a+Kya2+mA0tVPsxiNxVaNzGMTetNK7uSSxuYN
54yn5H4pt1fnrpGGcMb0Z6U+Vxcbl7sm4miaE2lupJwroZfWGEvas5rX04c8
chOP24N7tcK6gZ0RE7oTJls69AnxPEZX5rDRGkBxMjn9X0hIiBrWIVzxVEsB
GxXrr1PBOsuWLeNrCTnHM2w+p2sptPUKiINR1Fsa9q/Dmv53IqiXjut1Ux5g
ELt+h2cFwmC2oKGcLbGO0vbJaT2l3MImm9x3p/TcLjmX7bZaPXfsX/0apog9
lxw74jiaFFvI+646vxSVS7vLmoZe+mvR23i/myuTv0ZzRyKbO1KQeX49yk99
wnDOy3Vz1gTOof45Gs7R7KdoalxPYhpK14WjcNhKjlkcpFvd3U/WrR7ZeN3q
B2Suh7QM2OfzSMvgkdHI+ngeUmduRvL+cCRZkmUtg6QW0TJoLt6RNAqk6xYY
fRy6eRNUNQqETsGvlszAt2GH4DBbEe+F65qCdchmhVnRhnAOwzSt1HSmAw/h
RvY6bkcM7CkmxDeyd6iyPqfFcI6aXrQxGiUHFqJg0b8lHmbQvXD69Wi+1gBx
OL5dGcbpAPuYvyNz8WDYdgXBFH2M1+DwemW2jhg0Dkfzn4yr4J2TLzaAd/rD
c84HHteP8vfuCvI7lMem34LKBX/xymPrgIqlPZAauV7OAbr0d4twBs1LjX1G
T3Fz6enNyKGeocMVdTosXs31uQPGyP2K63Xp6yr0oUXc3JR6EDF3hk39EvPu
13E9McI7Qd10WPdWd0RvXw1zRjasFjMc9tzqz9D8S/uj86a6+7CwsPqwzhst
hmzq2ls6Fayzb9++6r6pQnONOCuuO200oKxUyt2rqijHudXfYcWTv5Xz/hjO
efgXWNhFhz0jP4L+YuPmYqHjLeqCaL+Es+rTtq7X5O+Da9E/OEau4Xduh4P9
nCZ6Mhnr51ZEz6QmYx1PJSq3vso5nBpOh2GdJV1QtuoJmOJjrlD/UInXJI2T
nHPL4Y54U+ZzGsA55wM0vTXNftpWrVutyJ3NLUD5gXMonr4D+a9Ol3SrSYeg
bzPy2wTXQ7rVtI0efsgZMB0ZI1bCuuYgDHEXkZiVwnv2XGstg+biHaFRcCjN
gr+sXQjdoilSjU4dbmcG159+e9dGJMp1M0r96cZgHaoPol9lFJThpRWx0H2t
rknA8Y/PQfT6PgyhZ+JhNbH4pxFYp0V1CITWgKJeuqrQibKzO1G0ZQLyZrzO
1pdOXDP6svSi2WdcDN/kDe+EnJkDkbZmPCyHN7CxFytrDVg0rQHNf8KuxDs7
UB71GQu0qd/omyp45w2pfufsp/DYw+VvHX3/rtB3viBNqqsO6Vrd513UHeRt
/QiJyamN4naEdmaj5+WKEtjHdJF76Sg5nTtgW/ql1PeqkfslTkVwOd45Zo03
D8oLXDgwfADmd9Jh6SM38Th+EcM7q1++B8eCJiMlPRMZ2bk8h6uKYSnCAqKe
nyw6Oro+rPNFiyGbujZYp6JNcOHCBZ7vx/FNSgoqGWbNSEtFDnE9zjx+fmmn
j+DomI94j1DO5zx4I9dcW9hZh11+7+DihXONqo9RuuDjBD9G+/fWf7jUfaNn
bpWZeuT6/tmL22Fj66ubZG6n/uMS/FWjcRaNK4Z1PKnhqFzaw0uToAvcQfch
N/QbuUfV5fUPlXrnGPlrbuw8WWftlXpwDtXnPAvEjdX652j2v2O8KMRLt7rK
g8qzySgNOYLCz4Ph7O7HuR7SXrssLYOuvsjrMAz2J8ch84tFsM3ehuRj0dCn
WqBPt0pY5xppGTQH7wj96aKKcnx4bA90s8fhhpBvVXkdXdBU/GHVPKyKDkcW
i6mV+tONwToVMqez7lwmfjPqCK/JUdMkaE35awzrfLkhGpkWY4M9TIW3GM4R
eWoKq7TFo+TochQs/QrOsY/BQVoDvt1qcs4azeEotAb8eiBvSHv2c19kLfgM
qT/MQfKpA9AbjLJetFHTGtD8f8Sl73uiwQpb/AGURf2X4Z3nVfAO8wjCOy/B
E/U+POk7a38vL9fc5XAfDZCeTbM4rVavnRUPIvl8mFSzc4nnWWJuasx8xDmd
qA3I/fIXtfuGDr0N2f73Ion0gi+huyb0B0StzGVre8kxYVFuBnb8+3HM6yDl
s1E8T7lZSx78BfaO/hgXju6B2IuF+AAzi5EZLsjPz0N8fHx9OmwjZJxxPegT
jNepYB26ppTzR3jHSliHnZ+jpALpGZlIDj+AiO98sOH19vy6EOcV8vAvuY4D
YcHdgf/ExfOxMBib3+eV7idhVlFnJXr9NMrkGtH8NV+x8XSHoufO7VzLj3M7
ifH1cjs0dglvNbpuSH7W5973WS0+R+SvUT6b5cfDbN26vDodwkr0PCQ5MQau
s1OB8BeZv6qOcyLe5BwwEqcBZbI++JWYHzTT7HoyT938tiqbHeU7TqN47Ea4
np0IR7vBcHS6DC0D+lzPAORRn1OGnbLf+Q5p49fCsvkI+DPKLBv0JqOsZXB1
Y9Hm4B3B7SzVn8dvQmZW99Wpg3eobmfhNxh0cAfSTMm42ASsQ1U6JL9WUlGF
L7Yncp3ptiqcDuEfnX8o/vDNUSw/dh5Z1kv31Ln2/XPqag14KspQcT4Uxdun
IX/2OwzbdOcYh2ppJD6mqVoD0mdcPp24ZrR98otIXxkI64GVMMZGI9GaLuXs
J+k1rQHN/2ddz+KZlITDKIkewvDOc/XgnQEM77ws6VJbV7PvpRyXXa4mNT2f
zohG5YK/1u61wzUKOsOxx1fmdhqe05uEdcqKkOvN6ZAeAYtTLRsnyrztpfcn
dKSVPMDlzInisy6LHvt93sDc9jrOW/C4vndrLOyow8a3eyJs7khkxp1Gpt0J
e1EZSsorq9cFnTrW+V7GGS2JdcS+5+i8sE7r1q15rC962llYjG0kfBMyDbuG
v4VNb3Xm14JwDeX30fUgXemlj/4aB6cOQWJCAsM5TevHpPo9kPErXUvRq6nR
PCH1+XGmIdfvL7APvrUutxMdWq/+NO2PXhuHdTz8O+fJs6JyZV9UBrWvpUng
Zjgnf9tHMDBspW8gb65h18saBGmwJhxD4ZmR9ffOofcRA+E5/hxgXMACHdHz
VcM5mv0PW7VutWK+Ly5HRXgiSubtR8EH8+Ds4iP1KCUM01wtA+J6OvtwPQP7
898gc+gS2IJ3sfkkFvqMFN6nlOp5rqZutcA7je03WiU/48gsLsLTezbw3qI3
1KdRsHASem8MQei5GFiNNRoFl8I6lW5JkyDcmod7ZoRDN1y9f2hb+t3QAxi4
9BSf19R6+ajFEdcE56jpRedYUBa+HoWr/ZA38RlZa6Cz3N+muVoDvXjPT5df
T2TP/hCpm6bDEraTxziJtkxpnajWGmj5eFRzza+mky6t5WI4ik77c37HUx+/
c/JVKaeNevCUZMqT22VqFlQUwb3lNbnvu5dGwcrHYEyIvWQeW2OxDnE6Zed2
IvcLL05nyG+RNaozkowN99IRNR4Ul5OGV5O0EBphHnmdKLZnInzmECxk8b3Q
LBAxPtWmbH6vN0LH/wcx6xci4cQBpFrNyMzMwm9+8xtvrEO+zgtvtISJfW/S
KY6NjvXWW2/l+X/paSy2Tk3DHp+BWPdGR87fzGcYZyE7Z+o/FPLwL3j+Gv1u
wz8fxMmVs2HgWm3N53Pqu8f0XI9y2kgLulEYRHA7q79Q4XZ+i9R570p8oQr+
EFinUWNJ3o87bLzEgyo0CXgeaPB9SDn9A5rfU0fwvSnIiNuK0qgvGc7pr947
R2jWn3wJMC9lx1YqBnGzxr5mmv0kTU3LwJCBsk2nUOi3Gq5HxsBOWgbdfGWu
pwlaBkrd6h6ybjX7fPbHc5E2dRPMu09Cn8wwAmkZUP7uVdIyEDkMjX3+45bn
gG9iIqBbMAmtl9St2Wkl57L9Ing6vjl2ELkWa3V+2aWwjkgnnHAomWGZ/Wij
ojPdSuZ1bh51GDP2/giHzdSgzrSSz7l6OgQeda2BxHCU7J2LgoUfc2xiJ60B
/55yzlnTOJxqrYHhXSS96PFPIXPJUKTsXgzTmTDO3/AcfXbOmtaA5j8/13O8
k5x4BgVnxsrPcb377yg1qUmjbQw8rnPyV/gyanjYd99j3FWH23HL+tPZh6Zy
/emGnjs0GutUlsI+9REpHlVyOj5/gHXjBCSZqFa9/v2Iug7Ktbpa86FHjmc9
VVW4sG4ONr3VBXP/pkNw71Zcb2zJg//H8Q7F/EsfvRkb3u6Bk/NGwppiw9/u
u88b55Dv8sIbLWFi33t1XsfXrl07vsZkpKfDYjIgqKeO5+1Rjpo4X8I9hPOW
P/MnhE4ZhLjwI7Bm5vA1+GrM1QLviPXWu6+Ryl3jtaRVDhtyA/5ah9vJHfQb
GGNPSVhaZew2LodNWic9hRmoXPN4rTod/owgpDOKNrwK48XzzdIk4LU57HPE
6WTHLoX71Lty7xy1nLWBDOO8wl9h24Sa776GczT7mVq1lkHNr6qcRSgPPY/i
73Yh/83v4OgwhOsZXLZu9f3D4Orii9xXpyLdfzmsy/fBcC5Oym+zJCt0q6/c
nKjGedRn1GuHLkNUdgY6bApBq4WTVDXZuEbBgol4ecdanGNxtyEpSdYpqB/r
CO21FFcpnlwSA92QfbhBBetwnemhB/HovJOIOHcRJupl1MC5XVWc4/HIHE4N
Jq7Kz0FZ1DYUbRyLvGkvcZ0Bx9D7JbzSXK0B9rNraHs4fbsi59u3kLZuIixH
t8AQfwGJKZksjjLLHI6mNaD5z9n1PNYx6c/DGTNVoSmr1nP0DQnvnPkMnuwj
iu90M3PaShh2WP2I9GxaUX9A3E7xmmdgIK6lAW6nUViH/Z/behY5X9wIu+8f
a3M6gfdL3FED+xA4h3TWrmb+Lt+2Yvu58dE4OWMw1x4jHEC9RqW6/F/w3jKE
C1a9eDfM1hT06tlTDeuc8cIbLWFi3zE6r+Pr27cv58hICy3+1HHOZQX31Mk1
OW35+RLu2fbBg0gKO4D0rGxY0zJ4rrqezdtCs5lwj8Grf+jlOG2DnmXS2KKa
rEv2bpIxqiv4ndqabD538H47FsLSNI699BMajXUEpxMxWeJA6+hM/xXpJ5ex
eEHSHmnKufKcNYMN5otRcJ2dwnNVwTUIVJ53nJJqczzRHwCZ+5UjtznDXTPN
/rdMTcuAWeV5K0pXHEPhoGVw9g6A496vuPZatZZBU3Sr6e+J6+lGWgZD4fj7
GGR+tgC2WduQHBrJc9sox41/v68g16Os37lUPhvpT5ex+P7LkwehmztOtdeO
VMszDb9dPgvBp04g12zlGgUNYR2hSRASnYZfBRziuWveOtO8VifwMFr5HoTP
5tPISam/Tueq6kpXqWgNWGJRemgxCkK+5JjGMeg+OPy6N18vmjn1wqE8Nceo
h5G56Auk7JiP5MhDSGLnpmcYh685GoejueYKJ/1HE4/7HT/O4bENwl9T16Tm
mgUvSrFPylpFDU8zavTpmfiZuahcdDcql3aphXVIjzrj+ALojeZ6uZ3GYB2q
98sL+Vjmce6o0V4b/gekrBrOdeTVti90uijeFXrIV9JU+wa43WyOL+Ia03nF
ZRwHnN2xFque/7Mc/zPvewPHA4R1lj36ayRbrHj6ySfVsE6yF95oCWsle6rO
6/ief/55nitG9y8t2YjwoIlY8/J9mN+R6pX+T8I6fdti0z+6IjP+DMrKK5Dn
cnKdbfoc1UzRZ0W9DT2fE/1cL/f7oMQ7VMPTsEabxO1Upl6AgzTZlNwOG29Z
Ae1hSDhXh9uh7ZM3HDtI2/YUpqNyzWNSD14vTYLylY/AxK5P0zgdqW8O1eaQ
RklRtC/ndKFamyN6hD4LxAwC7Kdqjk3DOZppVteEloFStzrThfLdMSj+Zivy
+k/m/UkdHYdJHE9ztQx6BfBePZTnlvPmTKSPXQPLhkOc2+FcT7JCt/oy50SR
z3ap+p0K+dnMpuRE/G7592gdPE3SX/PyNjK386+9W2E1sthcrqtRwzr0j7Sm
XaUV+OeGOOi+2qOqM916JMM/vqG4b/pxbA6PQ5rZgIsqWOeq4ByhF63UGigt
RPmP+1D8wxTkf/empBc9uB3DK71lDqepeWoPcaxDOgMun47Infoq0leNhjV0
DYznzyKR60VbUa01oHE4mmuu4vS9MHLPPrcclafek3rwRHjjHVmzgHJZqIYn
aTY8xSnyl5vmjSbOGXkWVC7rIeWxhXSqlctWvP4F6dj06rU0jcI6BTnIGXyb
V53OrcgJuIfFoLHynFB7u4RzKHZW9n25EuZ9nPSe5nSn08nnXdofxfGpLL4m
7t3IcAzVp6x85g/VOIc0qeffr8OGd3rh1LKZLPa3491331XTJ8hT4I2WMrHv
Qp0X1nnnnXf42kl8WUlpKXLyi5B4dDf2+w7Aoi46KYeNnSvV7Wwa0BFFbO0W
RpiwlH2G7o24boRJlfdO8CbN/T4oNQto2w3iHbnfjmPaUxKmVuSxOb66CckR
u+toFNC4peOsqmqgnl9wOifGSPlqizvWwjnuoLuRdfR7GBhu0TeS05H0pE3c
s86vQXnkv+Tc1Tca0CB4BogbD+TrxchtzvDXTLOfl1VrGSi+4xVutrYmoSTo
IAo+WcjrebiWQe+Ay9Ot7jIcLoad7P0mIHPQYtgW7oAp/Cz0aVauXX0ltAxo
LrwU3qmScUluaQleO7gNujnjVDUKqP9Oq0WT0WFdEH6IiUYqabIlJqpinQq3
NN8cTLLjjkkn0Mo/VFVnug3DOrphB/DByihYTEZclHv4qMUMynO4LJyjohft
zkhCadhaFK70gWvcE3B8/Tc4hndheEXmcJqSpzZS1hrw78k5HNJky5r3CVK3
fAvzyT18XUm0ZbFXk6YXrbnmjXY976tBNcrpF7ahLOoLIOxZdY02UcNz/Fl4
zvvDkxtW+/vf6LnCzbY/CZVBf/PSn+7A47vMo3OhN1lU88zEs6b64kWuMx2+
EvZBv1Jgnd8hd9jtSJ09AHpLuirW4VwDi58b6t3c6NPz+izF6RQ3U+1PNbaR
e4MKPsFitcLM4uCYPRuxmMX81FdG8DqkS3Z04qdIPnsSWXmFLNbPxueff16f
FtsvdS2PdX6lU9GbHjRoEK/Lr+Q9g9KQzO5liZv0tzOxY8jrvE5H5O0tYNjn
oP9bcsxQ915QHlhBQQG/pnQ9iYshnCP4HsH1NCfHTWjFEcdH+tiqRsfFxnxJ
5Do4/JT9dm6Hg2Ef28IPWJxBGgXGWmOswV6iHrlOx2GQtNdq1ekoOJ24qEbq
TOs5zrloSIU5MRrOmFmoinhD7g+qkrPGn3G8xjlcmBYAZbnycWlaa5pp1mTj
Wga1v+tuczbKtkShaOQ6uJ4YJ2kZMMzSbN1qym/r6S/pVjP8k/3P2UibvAHm
7ceRZJK1DIwGWbe6eZinMXinUl6PZ8edwY1BU7lGgbf+NNcoYL9vEzQFIw/v
QzblsdWDdaTUQA8C9hqhG7xPqslR0ZluFXAIt409grkHY2FPMdbRJLhyOKeu
XjSbyFEefwzFu2chf94/4fDvIetF96rWDWiaXrTQGujM+37aJzyD9GW+sO4N
gfHHCBa7pDK3QdOL1lzz5nqNJlNKwhEUng5k8dDzcjyk9tx3gFTDE/kuPFSv
7Ba6TI3MaaOpxmmQe+1096rbuR8lq5+CMTFOFeuIeLa+foye8hLYJ/aRc9dk
TQIWh+b63QlT+C55fqg9R1D82bi69MYbYTGKkyn/irZN8Tjth/bHsQ2Lx0Xt
CcXj1FM6PvYs1r7REcF9WmNx3//DEuaLe7XCidmByMpI49vNYBghka0PY8eO
VcM6lczv0LV8f50/y8dS6xjHjx/POR3BydA1KC+Txo4x7hy2ff4c119b3KcN
ljz8CyzqoYP1xK5aeSFq6xStYaJnD+W50XWmcSJ09JrznaDPi3Wy3nFBGKC8
GPbAv7ExdkutPLacobfDcOFsrTw2Mc7q5XUEp3NwUK1eu9V1OsTpHJvD63Qu
xekYuO6GgdfmpMbtQvFpP5nLaahvzgv8O801CMR3WcM5mml2eSa0DBS61Z7C
UpQfjUfJ97uR/84cOO4fynPcOG/TDC0Dh9Ay6OgDV+fhyH1pMjJ8l8G6bC8M
Zy9IutUp5mZrGVwK77jlOS3emYteP6xEqwXfqNbtcP1p9n9Pb12FqPg4mNg8
a/DCOkLvID6rCL3mR6PVsAOqWEfSJDiAZxdF4Md46hWdVIvTuSI4R01rwJmO
ssgtKFo3Eq5Jz8ExuD3PVWu+1oCsFz20Pa/HyZ71LtLWT4Ll6FZ2rxJkvehk
TS9ac82vmOt5T0FT4o9wxUznmgVUt1y3hkfktL0s1fHov4OnwCBmgsbFRyyu
qzo+CpVB99Xmdpbcz7mdnAMTkWhKrYN3KAYlr0+3t8puRc4Xv4R9uFKT4Dau
M603190exdsUd4vn95ebw0txMfWnFPwNrQ9C60vUl9B74fw4+DkZETrTF0Hd
dJzX4XxOdx2OTRuMzOwczvm4Kys4n0E5XNOmTVPDOlXMu7cYwqmxXjrpWGod
45QpUzi2Iw5GaD/wa87WtpTUNCScicCqF+/ieWwid2/TW11RWaaONdTuleB7
aH2je0D7E3W2Tc1vE/lsdKyUP1d3sMkaBQv/IesT/K46j8056CYkH98o6xNI
+6VxRlhMFet4pFoYT1okKpf3UtFe64LSNf1g5HU6DXE6EpdDzy2M+vPIjg1B
xakPZD3penLWqA6PctZ+HAzknFAck4ZzNNPsilqVp46WgTshFaWrT6Bw6AqG
cUbCTloG3f0krqe5Wgbs83nthsL56Ghk/Xs+Ur/dDPOBCCRZkiWuh+aKJnI9
DeEdnrrH5gvSoPaLPALdvAlos6Qu1hH60zczHDTr5GHkmi0sjjfWwjoV8vWZ
G27D//lRP53DdTQJWsmaBDf4hWLUD2dg5zrTtY/1snCOml606TRKDgahMPhT
XkPj4HrRPZqvNUAcjm83jnEcY/6OzMWDYdu5AKboo7wGR5+SIZ2PxuForvlV
cKoDkJ5F55yjOOlD/jxYHe/IcROLkzwsTvJkHVJMfpfgeGjacSVzPYLKpXW5
nbIVjyD5fLjqc4z6nrVT/lrJ0UWwf/0bri0tYZ3fIpfhnpSVw2uejcjbETgn
Ly+v8XOg2JeyBpXFrhRfC40xwd8I3TCRq1YL3yidxcMXTp3A0sdu4flbxGsQ
1tn5nyeRlZ4KGztGscaIfa9du7Y+rPNsiyGcGntKp4J11q9fz/vr0LkQDhQx
P+V0GQ3sfthScXLVHAT3aiVxO6S5zbCf5cTOS2uM11MXRbhTYE5xz5uCeQTe
oftal0uUdPTK4g/A4f+XWnls1HfHtugjJCVckHvt6PlYo/NXPRe5xtW9/R+1
+BzuS4nTuQfp4cv5MdXH6RhkDXXicmzxB1FwZhz7fr7Cn1lUqeasybztCYZz
Er4Bqp9XaBoEmml2Va1at1qxjuQWoHxfLIqn/IC8V6ZzzWrSrm6WloHQre49
Aq72DPN080XOgBnIGLkS1rWhMMRd5JhHbyYtg8ZzPQ3hnQp5Pj9gM+NPqxeg
FeWyLa7bb6dtCPvd/Il4f/cmGPkcW5vXITiYXVSO11efh27QXlVNAuJ0WvmE
out3J7A3Oh4pyaRJUHOMzcI5QmtAoTHrKXKhPGYPirZNQt6M1+EY2hGOIe0l
zHJZetEdeK5a7vQ3kL56DKyH1rN7co7jG0k7SdMa0Fzzq++ihseGtLgdKIke
DIQ913BOW1h/Kd/fFAxPSao8UVyC42H/VxX9PSoX3lVLg9rNYj3yvB2fQW+y
1amvqU8nzVNWBPvUxxnO+b0if+1W5AbchaRzp2vhHFEn3lScU6unM5tHSWNA
aISJuLhe/kbNiXdPTMShb/0Q1EMncRoszl/295thT4qF05WHFIadRL08cTrE
Xezatas+rPNWSwEchT2iU8E6oaGh/FpRvK+sWaE1zkxYhPousPNc/48esi6D
pEO9f9hr1b2ImnqPyOh60X0WGnB03ZuCeUTtDn2+Tq0N5VtUlsE+qiMfa8o8
tkzfu2GIj5Xz2CSsQ3l2ddZdeW2til8rfQcWK7TXQiR9AqmfzoV6OB0llxOP
7NjlKIv6VO4VrNYbVM5Zk7UVeX/Qcqd8LBqXo5lm18yEloGS62HBfsVpE0qX
HEbBZ8FwdPeD495BXIOt+VoGgXB1lXWrnxyHrEHBsM3dDtOx00hMs0CfLsfX
jdAyqA/vcAluNrfls/n2vcO7oZszFjeEfKuiUcBeGQ66a80CrIuOQI41BVab
ja8DsiQBtlzIwm1jj6J1wCFVTYLWlL827CA+XxeNdIuR9ybVJzUT56hpDaRe
ROnRFShcPhjOsY/xOhyHb9ca3YBGczh9avSi/XtIWgPs56wFn8K29XuYI/bz
Z2GJXC/aqGkNaK75NfeaGh5Lwknknf2G56wh/NUGctpe5Tq1nvOB8OSeVMwl
DWi1FbE5adXDEr9DuTq1NKh7wBa9RYrv5PmX4lPKgaLn9d5WVZCNnEG/qZO/
ljmuB6/rE/lrol6Gamkaa8r5kmJnoTNA8avQARNx9CXxjcIpd02fEI9VL9zF
a3Qoxqc6ncOj/sn3VVxUWI2baPv0/IvwzurVq+vDOh+3GMKpsZd1Klhnw4YN
/Jp73zvCPlxTTa/n1/LE0hlSHh9xO+xaLHvsFlQUN10bz3uNo7WvPszT0P0S
1170lq1lMgZzzHmVcznKPDb7V7+CKeqApJcj6x3Uwejys0RPQSoq1z1Vl9MJ
6QZ3cHvYojZByoWrjc8kjTVDNZeTf2Yi1xeQeoPW82xCzlnzxHwJZB1UHIuG
czTTrMVMRcugymZH2Q/RKBqzAa5+E2En3erOPgy/XI5utb+kW907ANnvzkLa
xLUwbzkqrfdZNq5pIOW3NdzTWw3vCG4nOCEWv5JxjbdGAe+3Q/ltiyZhyIEd
EtZh61oRwzp0CcoqqzB4p55zOm3VdKbp1T8Ud0w8iqVHziPbSj112LreJJxT
V2uAelWUXziM4h0zkD/nPTh8unI9NdJB43xMc7UGfDpxzejcSf2RviIA1v0r
YIyNht6aDr1ZoTWgcTiaa96CTn1HLTDqE5ATG4TKU+/Xn9PmrVuQHAJPSZpi
elGrU6iC5+JGidshDerqOE/idoo3vMJ7ABlkDWqBdShfrNZcRjqVCaEsvrxJ
kb/2O+Syn23LvpKeresTqzW26PON4bXVMI6ofxd1OMoctaZeXzqe2GMHeO8c
4nSoZyjlseUmnYPH7eY8Au1D7E/k3B09erQ+rPNhiyGcGvtIp4J1tm7dyq+d
sj6f6q6sMm/Frwk7x4TYGIQ8+ms5j+0GXreUHnOivlvUKPPm4+gaEsYS+hCX
0jAQ95rGHuUrVptcb1wSsQoOvzsZ3rlN0Vf0FqRsnljNV9E26vQplbWr3Uf8
5J6hHWtxOu7gdsjf/m8YEuO9OB2pX06iIRUmfSyyY5cquJzXGtZZO/EckDAR
yEtQXqHLur6aaabZFTI13eqScpSfSEDJ3L3I/+c8rt3GtQx6X4aWAelWM9yU
13EYcp//BhnDQpCyeDeMUec4z6O3SbrV9XE9anhHaBTYCvPx+K71vG6nXo2C
hZPw4OZlCEuIQ3Z6BlyFRfzRT7QtHx1mnYJu+AHeP7Q+TYLXlpyq7hvaaD5H
cDiK/3PnWFAWvhFFa9n1mNgPduJwfDpL2OYytQZINzp79gdI2zgN5uPb+XUk
vWg95TVrWgOaa36dOX0fjRzzkC51adRXck6bWq2zQreAnh2fHyHX8cjzthrH
U1EE99YBcpxXw+3w2I95bugEJFIuG2GeJEO1npVyPvNUlCJ/xX9gH/JbuZe9
rL/m/xckRx4Ajw0V8eqlekEr50nCG0qMQ9dEaH01B99Uu/z5YwsmSNprD7Rl
r22w/rV2tY6B8uSUeXF07AkJCdcz1qFjqIN19u3bx8+B+DAywjv0s1nuD8qv
CfW4MVuxbmBnqW6JcvoY/ovbMI9rGFyued9X4lmI5xHrdjXmUnGlxkQtrQLC
6yV5cIy4B/bBt9TU7DCsnTbtGZ7HZmLnVEc/UMb+npTjUs1anb6h3VDB8L/1
x1CeUyqOQ/TLSTSw70HcThSeHs311XhvLFUuR85ZO86+s6feBSxrGHC3K45B
wzmaaXZdmppudVIGSjdEoNB3FVyPjoH9vkG8Z4+kW90ELQOlbnUPSbeaMFDW
x/OQOn0TzLvDkGQ2SVyPIUlVy0AN7wj96XFnTvLeobyHqKpGwQzcxF6nnTyM
kuxcOOVnSJOPJEM3bD/vnaOmSUB+U+BhTN4Vg9wUE8cNDeMcFb1oejaqj0DJ
vvkoWPQJxyZcL5phE87hjGxqz0+hF92FYZwOcIx7UtIa2BUE05kwzt/orWnS
/K1pDWiu+XXsIqfNCkvCCbjOTuYxlFT3XI9ugeB46HmygcWq+YmKuUY577BY
MTWcxXp/Q+Wy2joFhHXKl/eBNWY/j/dIbzdZrrURcxZ/KS3gvUIlrema/qHZ
ge2hT7bwZ+sC56hqaqktM2zOJq0wpV50Y3KeGu20nYsXscv3H9V6BKQ9dmzc
x3x+FvM1xeSE7YTOAc3nZ8+erQ/rfNRiCKfGVHkd4qKITyPsRnwO/ezd/5Nq
l+i67Bw2oFqPjfBf5Bx/znNdKVOuhYQ/6JhEzdWl7jEdcy28LK+h9nHdGdZR
1OwMvwPZQ++AIS4WyVabVx9RD8f9nuIcVG5+uVbP0BqN6XuQHfoNeN6awShr
D+hx0cjwYWIUHLFzUXHqn7I+/Ov1cDkDJD/2NHAhEMhR5pZqOWuaafaTMBXd
6ipXEcoPnEPxjB3IH/At1zEgPQOe19YMrkfUAbnuH8r7lOa8OhUZI1bAuvIA
DOfiJC0DS3Id3WpvvOOW166wzFTcsyEYukWT0SZERaOAuJ15EzBg90aYrCko
Ky9FRkE5+i2N4T11bqhHZ5o0qB+eexJhsReRwo7HVB/OEXrRimdkVfk5KD+z
E0VbJiBv6ktcZ8Ax9P7L1Ivuw/GNy7crcmYORPraCbAe2QRD/HnoUzKhN5kl
/kbLU9Nc85+IS3kzxO8Q5sg6vwJlkZ82oFugqOM53g+emEHwpO8CKuV+9Ert
AtIpoF7xXjoFnOthcWDhpjflXLaLMBokDQBlnXiVIxU5lL8manWG/p7XT6RN
6Qe9OQXJRokPUtM0qFlOatYR0qAW+VZ07leEx/F2qtVhWGfLv59QYJ0bcWHd
HOlYqO5dPibCZ3QsdAzUlzQyMrK+XqLDWwrgKOx9nQrWiYiI4PhG6EHTNaWc
PKETwbEc5ZOx130jP5SwDmkUsGtzZMyHDFJUXnEGQnnPSduP+DtRg1VfXpvQ
oaa6KWnwufm66gx+Xxp3ipodx6CbYIo+DKstDWlsPHnEeK+S+B338RGSvvTi
2rlrNO5L1r0AY3yM9EyV56tJWrGZ59fJ/XL6KzTW1DRDqGdOf/7cAaZF7ATT
xVlrOEczzX6qRrF7Ze3vb2WsBaXLjqLgqxCGVwIkLYMefhLP0xwtA+J6uvny
uh7HY2OR+d+FSJnzA5IPRfE+PdSvh8+Hcn6bSc4D5pjD7ebzdHFlBT4L2w/d
3HFoq6JRQNrTrYKn4fYVc7D8bDQ/j6UxGfh1oNwndISKJkEgwz8+BzFk02nY
08wwmlRwjorWQKX1PEqOhKBw6Zdwjn5Y4nB8uzdfL3pkX94Lh+tFj3oYmQs/
h+2HuUg+dZBjGz3XGjBoWgOaa/6TdimnjXTaUuIPoODMWN6Lnbz+Oh72+7AX
GO55BZ7EafA4omsmIo+cP1uYCfeax+V+OwqdAo53OiD34Diey2ZITOBxsbL2
oSLxMHIH/UqBdSStacv6cTCYktk8bKqJTRsw0b+GcA7FuxTTin6fV/Ia8u0x
rJOYEI+1b9zP9cZ4fcpDN8J4YL3qsRG2I6xAsfjJkyfrwzrjWwzh1NiXOulY
ah3jiRMn+LGTE9ahcyH8Jvrt0FpplHvF7vZ/txbWOTbuo9r562LoeDyNqrtq
ihGWFJyTqOdR3n9lLhsfg56amh27359rtKd9GNYZ/BtY9y7i5+dwOuW1WNZd
02+rydX0yl2jPlOpUVsgni3oDclIjduDvLNT+HeMcE5VvTmkA6XfH+sHnBsO
ZO5DdZ6a58pxY5ppplkLGs0llV661ZlOlO86g6IJm5HXfxIc7QbD0XFY83Sr
hZZB7wCOeZw9/ZHzj2+RNm4NLJuPwJBwkee36dnaSlyPKclQjXdK5VzdtYZ4
3Lr0O7QOVtcoaCNzO18d2Q1HYQk+3poA3Vd7VHWmufaabyj+OuU4NkYkIDfN
gowsgXM8vOdELa2B0kKUnzuAkh3TkTfrH3D4dGLzcTuGV5qnNSAwEekM5A3r
iNwpryB9ZSCsB1bCcP4s11LTJ6doHI7mmv9PuR5S71HSub2AnNhgmeN5tuE6
HtGPJ/pDeMxL4SlIUszdFfAYd0rcjncuG8M7FUt7IoXiP6MFqbaU6l6UcFeg
aMcE5JLm73A5h20o1er8FabwnRJ/wLyOXnCtZcPDt0cxeDXHINeTN/caeX/W
IMfxgvO3WKycb1r7artaWCdh5yoUl5QgPy+P81CUX0XaZcQ5iNqSqKio+rDO
2BZDODU2RqeCdcLDwzmGpOtL50V5bIQVCFvQe9ILcLFztbNzPTCqhtehHLYj
k/6LPPZ/dF0Ij6r24/S6n5djNFbomgsuzZvjEXiHcFtFRTmPN9w5JjhG3A37
YIF1bue4J3XplzAyfF5QVFzN63hy4lG55u91ctcq5dw1x97hvCYnwZgJS8Jx
OH78HuWnPpa/X6+p98up5nKe5z9zLqfIrLgoGpejmWb/c6aiW+2pcKMiQo+S
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
03YX5xjkfNYahUvfR3ncLve+Jf64gK/HeR7bA62x4onfQn3pAr9uTofnXFAc
QOqVQOtjGhPVajWPf9Dvt956q5LW2eajK1qS1dhjJyYmxh2zobgcHb9c81Ct
C+lXqWanqlKIUxwMfU2o0XmIaccH22FV3y78PBkjViB94Xuwfn0TbP1vrh7L
Ydcr97NWsE/9O0qOLfbcPE0w15F+o3lNp2uiWnvOJzAiN2KcwCNYItM6S7rA
sevd5uVOK5lUu5MVIby/8cdmY+Nb5uVNnL+QEmQVNJ9rhHc9NMdQHY5Gp4fh
3CFYdi5E1uKvecymYGAH2If0aAAv+iHYwrqx5/Ue5I9+DFeWfMlZA1Wmi973
Ds9T+2XEcOT2c+ucJHUKss06rDgSj7smHoWK+ocqxHQ4k6DfPnyzQ42SSke9
mQSSNabWodw7A7tXzyRcwhNbV3P+dDuFup22xJ+ePwEPbl+DlAIhr6Ku/YAa
YqR3fhH1O/6czdFc9+gEbnWKnl3vLUeRPmYdct6eyfVKQYeByA+IWy1jGXQN
hbV9f9ifGIviMZtRsScWTkuu98UIap4WYOwaWDbAdfwZgdVajUXwCqrOvI1U
zlyzNCtzzdepNlWfeB6Vy3sI7Fu31umEqpW94EzZLhxiE71HoZhI4zEKfJ9T
dp717Lt1BqSuGoScEZ1kOW2e9TTVuud92Q65A29Hye4JqNSeQglbwy959BYs
Y+vzJQ+24ZyCQ9NCYE7PcPOTqeaIdBrNazTmk5PGIR1A8wD9N5VyrU5L7q0j
mWKPncjISD720zGStqP5XOqbKp0TKaajZ+fDwc6VVR2H5Y/dxDXjgl5tOffh
zNg3kLo6ROBIfH2doEG9+uawazTgFuR+dT0KV36ISuN58VFruvfDpN0ahw3o
x7nW0SPj5GJULO8p0zr38efOsekZJriamTutZBKbTb9IqN3hNYe+tTuvoSrq
PViSj4m1O80/tv1yXGINaKDRC6wBbUI8TMe2IX3TZOTMeJP3++SsAdIsAfOi
H4AtpDPnDRRMfQXFG4aj/OxWOItkOb3Oa581UJP93DqHnPjNWSYdPl8fDVWo
yCRQiOm0YT9vGXUEmy8JvU8C1QqNqXWk/c8xmvDt4b1ovXAy2iytzp9uJfKn
rwv/DrMuC3NBU+exSfaL1zvk8lhPugmaTHZ/n4xB6uztyPr/7J0HeFTl0sc3
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
yJjJYsBhFhwDSc+O+QfXuFSPWLDbzTyXR1ybSHvRNtWNd1F//rezRD1pluhB
NNvF0zRjNBJG/89hvNinWm8jfZZe+R5qeUAzzu1Yzuoi1gBbh0L9ofXZiZRt
vyJr9vsw0MzP0U9dJy+6O2ep6cc+g7wlH6No7yyUhXqz9cpizq6Uw2mJ7xmb
yBxR5yjE644YbO+v8YXM7aRdJkFrYhKMOYEnfvdDYFIevyzqs36NrDG0Djnx
p4lRsOLyWdy+4Teua+zxp1uJs0VHXj7F8zoVDqT3KS5w6p0GcKm+jXI9OjXk
aSwGD4uCbt1RpLmtQ1bv2QK3utNo5PS4DpYBcaufcIP+sZHI+3QpilccR/ll
OXvGFVmf6Gab6xG3uUAD45XPBb607yCbnE5flPt9A438inj8m+E1zOfrxCDT
Z5b1LFGudTqh8sRQ4Tg08XtmqiUwc6hF/oAuBZpze5C6dAByeL2auUZN+jpr
+O3IGnYrcn9/l2mchajK1pl/KPXqWrwHLc9JQ/hXDyBkYFurODxsSl9sevdf
WPd8a95nv/6lW5AccJr36GjZGk9rPTnlnyj2JyZZx44d7THYIm30Q3MwaVtX
yWz4BOS0z5TXovNDJj0Dic/GNQW7vk4vHitqHVeudw7+7yUUxAUh/JN2Qv6M
53ZaI/g9GWKP77S5RhXmXE+8ltcpqi/uQ4rXV0I/D2me0fdaa9sxQo4nd3lv
VMRd5NuTm5fHrh2NjV5uGqe8Tpwy3r7WWc20jvZUo95b9W5SLZtqJeevGS/1
r9a3g0u9kBW+TlwzmxGnQGINqFjMQjkcpRLqKyeRcMgLaat/5jqF53DGPSvo
m1qzBoS6Nv2YLgIvevr/IX/tEBSf9ERFYpT1ceasAceJ6VqKOaLOIY+Wx/HZ
oV6nwtFhxlm4jDtln0kwSWASjDqsQElFVYO8dm4srUOMgnh2j/nHROLdA9tE
/nQNjIJVs9Bt32ZE6oV+tQoHujeceqeBnel/ZYzQy0Cah2b2aPefQ/KMncj4
bDHnEHBu9TPXwzKYDH0XD2Q/OoJzsAun7EbZkWBUajOtT3Zz1DzEI1AsgvGi
7SwdaUb4IGSErUOsKqnZ1a6ZnLQOi73SfeZaax2mc6iXoPKvL8Rj0fT9A7Su
JiToEE/rarwGumOrkfnrU3y+jdCrbhHvjmrPeWo5M7qh8MBkVKYpzD+osqy6
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
wb6h7yNBp0VKWhrycg1YunSpSQPIrLVOX1EvNFetQ9t9C/MCmU1ep0+fPny2
dXKyUDOQn5oAn3EfwetZmaBz2PHy7Mr046YF1ge+SrifY4Z1Ns/ZEfkEiqjw
a9Y6Jp2TlMSfG9wqhVmLJZc3CnqH6tks84E0e4ldU5pLB3gPemPda8R3l6uT
ULhnoKhzOpm1zprHUeU3X+iPa0km5XbKsmEMGVqNQS3kdgag9MrPiJcH13Nu
x5Y1kAol09Ga8wfZUr8AmYs+Qe7opzgz+vpYAz2gd+8E/ahOyJ3XB4XbxrBr
bzeq8ixmL9C7GCcvusmtuegccmIS0EydYbsDISOdM7F6nw7Vs7lOPIVbxp/C
5qBUvo8NxSSQrCm0DjnpnaR4Ndx9DvHcjT1GgcCfno871y+CV0wY305HrWOT
zKl3HMgVFiyDJC2vcYs/H4jExfuQ/v0KZL81XWAZdL5OlkGP8Xw+Kc3sKfhl
HYu/L6AiXEcJWfOFQfdxvQ7IEn9QUQKMfh/bnxvKGdOjOC+o+fMIrJ16gpUx
4cjf9wWLuzpaaJ2OPAarvDhNPEyNxScQzkdp8D5hbgqfnXOv2d3aIXPyE9B6
e/LZkgkaFX9u5ebmmtbg2lih3A9BPK/TWpj10s8V4VN6m7UOHSdaz5mmOTRq
AO+vpzzFup5t4NVNBu9ZQ9m9Ec23+ssvv7DXq0P8svZNJVLqySSN5iez4RN0
6NABuuQUpGbnID3KHyfYMVr1lIz36dBx8mI654/Pe6I4P886zhOfP9FDu1rP
FO117VpHI+bTaKapSedIJmoGrneo9pF4BaY+r/v4n4ndpgq9XLveoOtwrnXi
k1Cy9XVr3jT1yXk9gqrIrY14nzWiSQzq5P3C+irOJ7Pu2/kvUiP2QOKlXPfz
SmINaJN4vWJ88CXoTmxFyqaxyJ76f8h1I150FzMvutasAeJFPwv9yMf413kr
vkDRwQUojz5nve8mXrRT4zS1NSedw+doqpS4HB6LF5dfgou7fSYBnx3qdhxv
bwiBzlDCr7KqFqp1qI4tTa3BzkA//HPbSsjWzKuZUbBsGj49fQhFFeUOyyiw
NKfecTCXWAakezQit5r9WbflOFJHb0DmwAXIeXacmWVwPdzqTu7IfmQEcvvM
R/HvR1B+PgZVGbnWF0h95XrovWPCDrt9OlS7Vun7CVIi9wu6IE7e9OehHp1z
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
d8FnDwqxvp0Zov1EXdDStA7tD9XmFchsclnd778Vm3v/B9vf+zfWv3QLVnWS
wZNpn/Uv3owtr96Gk2+yY/m+zDqn864MaX8tNV8XjRl/Mt1eZUhGzq8dLXI7
HUQWYAfEB527fq3DWdMJ0B8ZhXLqzRHZhkLelPnON9jDK6/x9tmRTMrtKBZy
1rTx4gDAfxDyFr4MPeV0rpk1QLzoZ3gfDv05b9lnTMPOQVnMOevf52QNtChr
KTpHoRCYYlciYvHS8kuQuZ+0yyRoQ99zO47X1gQhPrtYyOnc4FqHGAU0a2eL
/2Xcs3kZZGvm2WUUtKY6tuXT8NXZwyiuKEelsTGmrjacOfVOC3SJZcB0j0Ij
cKuVcjl0m48jzX09sgbM4+w1Q0d3pl1qUd/Wg3n3iSj8bhgQ0Q/G8wNQ5fsB
ssNWIVaZdEPVr0ku9OxcRCXTNtV6djZ1R1XMLghzIK/znQj7/xXxvnYY0+2R
PqMn72+oz9q1GveXrQ9U10brRVJyClRszVAu+hpB79jE471kOPxGK2x85RZe
o7XqKRlWUV7n5dvx2r/vsJfXKWXennmrppEjDWqSdvOVWfbsuLigfbs7EfjX
DlzZ7QWfxeOxf1gfbOv/OFZ1ZsfvTVeEDWpjrhHkuTNXyKe8j/LSElNOp1FN
yu3sHSdoHMvczsg7kbRzgpBbvA5OAe/VUapRvP1tVK6xyOnQu4S1T6Ly3ASg
op44c83NaB0hBnVeDBDwPxgv9GZaZzBKtr8Dw+SeyBl3tRzOc9CP7gy92xMw
zHobBeuHofjMRlSmKa1/h5M10OKspegc8uhYBfSJ8Zh3NJTPBv1bJsFIb8w+
o+HHoAlkDjdH0jq8TiNOiUh5LD45tFvkT1fv22m1bgFcPOfioV2eOJ2s5dvf
nHM7ZKR3iFPaEu4Bp9u4iVvNrvEUHXe192Ukzd6FjC+XQv/aVAuWwVVyPd0m
wfD6WJSt+wK4MhC42AflV75HvCK0QfMJjuxCz04oCnf1F/unLefsdEKl90/C
TXa9dWws9sjf+D+xJ9wip0OM6b8WCe/SG+AcSGsB1a7RGk09O+SC5lGwNVuN
hLgohP7S1VzHJvbOhzDNs+cVFz47dP9Xz+PC7J8QumMZ/nX/vTzOl1lrnVhR
D7RkrbNAZlHH1qqVwGfwDQhChiEPOSUVyCksRtzF4/Ce/DXOvi1DkOUxJQ35
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
PyBrqSVXcaLHK6Bb7XAk7uDxmr9GgVKHsPYZRcOu+b3qBssupYdooy5B6djL
RM037d83g3UkH0Y455h0hVXXha6D0CxW7nX299N+C0Vcf5NfzU7Cc5fLT/HP
ffjhh3r6axTn36eJ/7uLSW6nwKTBOtddd50Pl7ob6pCZV4iEyf9SsKTQnI5/
uCcSXri6yTXKy82Fk+EdzveZBYZobT2XnDNqfoe0E1ueGOI5Vxv5E8revqxR
n4CwzvAzkbnz52bqdcww25wo2vE1u09u9ed0qHdo8BXwJM5jeKr+mOdvexjd
V1IvmtYnuS6p84mOz3PR4lsL6qJeM/LYurh1db01taeZM1CQZcPi3ftxxdSd
CBq7VV9n+n2hM/3iL2moqGngnI63A2H6zoB1SKPAyY4tbH8i/vzrQoZnJuty
O5THFjRjIu5aswQF1SInvitqFKjNwDtdxxvz1z5lz0qd/DX2njd1grjwbcjp
BDI9LQOqSaA6EIolOrKWAfUJsZpTULH6FRa/Xctit5v99acX3AZvQQzE/mqA
PREWQ9ax+LGUxYu+HqIsjiwddwUyd/3C4seMgHGsxDmUO3ZMOIeuARt3qgnx
uBqQn6vUv1PsSp7J/p26HzEP91b1Eg1C/JBeKN68gH+Fm60Rd955px7WqWR+
uql75a9Jk1hnqUmlPS15L0eWw1fPZd34E2IGiXH19dZheLJgxZdwVZbAU3eY
ha9CT6+gtAK5FdWw5pfCmlsIK2mSS60+iX1aM3+VHpZ0n1Fc1dIcIWuw7FT0
CVRabGzuOld/Jf6uzj3KOR2Gd2qI05mr4XSop868G+Gtyjv6+dtORvsvhAPV
WgNHpxfddt5yHtvDQOon7EJJ/Nq1Y5OuahLndOX6HLVT/lqx04bXlsbA9PY2
BOngHHqvF/PTxm3FTwmFfJw6gs602joD1iEnvJNnz8SYrWu5RoEe1glS+o32
mf8FgtMS+Hl15Tw2abJ+x+g32pld5K850iNRH/5cgPy1p+At3ATB6RzfvUEt
10PrPcUZshakY2oZWJEds0pgHS23M+8muDe9qpxcANzI4teaTZ8zrHOWCutQ
D9G+sCZFQ3Ar+vea7EV4xH1TVNhGj7fLqzgMZ16BwhukwZKcCHNcBOLeH9QY
iyt4J+6xs3A4Ow2lB6rQs2dPPa3pTUrc312xDtnzJk3NDnlISAgf78rE7Ygd
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
3bSX6OJxPIezaMcXfI43yV0jX3QnA15OHAvHQDwT7YsTR0t6cXTPdia96LZ0
0p42s7W9MHkpXOFPabSnh4q1PfldoF5qQHTsOLGrG+0bGDiHxdXmDOQxnLN8
bwr6Td+FoLFbm9GZ3ohnlqegtLpe0Znu2HO4s2Id0ihw2uzYkhiPPyyfD1Pw
ZH396XmfI2jGBNyzbinKamv41fB0ZKKtnc3AOx3JqVbHiay0fXDve6Jprc6e
AaIXQ1WGuHjdAKfr6VZTLEmxpdwXprE7tvw2K7Jj16CBNKf86nakLtstQPYO
vn4f+vE13qOksZfo2Sh992pk2LN4/Q89G4mL0lpJ2E+IGtgD8QMFnyO0oBUu
h72X+O4DSFn/I6z5ZaJmnDgcnX49gZzWadozl2NGY0M4h/q5ko0cOZLjHG3+
GvPHTN27f2ggk3psBSYN1jn//PP5dSa8Q2NMGJNieVpHZS+lo57vHsI8dfIH
ZIWORPy/zuF1PD68w/uSBnFt69TV8zjeofvA4cjk67m0hqwYlL97JZ+jEuuU
Dz8TWetmwRm3AfUL/0+Fb2Tu2q1CjyBtia8f6ZGa1Bqg8VFrDch7tXs+Yyx8
nXGYI9AQ8V9NHtujgtthrzicI2fCMc0jw47eCJ8bOEc4aRKUZNvw5vJomMYJ
nWktzgnitTrbcMrYLfg+VuZLdfz521mxDrmZdPFYnDBy65qAvXaCuEbBdJy9
4CvMNYv67u6mP601A+90HKdandyU9exZeH/TWp3dD8Ib/ya7SRs6jdZ0W5qW
66Fnksxvk7rVR8P1cG4nw4zSTe/DHdqvac+dOTfCvfwB4GAOqtdMRNnwPhqs
0xfWlDjYrBk83pT8irSidcGIZJiG+ttQL0rZ84bqcuKfuRyJ370FW1Y2rA6n
4HF0OBw6t+aczpnuX6r1pnEiTofiSzIan8svv1wvf62S+Rmm7t0/NJBJ/Bdi
UuuxKbzY6tWrOeamdZOwLY0x5QpKI0weyFs110nLQNEXKNryPVJev1VoVMve
sNTPdHAPBe/MZ/MnBzY29znOVvZA6pLXo/ydywU251jnIpS/cSqc2xbi8PIh
/hhH5q6FXAP3umdZsEJ4q/XrC805yvmhuEFqDdC8pPtSxhDd/blCuclmqxM1
UW/q1+xQn52KeDmirR57w9rODJzT6BRP29k9HLnfjD99txemUVs4pmnC6YwP
g2nkJtw9Jx6Z5Qp/YGCddnXSKChix/tTdDjO//47mBim0dMo4Bjou4/xdNga
1LpdcHk7OtvW/mbgnY7golanhNfqPNh8rU47asB2dNNyPbSPTOuVzG+jNUvG
/63mekinIDUONYvvV3qM3ORftzPvZrg3v4Ha3XNR+sbp/lhn3JWwR25iz8hs
lJQUy4PkL0XrZiHyH5SzdrKoy6E4lTnt0yeO/AtS1i2CraAClrQUWMyNOm5S
i6G1tUlqnV6KwWk8KHeI9tZXrVoVKH9thRLXG1inqUmsc7dJhXUkXhwyZAgf
a9kLhtZN4jLIaexp3Cnm13P6DOUVEudG+IB6Tan5GNVE5xpuZIdsCbCM/2cA
vHMGUjctRU5BMeeVZP1PTdgMlI+9RIV1hJ7GgWVPCT1pdY2OnO+Uu1ZhbfW9
6HK5fPqJUmuAxqVraw0cncuanQNx03RqdpQ+O86l3XptP5Fm1Of4e2p6Bsqy
7ZiyLgF9PmhOkyCMaxJMDXPwceSPvk4QUHdmrEPHabVmIIXFDE+tW871p3vr
9NrpQb1FZ09F36Uh2J4n9j67O7dDZuCdEzx/eV+dBFTFfsiwziD9Wp38teJi
dYP8tZZMi3nIKH6UcRc9s2hcW6VbTX08MizIifoZDXP1ctlETUPDxrcZ1jkT
ZWMk1jkHpWMvQ9aGYDhzcnGoqtKHc0p3LkYE1ZIPO1XBOCxGHRTE+ZyE8Q9x
3WhrVjbPV5PYhl7lMVPMKGtu6FzoOSyd3pd9WOXzWeZV0f1L8beMwf/3v//p
cTqEdQaajPy15owwIOWx5Zs0eWwXXHABv06ELeg60TWS8RFdO7PZzOvv9Vyu
q/R7dM3oOtGcpWtH85ewj5r/kXU8rkMVyPh4IKI43unRiHceZnPqv/1gj9mJ
rOxcuBvo9704tOglNkcVvcDRNFfPxcGp13PuhvcI9dNduxWu0GvgTf8ZIlBp
PlihY1RrDdD5dk296LZzUbPjQOH+xXCFPwno9dlJm8QexLLeqxMEjF3EDJzj
76QzTXUhmTYrBs0Jh2nkFt3eofy9t7fisul7sS/rQIfXmVZbZ8Y65MTtlGU5
8c3eMJwyZzp6zhV5a01y2QgDzZqEMZFh/Hy7s0aB2gy8c6Jc9NXJTI9EQ+Sz
gWt1DoreUAbW8Tct5iGuR+raanWrA10DymWj15LNH8Ideo0ml+0mvhfeEPo7
VH5wGUrfOlfEj6RTMOYi5P40DjaHE64GEZdWpuxGNMM28UNPUfE5QbxnZOLE
YbCy4+E5d9bG/DQZM9Mzl/KhqNac4knaNydtBtpDV+dB0TnLn+m+pXOm36fP
07nSudN5X3zxxXpYp4T5ySaD02nOaGwIB4aadPTYFi9ezGN9ulZ03Wi+qevI
6BrQ+Gud5iA9VyV+pVd6T+Ik+g76TspHI0zB57Zyv7trqmD5eACiqX5nkMQ7
vXnf0cSx/4AtbT9qDoteOwem/VmpLTsfpQzvVI6/BPVzxDxukrsW3BeercPl
zaR7j9H8o5hQnmd31ho46jU+wwZn2i64Ip5T+uw86p+nHMPer5O5kJ0jZuzs
ZuCcpp5mzkBhlg3zwpJw6aSdCHp7W2BNguEb8MZqM6rqXEKToJPUv3d2rENY
NIsd9879ifjbr9/DFDyJ6xHoahTMnIg//fYjsqrEPkpH7vF6PI3iJrknbNz7
x8stPJfbmRqm5K891rSvTjz11TmM1uy7dlcLpGVA++9St5rGW82hqK8BxSJW
c6rQZeN4R8PvzLsJ9bN+h4pxFyn9dUSPncKZTyC3SGht1hZlIfHFaxE/pKd/
3hrhnCn/RmZuEewZZs5By3wfwiWU20T54q2t6dAa4SHKjaLzpPMlX7NmTaD8
tR9U8bxh+qbWY3ObNHlsgwcP5uskXTO6joQ1ae0knEI/B9orkphA7XJO0udk
PT/NT7qGNC8oHvMouWme2kMwf/Agn08+fucR0XM05dvX+Rzw1hxA+btXoWzE
2Xyelo+9CPXB12s01cV8doVeB9ey++GtKtDdQ6HzItxF2Fsem+Rw5Pmc+PWz
MziNE9Xi2VAX+TJb5/v7Yx3KY9t1b6P2jLHGt7sZOEff08wWFDvtePGnaJhG
C00Cbf5akMLrnMZef00R+LyzcDpknR3rkBPeybdn4r2w9QgKgHWI1yG+51T2
+tX+aH7ORh5bo9EenoF3jqdTfpUNBck/A3vuhydci3UGwJvyobg4XiOfuzWm
3V+iPXKK1wgLSN1quffun99m8elUualWR1vDzbzum+tQPobyg4TudMmE21Ba
eYjdOLWwTnmc94KMG3JSI855gPicx2DPLWRYKo1hm1zOn1IcS8eld+xqb8ko
90nysfSd9DPdv88//3yg/LUBJiN/rTUmsaDDpMljO+OMM5CSksK1KGgOEV6V
14rmGeGWpng6sKuxD31O4h76P5mfeOhQFcfCrqpypL75e8QOaOR3iEOk/Las
nb+iNmktKgjrvHUOm6cXovbra5riHB9f+Xt48yP95hP9DdLdpbkktQbomNQc
lPFMOHK3WtKQbivEoZh3eJ5y4xovsc59JEYBA+e0vxk4R99JkyDLbsW22DTc
9tUeBI3Wz1/rrdTpDFqUiJzKWs7pdCZN466DdRxYGReFfouDeT+dnjp1OxwD
ffsxBm9ZgUMNDXBTX2tjjfGZgXeOn1NPbZslFeUJ3/D9Pn9dgsFCkzRrIURf
na7VQ7S9TYsXaF7T3rfMb6P57a9lYOX5ygW7g0XvEa0u2zzh1Z/19ekTlL/X
F1XZqSha8x0i/25CPPVBIZxDcWh/E5LG/B029v05WZn87xIW0fZNbS2u0RrF
pJIbkvwCcQ00r6644orm8tcMnNOySTz4lUlHj23JkiWcT6PnJM0fwj3yGhL2
pPePaj1QsATVwRCOonlK79N1Liku4vj4YFo4Ep4+H3EDG/md+CG9EfP8Naj8
4XVUjLsM5SPPRfWnfX1z1r9G52a4QvrBmzRPzkLOS0mtAfqbUvPC0BpoGyft
GeorUJYwU1njB2t6ivYHHHMpWfGY1jzDmjcD5wR20pkuy7HjvZWxOEXyOTpY
p9f4MAS9tRHf7RM66Z2I0uHWFbCO4IrFv1/cuJJrFOjpT5NGW1DINFz600ys
cgjeuMHTdfszHo1RXCj3i401of2cdAkyzfG+/T5/XYKB8EY9A2+p6H/blXuI
trdpsQTFdZLr8WkZkI6BneGeDBsq1g6HO0RHh1rBPFWTr0Qp7Z2/2xflKyYg
elAvhnNObow9B7E49MXr4ExLRH5uTpPeO0eLb6RRbC21CqSegTyvX375xchf
O3aTWOdOk04e2xNPPMFxAeWa0fhLPTW6poQ51bmSsi6LfpaureVR/5/8ffos
YR56T/KRedlOVNWza//bN4gdGOTDO/GkZf6QCSXjrkL5qAtwaMqVTTGOrNEJ
7QeEjeb1ObW1NVyvnO4F+cw3tAba3kmfwGLNRH7ySrjCn9bpKcp+Tv0YqK+Q
K8RRrw2G6ZuBcwK7hbsF6ZYM3Bu8D6aRmxmm2d5Uk4DeG7MZN34dgfi8qk6l
SSCta2AdoVFQ6nAiJGIXTp/3Bcc1evrTPYnbmTERr+zZBDc7d0OjoKkZeKe9
XegSONIj4I74t44uQX94Y18CavLEBTHm6DGbFmPQ3jzl6xBmoOcg1zCg2uuM
FFT/Mozhnaub1u4oeKdywmUoG3UhCt65gcWdPRprdBjOiR5yMhw7V6Gy6pDS
m/HY8Y3aiJ+S3IHUNiCjOJvicJ3+ocRN9DcZ+WtHYs3msUkdCFoftbVWVLtD
/6fOZVNritO107rEPPL3JSaSvCO95rLvtKanoqy6ASkfDWFYJ4hr/NG8Sxp2
MkqGn4uqiZfr562xeewJ6YuG357A4QNFKGX4piA/j69DUjPB0Bpov7WeXh3p
kaiPeL5pT1F6JQ2a2gK5UrXJOmGYMAPnNO+kSVDstGHm1kRcOHFHQJ1prknw
5ga8s9GKBrdH0SQ40Vf3yKyrYB065kz2XIhKTUH/VT/BNEuf2+nJ3qOanltW
LERSWQk/d3dnu2jHwQy8056u6BKkBdAl4D1E32Cxcp2Cc4z52Vamp2VwsLKS
x6g52eyaUD/6pF2o/eEueEirQKd2p4H5wQ8vRfEbZyt6BALnxPQ3wTp7FBSE
E/DvEzcj69oJc2md/o9cnR8lP6vuoyr78ZARf3T++edrcQ456SefYjJwzpEY
jRXhnS9NOnlsK1as4NiA6mnU14auJ3ElUheDrhO9Sr1wvd47xKtQ3jD9v8Td
krfzYfAMwfNwfcEMMwqybIh7SuSyxQ7qAdszp6Ly48sC1+ew18NLHkJpjgXO
vBKkZdiRnVuALCfpDmSIPk8WM6w8Lpd+otfIruSUx+ZAbdQr+voEu+8Dqu1y
JrXxitd9zcA5LTtxBPlsPXnq+0jeO1RPe60H6RIwDHTWRzuw3izWvM7G6ZB1
FaxDns6Ou9iRhUk7N6PX7CkM6zSt2TGRRsFchnlCp2FyfDg/d0OjQN8MvNNe
bkWG1Y6C5F+b0SX4QFwEo89cG5qiZ0f4kWr1iHdRcWZ1DR6UHjiEvGIWr6aG
oXbRXU37kkgPvQGV71+K9H8JPQLKK0oZ/gflz5AWp4ffP4Rd6JlL9TQUB1N8
TPGt1JimV9kbR2oPS5c9WOhzVO9DeEbqfdE8ojiYnuVUy7F169ZA+WshSvxu
5K+13iQH9idTAD02Gne6pryOhl0XeV2lvh7lFBL2Ibza6tlJeQZsztB30uel
ToDsmUt/05nlQE5+IczzPxB9dgaYUDr+Yv28NYXToV5RJTs+R+7+HSjMiIIz
LRrWlFhkpKfAYsuE2cG+LzMfZjvDPrYsFpeL+UX4h7uBf47JhT5BAQ7FjFN0
p1X6BBGPw7vzH0BZZMsTxLBWm4FzWnbKW8t1WLEqIgXXf7obQWO3BtAkIJ3p
jXh6aQpKDtWLp2gn5Ae6EtYhjYIceybWJ8TilmVzYWJ4p6cOtyM1Cu7fsByV
9XWib0Xnu3THxdT9d4w1o63cBmtGGsoSZrFn30M6ugRD4XXMFxfA0CU4BlOI
dgXbNPNb8DbUMLBTCdQUw1VuQ0VmNA5uGgf3nOv08Q7FlqE3onD0hYh+0ISE
oaegLHYzaqoPoUoV+xJ+UWtZUW9J4mToflL3XFE7/Z/U96X9fMnh0O/SOs05
KGXvX/4Nyl/T0SSgOP1uk5G/djQWMI+tZ8+eiI+P910HujaytyatkYRXmswx
jc6enjdntA4TpiL8k+t0cA3A+JduROYrfdAw5wa4dTkdhYdccBvqf7wbNT/9
E1VLh6Dy12dQvnY4Sjd9iMIdXyE3/Adkx/yGrIStyEyOgC19v4KBCP/kKvjH
psE+J3oN7TxO+gTE45fHf6OjT0BabA8COT8DHmOtbwszcE7rnHSmS7JtGPlz
DHqOEzrT+poE29Fr9GbMiRI59Z01D6orYR1yqrXKstrx5pbVAfPYSHs6KHQ6
zl/4DRZlJPPzNzQKApuBd9p6jpIGWxIOxk3i+3z+ugSD4I16Gt5i0fPW0CU4
ElNjmwDrcX0VUJULb1k6vPlR8GZuhCf5e3giP4V753twbXgZ7lUsHvn5AXiW
P8j3xPXy2MjdDAM1zP4dLM+fgcR3B+JAjZvrEci8I9l3ke/HO538Z1mH7psL
AXqvkMvfpfuO4mrKjZJGfIHkimJjY3HyyScHyl/raTI4naMxmcc2yaTpK0rj
/MEHH/i4N1nvQpiUrh/p5LXVvqcWC/F9OYalKg8egmPuq2gIuVHRSQ+MdVwM
C7nmXM9wO/m18IT2g2f2VfAGXw7vrEuBGefzfqM1i+/HwZXPoXzDOBTu/Bo5
UT8jK34z7MmRsFpSBfeTKbAP56Y59jE4n5ac9AnMVgeK9i+GO/wpYN/D/lps
e/oDGd8ArkON65hhR2UGzmmdU+6qjb3GpJjxl+/2wjRyC8M0+jjHNGoz7gyO
gbmkms/MztqXsqthHco/LHE48X3UPvRZ+DXHNPoaBZ9xbufZHetQz3COi+tP
GxbIDLzTVm7hujyZ5hjURL/FsA7t8Q1V5a8NhDfmBRaPm8XAG7oELVgzvI3r
MFBdCG9pKrzZu+DZPx+ePRPgXv9fuJbdJ3oqfn0OXN9dBNfMS+GadQVcs/vC
FXINGuj/Qq9tPobkceT1qA25Bda1wbCxWDc3J9fH44hnioXHwFrdLbXmVktO
30H3HT3D+Rmr4mjSKpg2bVqg/LVvVTG7YUdmkgu7lnmNSZPHdu211/rqq+ja
yNopen4eSd6aNKobk/VbhJUIx1LeImFZejZL7Td6LSstQUnZAVRuZdh8Luln
tIB1ZN0O5bMxb5h3i+K3omE++W38/zkWCrma4aArGAa6BG6GiWp/uBuVK59H
6eYPkR/+I5xxm2BPieQ6HoR9LPZskfNmcD7NuJmPUW7qBrgi/uPfZ4drsTHs
kzQWqJP1X0YkcjRm4JzWe2p6BkqzbfhsQwLO+SiseU2C4RswOczBx9jbidua
dzWsw/uysXU4KT0Nj61ZxvWne+vpT1PdTvBkXLNsDvYUihjCqNtp3gy80xYu
dAmy0sPhDn9CR4PtIXjjXmVxejV89SWGaSwAd0M5IIcK4C1Ogte2Dp6IaXBv
ehWuxffANeNihmkuZHjmcoZnruYYhevwLrid+e95f0UXi/tof5u/r8SFLcaQ
odfzz1cnLkZBYTHylZpyet7K/DTKNZO9cKTuFs0FtQZxS/iH7jn6vHp/n+Jg
ugdvvvlmvfy1eua3mIz8tWMxiRG3mzTcDr1u3ryZXwuKsej6UE0NrY9abTat
SW0KdR2X1CqgfET6HjlP1Fyf5Piys4X+XoklkuEVNm9Df8fm843CW8Q8zWOh
Rgz0e/5v4jU9hH+IAwq+FHU/3IXKVc+jePunnPdxJO6C1ZzCcE+eqPeRuMfA
PH5rPr3S/lZ9xAs6WmzMI58GavMa1zfDjsgMnHNkTrXtTrsVQ+ZFcJ1pvTod
rlMwbisumLIbOzMrOqXOtNq6GtYhJ26nLMuJL/Zsx0mh03hf0SAdbieItAtm
Tca70Tv5GBj60y2bgXeO1QnrsDg4bbvQJdDTYEscJQbbqNVRWQD+hnLSKmzw
Zu+GJ/ZbuDe+DNeiP8P17XlwzbxM8DSUh0Z4ZoGCZySWCZCb1ipncWXDHIF1
6hfciarKA+xgGo9N7tPLOvPKykpew6OtNad/E4aRPJDUJpbYR84bWbND30cm
n+3NaBLEauJ1w47cJCc20KTCOoQpabwHDBjA62fIZP9NbT8lMsI2dN0krpGa
FGqtZ6r3kdydjNnkd0reiOYMOc2husPVOFjrweGlg+GZ0w/e72+GZ+HNcM+/
Sd+p5oy7Kq+N151Jvucm/ftBg3/oc4R9CPe4Q6/BoaVDULrpPeRFLEZW4nZY
05M57iG+h89dA/eI+5drsWWhLurVAFpsDwDVmY1rnWGtNgPnHJmnmzO49toP
u/bj8qk7EfR2c5oEG/DyynQcqG1QdKY779zsiliHNAqy2LmE7U/EX35ZCFPw
ZN26HdIoCJoxEXetWYyCwyJX1tOJr+XxMgPvHJvL3nJNNdiUep30KeDPO0OD
rbH+Rm31h+AtTYPXth6evRPhXjEErlkM18y4RGAbitEW3KbiafT4mZsa83ro
Ve6Jy37z8wLEjOQLbuJxpfd79u/Qq1Gx6jVk5RaiuLCQ55RRXNvSM4GwEP0e
5SkRBqLYV/Y3lfXu6r4s9ErvS51jqUnwyCOP6PXUIX/OJGp1DE7n2IzGr5dJ
1D75aRT06tUL4eHhPNai60fYRHI6tEYStqH5IK+V7ItETtdZXm9Zx8WfXWYz
f5XrqhrjEK6S+XGHDlXx+VCW9BsOzbkbldOvQvVX/VA34zo0zLqev9bNYK/0
71nXoT74d2gIYR56A895cy+4hc9jV/CVjVwn5W1K7TYfr6nBP1SjRthH2TNw
h17Lc948s69EzZIHUbqRcM9SOJL2cI6H4x623nV3zCO12A7HjA6gxXYPUBHf
5stnVzcD5xy5p3JNAjteWRIN01hFk0CDcyifrdd723HKuK1YmiTqRDtrnY60
roh1yAnv5LPnxDvb1sM0a1IzGgWf4ox5X2BGahwfByOPrXVm4J2jdRuvVS1J
nKv01tHRYMucKwa5O/M6TXLU2L8PZMLr2MLwzSciL+3bC0WNDcVo82Ue2i06
umkqXDNP1DeI2oR+PEajWm33Avb+/Jv5vnVDyA1cc4DiQ4oTebw443q/OPLQ
l1fjAIsva5Y9ioM5+1FcVMift4RP6L4gTELPYbpPfGfQguYWxcn0GbXWmvo5
LuNe+k6q3di/fz/OPvtsLadDXsq8j8nAOW1hxOvQOH5u0tEo+PDDD3l+ImEZ
4mzo+kmtaLpudM/TnJDXkZ6vUsNAq0ehxrUSC9E8IDws5wzNEfo7tO4WsHlW
dbgO+RvmIeGx05D25EnIerkPCkeci4p3LsKBUWeh4r2LUDH+YlR+eCmqJlyG
qklXoHoqwyVfX4/abxnu+e0JuNc+DdeSf8L1/R3iXqI9A45/+oqfA3I/Mu/t
Vu50TxHuoZqfQz8P4xpvzti1sKUlCcxjc4LjnW74rLBa0hnWycWB2KnKWj9E
o8V2H1C0GQan03ozcM6Ru9mSgUybFbsT0nHH13sQNHoLeupoEvR+Pwymtzbh
/vkJyKqo4bOys/MAXRXrUD5iQaYDy2IjcemPM2EKnYYec5r22+EY6NuPMXTr
KlS7GrieXue+osfPJN6h/UxjrWmdCw22ZBxI+JTnbTfRYIt8Et78tWKAu50G
mw6HU1MGb2EsPAkhcK8c2hiH8bw0hbtpwtuoOZsbuW60wDVXcO0p+mz9gj+g
9sd7UP3LY6j+sT9qv7oG1V8wDDPlSt5//uDHl6Hyg0tZnHgJixcvRAXFjW9f
gMLh58Dxvz5I+1cvxD56BgpSovhhEraRnAzFqLQ/T/cFxbyU10Q1503OtgXN
YYpriRug75YcAH2f7MkzY8YMo6dO+5usd7qeea1Jo1HQr18/nocm+4XKfDSZ
f6aHbdTrgcxNlLVbsvcocUHaOUPrLb1Pv0fXn/COu74WtYcOIOHJcxHzkAnR
A0xIerQXHM+fgaKPfo+y4X24l468AKVvnYfSEeTnomT4uSgbcwUOr/0Y7uwo
eIsT4Un5AZ7wyXBvfg3u1U/CRTqEC/8PruArBG/qq3MLxPlI3CP4Hu+si9l9
dgfK149CbtTPyEyJhMXu5HU9/Py70fNC6k6XsHXMs+9xwE93ehjPXUbWD6J/
tGEtmoFzjs6J0ynNtuOj3+Jx+vjtCHpHn9fpRVhnxEZ8tcfJx7uTwxxuXRXr
WDIsbH2xcn7n+Q2/KvrTTbFOj7mfImj2VFy+eBbWOUXvYkN/uvVGz1/53DXW
nFbMS2sm7JYEVMW+z/V4PFoNtujngArBMXYfDTYdjFPp5ByOe9togWdIK83H
3wTAN0r8RdjGo+hJkZZU3cI7UfPTvTi0fCjX1C3d8C4KdnyD7ISNcO5ajLyQ
F1A6vDEO5DHhW+ejbNT5KH3jDJSPPA/FE/4A+39OQ8KQnjyejO3P/JnLkVtc
hvqaan7IhGnks1fUkGf74ljiYWg/njS2mqtdbw77UN8Wwj2y/86tt96ql7/W
wPw2UyMfYdixm8SMe0w6GgVr1671YRSpDS51JgKthxLbyF5LFLfROkp1Xer5
IecBaRnQd9NnJIbitUEeFw65vIh/+QbEDQpC/OAeiBvSG9H3mZC16msUznse
Je9ejfI3T2Pz+TyUjb6A+fm+19L/mXAw9F9wFVj8J1t9NbyFcQz//Ah32Fi4
1zwF17IHxP1HuIdy30incN5NgXEP/S57n7hT0ro+uPIZ5O+ZA0fiDmTYHI2Y
pxvktlm5FlsmCpOXBdCdHgBYvmAP1KrGNdEwXSOcI7VfjJij9U79WMx8vyUD
D8wO5zrTenU6nOcZuwX9vghHdE5lp9ckkNZVsQ451yhwODErfBdOZTinh5K3
ps1jI0020msbvm8rHw8jj+3IzMhna62T3rQDmeZo1Ea+zp53QzQabAPgjf0f
W8yzxMB2B6yjPcdyC7xpS+Be/ZTQFgi+SsRSpCvQHL4JJXxzFe8bQnvJhxff
j0O/PI7ytW+hYNcsZMetgdWcinRnKdKzipGeXQ7HrhUonPpXVLzWC2VjLmyM
AenfI89B6eunoOKT21G4aDgyQkcj+gETjyPjBwchbnBPxH0wGHkFxSgsyPet
o6RDIHW0ZA2G3OOn+0LWltPvUfza4vAo30v3GMXBUttgy5YtgTidJE18btix
m9QoGGbS1OzQ+FPNlMw7JKNYTL0eqtcAiX1l/RXXUysp4Z/Ru+7y+wg/Sc0+
yf/w2h32e+UHDiJp+rOIHdyL4x2ao3EMizsXT4YjNx+5G4NRNO3vKHvrLOZn
izk+SmD5srcvRelrJ+PApDvQkLFT/EFeJ6iJbVw18BbECH5182tw/fowXIvu
FJiH457rAuCemxq5npBr4A2+DNVLBqJo10wV5pE6Bl35uWHm/VhzUjbCFfGM
vu70/nFAXZmcAa1aPrubGTjn6D3NnIHibBtmb03CRZ/sQNA4RWtNT5PgzQ0Y
vS4DtQ0eRZPgRF/5Y7eujHXoPBzsnPam7Md9K38IWLdD7wXNnITbVn6P9ApR
+9tZe8OeKDPwTmucNNiy4EgPhyv83/p60/Gvdw+9aR2M40leCPfyh+D67nwN
h9O0RsCHbxi2ofw04m4OLx2AylX/Q+HOb5AVt4nFFlaGa0phzsyBhcVUVB9N
efNWFnM4181A6bgrUT6iD8rGXqzEfhfwOLD0zTNQzl4Pzn4MZbHrYHPmIWb4
nxWMw+LJgQzzPHoq0pZ/A0eWE0425ynXTBppDtAeveR1ZO6S7C1Ke/n0b8It
rdEyoFwmyRVQjEuY59lnn0XPnj31NAleNhmaBO1hNJ4nMS8yafDOSSedxPEs
XVu6NmTEzdA1k5hXak1IbWrigOiZq+7Fo+Xz6DskV0jfLbkg+i51v9IChrEs
q+cgbuhpYm6yORo7yIT09+5DQaYFWUUHYE2MRN68l1H69uUoH36GmOsS74y9
BGUjzkbFRzegPmVT48Sj/AbScXcTJvefn94DdnjSlgnOh7RBvv+jqJ2jvQnK
L/XV96gxzy2+uh7ScTu8ZACKds6AI2kX709K+W2C4+mKzw5xTo70CDREPK/o
E2h0p2P+C9QUyBFu/VraTczAOcfmaWYLip02/HtRFEyjtnCco+2p04N4HeZn
jN+ONWklfNy7AqdD1pWxDnk6i2+K2DlN3LkJPQLosZkUTereodMxLTGCj4fB
7Ry5GXinJRd601lpu8U+np8uwaNcd9SbMEIMZlfVJdDG9OVmeJLmKRjnQqGF
S3U4ATgcXv9M/E1IX4Zv/oTqZYNRseZNFOwOhiN5H9IdRUodtNB+Ii6H8E0G
OddwtiD7t09R9tY5Sh7PRSLeU/a6OZcz4RbUbJrOc9OcheVwpMQj6skLGdbp
JficASbEP94HWfujkMXWlmyns3GfXTH6N2EZel/qqUnMQz9LTWGaFxT3Um4a
4SXKU1MbcT/0/3RPEW9AsS/xAKRJoINzKpifYzI4nfYwmRP4jUk15pJXmzJl
CtckoDxFmYNGrxKjyD5LktPzvyWa5izSdac5IT9L80TOG6lzLT9LWNsWt4fP
SZqbfI6SP3MZ6irLGrWts/LhXDkdxRNuR/kbpzXie3odw+6Dkeeh/N2rUBe9
VP++pfpB4ny0+pAHnQz3LIF761tw/TxAaLpTTV3Itfp9qnh+G8M8c6/nPUvp
Hi7YE4rM5D2c4xH7El0N89C5iL2W+siXmvbYCRfPAhzOkQPeisW0+5iBc47N
0y0ZyLZbsS4qFTd+vhtBowPpTIs6nWGLk1FQVcdv+86uSSCtq2Mdyk/MtWdi
dXw0rl8SAlPIVN5vR09/2vTdBAzY9CsO1tfx69tF4OxxNQPvNOeij6jorXOv
Rm+asM5D8O5/F11Tb1pDhJOmWiqLj6j+eUYLGIdzONfwvP+G+bfj8JL+OPDb
y8jfHYLM1FiYs0oEd2O1MWyTxvVdm2jcUo9DwjnLP2Rx3qkstru4Mc4jnDPy
XJSx+O/AV/ejIVX0iCwuZPOYcs8SYxA9gMWOQ05C3MM9EcviyYQnz0Np+QE4
HZk8LpM8DT9T1XnSuir5Hbm3T8cjcY/c56d6dvkdUstA4iUZL2cp/NHixYsD
5a8tUsXlhrWtSY2CW5nXmTQaBTfeeCO/zsTTSVNfP8In6pzFQDVZ9J7UsJY8
EM0XqWFA36XGwzRPHCyGsbL5Ef+vcwTWYXM0ns3V6EG94D5UgYPVNRyPE+43
Zxchc9cKFE3/h+B3GL5pvA8uEvmbI87Vxzt+B+pRcT6qt8vS4YmbAffa/8C1
6E+Nem5Sy1qnpofzs8FXoOrnx5Abvgj2tASGeXLZPWtDV8I71ow0pFuzURv5
mn6PnV33AofsjeulYdwMnHPsTpoEZdl2jPk1Fr3eUfgcPU2C8WHoNWoTQqJy
+di7vV1nJnZ1rENONVk29qx4bfOq5vWnQ6bh/EXfYrE1lY+JoVFwdGbgnWbm
ojUTecmrA/TWeRhe82diED1diNdR56sdLobXsgLulY8yjHMR13/WrcXh+S83
cP1a8rpFf8XBX55CUdjnyNy/h9fcEL6hMW3kbsz6404xE/u/7OUfMZzD4rux
lzbm7xDOoRqGEWehasFzcFeINb6m6gAcmXZkOhmGigtHLK/VIazTg2OdxBf6
odrlhd0q/gbFoRKL+E5bWVtl/QbxOLIe3TcfFMyjrjmn/6f8J+Jv1LU/9B0U
S9911116mgQu5neaDE2C9jSJISNMOhoFq1ev9tVhyb5JdP0o30w9JwLlK9K6
Sc9hWd8l8x9pntAcIFd/FxnlzOU4s2B15iPu3xcpWKcH4h85CVH3meA6WMZj
lexs0a+W7hVLJluXE8NRMGMYz13zxzsX8n2A8jEXoX7/+tbf37Reqfdn3HXw
mNl9vukVoWcd0k/ktwXCPPN+z7XbSEvkwJrXkR2zmvOwoidp1+B4ZI+d6pgx
+j12dvydXdBkOaitG/subgbOOXYnLQIre01Ks+DuGXthGrlZV2e65/jtMI3e
jNtnRiG16BDfmuzsPXXU1h2wDmkUlDqcWBC5B2fM/1JXo4C857zPYJoxES/u
3gCXxwMXW8O7zpU+vmbgHT0XOVTFSYsY1nmQYR1tb51H4XXMEwPYJXLYVHeP
qw7e3HC4t7wudKNJu3Z+YIxDOWqU91+z+D4c+O0l5EX8xHUdzJn5PAby4ZsW
YyCGc6hfya+fMJxzuj/OISecM/YSVK8Yx0I2sbfhdTegSOmPwmt+tq9QsE5v
gXUGmrB/1F9AV8jKMJSsP6ffpzwl9b67XF/pPbnHL2sumj6TxLnQPUO/SzEv
cTwUL1P9D/mePXsCcTppmnjcsLY3wpBUC/WMSYV1pEbBk08+ya8bXSf5LCV+
hp6tLWnvEYYhbCtz1tR4mOYKzQU1ZySN5htxi1ZnLmKeu5rjcIl1ou81oaGi
gN+GxCuJnEn2veY0kc/J5m5+yHPiHvDDO0Kfo/ydK9CQvv0Ib3mPwDyq/Q1v
XgTcez6E65eBcIVe0wLmuZXnqDYsuAPF26YjM2mP0GujfqSdHO/IHjtVsRP8
Nad9/UT/CZTuPbLx7sJm4Jy2cdIkKMm24YsNCTj3ozCuSaCt0xE606RJsBEf
brHznCZvFysZ7g5Yh++bsrU9Li0VQ1YvUfSnm3I7lNsWFDwZv/t5LqKK8/m4
GHU7R29qvMPzxbvYvDrieUh9RC2pKE/4hucw+PURJV2eiCcYHlghBq+z99ZR
712XW+GJ/Ez06px9VTO5ao0Yh/LUyja+C2f8JqQzfGO2O4WuAM9Pa+U8onjO
5oBz3beNNdjqmuwRZ6Fs3OWo2fatOE6+N+3h+/IUXzocIn8obeVsxD6oYJ1B
QYgd1APmCQ/zj+RmO311N+T0XKZYV083mExiF8nxaHW65HpF38M1hRUj/QK6
l5577jmuSaDTP/RNk8A5BtZpXyO8cxbzMpNGo+DMM89ESkqKrw8s4RW6zoRh
AnE5NNckl0Ouff7KvqKEobTfQfiZc37UX4Gwzou/4zjch3XuM6HGmcJ/t6HB
1cgpKjgnwyxq2PJD/6vCO+c38jvsXqn4+Ca4C9KP7v7n95MK95elw733Y4Z5
BsAVco2S23ZTk96/pGFA6wP1wqpaPhS5EUv4nkJn1y4QPXayUR73JVvzh+r0
E72fgdfVtBAd+Xh3MZM4R+bvdvfY4Vic9vpzM214bH4ETKP0OR2uU/DOVpw9
cRfCbOX8GnQVTQJp3QHrkKdzbicLn+7Zht6zp+r22uG5bPR+8BSMj97Fx8XA
Osdm6n6j3R3viD6i+3EgbnqAPqJPw1uo6CB1WqyjWh/rKuG1r4f7l4dFfxzS
VJt/SwCMc7UK47yHzKRdSHcUw2K1c3zTOg5H5RTPZWbBsXURSqk2R4ndGnHO
2QLn7JghjtVVx4+d1kPaA+e8i7K3nrYiGLEPNWIdqoewfvlf/rHy0hJfTQW5
1Nyi79DGpmqOR8bDUkNYvY9PTusw5cPJz1DtB2Gkiy66SC9/jTQJLjQ11pQY
1n4msST1a22SxzZ//nyOXygHUdbX6GEdwsKU70bzQM3laHEOzS3ibvR4IeJ5
KB4kzGLNykHM63/wwzox95tw2Bbj+32pDdg41yw+jkfgnXNEDx55j5BewYiz
UPktW6uqSo5+PaC1TFXX4y0zw71rPFxLHxAcD+W36WlVzxd5bcQBl256H5n7
dyscT+es4/H1E00MhSdcr5/oA0DOMjZALWvRd2UzcE7bOWkS5DlsWL43GVdP
24Wgsc1oEry5AS/8koqKmgZFZ9rAOp3RSaMg227D5qR43LF8PsczgTQKgmZM
xN/XLUVZbQ2P3LqKDsWJMgPvCOd9RM0JqIr5oGkfUcrfjn4G3lKhA9gpsY76
PilNg2fneEWDlvLVbmsSywjNgX68J+HhxQ8oGGcnxzgyTy1gDU6zzmI5uwP2
iI0oef96n5Z0Y94ai+nevozhnJniWBtqfYdNmKJRI00P6whNX9t3r/Dfr605
zGNHmtfy78vaHak/7D9EjWNEsS7dFzLOVX8HfV7qddExUUw8Y8aMQPlryzRx
uGHtZ7LXDvVrrTdp8tj+8Ic/+Pg4epYSTiFMor7ulK9GtTw0T2SNlnZNlM9i
wrdabT45j+izHGcrWCf2jTvE/Hw4yId1apz7/eabGpcLtzTyO7OfZdimjz+/
M/YSlL56Eg79Ok5oUB+LUV6bu7Gmx1sQD/fWkXD9+BehV8179DTNa6M9Ek/w
ZYLjiVzOdUZIo7qz4R3qJ0o9BwqTfoQ7/Mmm/UR3P8QmzTw2RrXNDGLXNgPn
tK2TJkFJth2vLI2G6W393DV6r/f47Th5zBb8ECc0z7tSnY607oJ1yOm8clg8
MWbruoB5bMTrBIVOw1kLvkJIeiIfG4PbOXYz8I7sIxqLw9EjleecCuvwPqIv
AFVK//LO1kdUxnLUc5C4nGX3i16gTfLVRM4K7dd6Qvqh9se/o3zdSDgStjKM
UwLCF0ePcRRnsZBtfxQKP71X6Z14kT/OYbjn8ObPxfE21PmdBnEpstdjI68z
qwnWyfjyef77HrfLN6/VxyBzktRaBf7D1fgsIQ5I5rVJfWp61pN+MRnFyvT+
X/7yFz1Ox8P8nyZDk+B4msSUcSYdbmfp0qU855CeqXRdSSuNjF7pPRnHcU4m
I0MX50hOSH5WazSvpI6FxDrRL93UJIetobzA9xlfzluTvEkF71jSUfDdUJQN
V+Md9jruMpS+cSpqW9Jma63Jmh7FPPYNcK97TnC+1JeU9Eq0eW2S45l3C4q2
fwp7aqyS06Yc/wlf31t2K+8nmon85F/hCn+6KdahZ4D5C3ahquRAtc14dxIz
cE7butmSAbvNivCkdPzxmz0IGr0lMKczchP+MS8ejnJlf9/AOp3aKY+Neu0s
jg7nemum0Olcp0Cvbsf03cd4Yttq1LBYxkXaOSf4OnUFU+Od7reWtQbrvMSC
GKcYrE6DdVR3xsEceCKmwTX7ahGvkPaANl9tzu94/8/6BXfg4MrnkROzEmZH
oaIXnYpjjltsQnMtb+GboocIr9FRcA7pSjOvXvmuOF6XfxxJayHtt8t+Jj6s
Q/U6mhw287SnxGfY+kD75b64U3Ussq6WNLl0R06Fd+jekNoFsuco5RzR71C8
vH79+kCcjk0TfxvW/hZQo4Bqqf70pz/xa0i8Hl07wj30b1r7+H5bgFiOflbj
HPpcoHlDfJEvH4101qU2gQ/rnMy1CVxV5X5zTeaxNblv6FioH1VqIoqm/V2X
3yGtAnd+ylGtEvon4m7keRj28SSGwLXiEVHLw/PabmrK8TCsQxzPwd9ehDNh
M8M7OTzPtXPgHTM/1ryUtXBF/Idz+z7d6XD2LNgzEN70KWwxkHxw94k6DJzT
9p7KNQnsmLQmHmd+EMbrcYICYZ3hG/Hpzix+LbqaJoG07oR1LGw9JO3pFHM6
/rP+Z5hmfoLeOnlsPYjbmT0FVy0JwZa8LD4+BrfTNtZ98Y7EOlGoi3xZqUtV
9ZLb0x/euFeBeopNOsti03iM3sIYuNc8A9fMi/W5HJmvxrBO9c/DULhrJsy2
TJ6Lcsw8jnSuRWCHc/N8lHFt6Usa6w8obht+Fqp+eFkcsKsB2jH2z19Tvo90
2Db+5K9N8HAQ0j8W2gSU1yM/R2un9pjo2U3fp+0f6TeKKsxDz3zCPFLTg/Kh
6DseeeQRHkfr9A8dYTI0CU6EEd45hXmuSYfb2bZtm08/j+ZGamqqj7sLtObJ
529zOEfOEbl+8s8Sr5NdgNj/XOanwxb1AGGdMjnJ+AtxhFqdN5/TPWhlWCt8
PYo/ukWp31HX7pyDyuCh8NQeDHhsR2Vcw0DRQKzKgXv3B3D98BdFr02P47mN
75eQRmNexBKOH3jv4A6Pd8y8ZjM7bRsaIp5tinWo50Dye8ozgI9G245zBzUD
57S9U58VM9fkykD/2eEwjdTndPh7b2/FZdP3Yp+zki8TXU2TQFp3wjrk6Yr+
9Ix9O3AK53D09ae5RsGsyRgVGcbHx8A6bWeUS0ExQPfCOxaeq+1ID+f5C+IZ
p8I61Ec0/g12Q0q91o6+3ijH11ADr/kXuBbdCddshmUW3K7P5YRcjdof70bp
xvcYtkmGOTNP1fOzjcaYxTu2+H0o+fBm0RNx9PkqnNMHB764D57D5SKu0qnB
o/hS5pA1fqcd5l1rVJrTQXzvPGXkn8SH2HfRGkqYhLCJXgxJz3Bt750mo6np
u0LfJ/PgIiMj9Tgd8hLm55mM/LUTYRJbvmfS6LHRdRo6dKgP/9JaRzxMc1oU
QvfP4ZfzFmieyO/yfQdhHTZP4/91dmMv0Ud6I2bIyT5eR96vUmNQF+so32Vx
sPm6IRhlb1/K7h0V3hl7KUpf7Y2aHbOObKlolXk1eW3r4P7tX4LfCblWR6vt
Vr6u0PtF2z+HzZzC8E7TvYaO5fScs7JnQCTqI19QeuxosE7SaKCu1O+adWUz
cE77OOlMF2bZMC8sCZdO3sFrdXrocjrbuSbBiNVmHKp3K5oEJ3pWtI91N6xD
5+Zg57k7eT/uWbEIpuBJXI+giUbB3M8RNPMT/HHVD8g8KPLm3V11EpwA6354
x8I1eLLS9sDDn29DdbDOmwLndHisoxzb4RJ4wqeK/VeeX3JrE5zjpn4ac27A
wV+fQm70rwzjFPC6AI5z2nJ8WaxHuTx5819F+fDTxT60qkan4iMWH9kjlcPX
37cgfNEkDmX4yRwZ5t9LtL8JSc9fLb7KLerGiduRmEYvN0nyO5TL1Jy+DcW5
dBy0/056BBQHPPPMM3p1OuSfa+Juw46fSc27C0wa/Wm6Vr169UJcXBzn6Oh6
ko4aYV1a8wjP0JpH80xqUtB1Ji6PeO/mrCmmptwzNsf2bUb842cKrDOYYR2G
dxKeZzjhsL8+Bs09esardTCaOOGGrDzkz3tJcDuU+6nCO+UMA7mLbe0TFHH9
AkWHrKYU7p3vwbXwDiUvVnLE6py2W+EO6Yvy9W/DnhKpaBac6LU+8DOAXh3m
GAXrDPB/BhDXH/cSUFsoB6Ptx7cDmYFz2s/TSJPAacNzP0bDNEbkrml1CYIU
Xuc09roytZhfk67K6ZB1O6yTIbidgsxMfBC2AUGz9LEO1yhgr6ew18+TovgY
GdxO25rEO92j/44a6wzTwToPwpswQgxMZ+gjWmGDe8sbcM24SOFytBprN7AY
5GrULforyjZ9wOKxNJGvZmmDmhyt81wzO7LCFqPszdP9c9coVmO4p27fAnHc
bv2xpXWQtIF9tTrS7Ww9TIxFVP8e/ljnqfM5zvH1H2Wfp7oc2TtX7zglFiLN
Aa2GMP1McSxpFcu6daodSktLw+mnn67H6Rxk3tdkcDon0iTGDDZpsA7h0tdf
f51fU7qW6pw0mZco8Q5hH8JELZnE01LDgs8rWjPZ96T+MhPxQ09D3EChnUGv
5k8egafusN8cJ+P9R9XfoedUA5SWjKJJfxb6Hr5ctgtROuIsHPrxFb/eOW1u
ao4nbSlcyx9SNB1/p1lrRE6bN/hSVK58DlmJYYpmgbXt15k2eAaQ29gaWB/5
kj7Wif0fwzpST6Lrxp0Gzmk/J53pLLsVW2JTccuXuwNqEvSiOp23NmLID0nI
rawVLbG68H5+d8M65JTHmG/PxKq4aPT7aTZMIVP19adJp+27CRi0eQWqXQ1w
ez1Gl682NsI73UOfTWKd3UqtjhbrPABv4mgxKJ7m93ZPtHkLouFeNQyumZcz
nPMHnZy16znOqV72CPIilqq4nDbMV1O7LRPW5DgUT7tHaEtLfWnKXWNxWtX8
Z8SBuwL3rSCsIeNIv+8mrJMUi8inLkH84J48P4hqIhKfOAt1+VYlHBFrKK2l
ErsHOlbJYxKukrlKdA9QrEu5RRSHktPPFNuOHTs2UP7ack28bdjxN6k/fSPz
apMmj+2cc87h15SwDV1vmmPyeUvXnuYJxXvE4bXG6DuazE/SE3BkIe7jxzif
w3UCh/TiWhoFK77w8Y5qkxoYzWId6t1ps8Ox7UeUvXOlfy7b25eg7M0z0OCM
RbvG4zRWCsfjLUqEe/0LXJ+eu24Nz5VszRkCZ9w6mO2kv9AR+/CYuR4b1WxS
P2l/rPMo7yeNmlw5AO03tifQDJzTvk4602U5dryzIhYnc/5mO0x6+Wvjw9Bj
5CYER+Tw60KUTtecccK6I9Yht3K34uVNq7hGgb7+NPOQabjkx5lYkSm0gBuO
tceAYU1MjXe67tpn4T2znWk72DPuPoXbeUSDdUaKAelwWEelQeDcAddPdwmt
JNIgoNphTc5aw7ybcWD1K8hMjuAxR5voqwVyq+BQnGu+Ebpr1DdU1S+Uctfc
xXah99TMnpXU4+U9RNXfz+I9S0oS4sbdp+hNC6wTP/RUFG2apwxK4w4I1UNQ
DBtoHeU5tEoOEeEiymuiGJbeo/lvNpv5MVAsTPzPxRdfrJe/Rn1d7jQZnE5H
MIk115o03A69Tp8+nWNX4m60unv0ntToa6lvH2lb0PxoMj+pVseZh9gXr1c0
2Bp761RnxOh+F80r+tvNYh3y9FSYnfkoCHlW7BvIXDZlL6FyFlu36gJrbrSZ
Sa22+mq4904UOW1Ux+O3xyJ0qT2h/VDz4z+QE/ULw2rODth3tBmsQzU7+4Yy
MJCjnHjXizwNnNO+blGeMcTt3DNrH0wjN6Pn+O1NNQnovTFbcNM3kUjMr+rS
mgTSuivWoTy2EocTcyJ24/R5n3Ptaa1GQRDXZGMYaOZEvLRrE5sLHiOPrZ2s
6+MdFdbZ8094wh/TYJ0H4d3/thiMDoV1VDjHuprhG6UmZ/6tmpy1G7nOGuWs
lWybws5V1Am3eV2O1kmPIDEcJR/c0LSPDnut2faNOPgW8m0IW2j7eXKnWInF
k8lzP0BcfyU/iMWTcYN6IO3DAWJcNPsfMkcpUE2E1Bam+U7rLdXlyNhT1gvR
/bBkyRIeL5P+msmf09mjibMNO3Em9af/yrzOpOF2rrvuOiQlJfFrTEbXlfAN
XXu6zvTcbckkLmrC6ZAzbJyRnID4x89SdAkUDbb+PdBQqZ8Xp99TNICb02CP
3yvuL3Uu29iLUfrG6ag3hx2fYmbSp1b2FHhO29J7lZy2G/xy2hqoR0/o9aj7
/s/I3/e9qN/pUHiHsE56t8Q6Bs5pfydNAqrT+WZTIs6fEIagcfr9Q6UmwXsb
bWhwe7uszrTauivWoXPMZM+amNQUPLyaxRRUt6PD7VBuW1DwZNz06wLEl4rn
lbvT9D7pXNa18U5zWOcRpbfCZDEQHQbrqHAOxRekM0CxRBM9aVGbc3hJf+RG
LEa6o0DRkW7n66fEMNkrp6H8jVNVegTn8ZybA5/fI87A3fJ4Er9C39mk1kbR
sU7fsVqlxSZqdhKfvUKMjSZPiHKVqO6mpZoI+n/KX6J5T7Ew7f/LOnXSMLj9
9tv1ctdczO9X4muD0+kYJjFnhElHf3rRokWcu6upqfE9Zyneo+tMmINyFQMZ
zSVZX9NkPaScUDY3kxdNQdyjpyi1OkKXIOmNW+E6rN/XiWqHAtWUNXHSZcvK
Rc7icey+ukClQ30Bv88qg48Tt8ONctpE3qc3dw9cqx6Ha3bfpjU8827x8Tz5
e+d3MLyTzo+lLvKVboV1DJxzfJw0CfKzbHh8QQRMo4jTaYpzepC/sw19PtyB
LVax19LVOR2y7op1yNPZ2leUmYWpu7ag5+ypDOs0rdkxKRoFPUOmYWLcXj5W
Rh5b+1nXxTtCczondQPDOvfqYJ1Boo8cWXvW/LbalLWP4S5v8iIWT1yn9Ab1
xzluFmdQ3lrVr08iK2EbzPZchnNSjs+Y2hywJkWh+MObBKcjNaZHnMX1cuuT
1wt96VZwscTFSF2sJn+Hanb2xyNq8Mm8FsKHdZ7og9pcs65uHs1j2RdU7zsJ
01A+klqjgPb7Ka+NfM2aNXqcDsXR+zXxtWEn3iS38yhzj0nD7fzxj3/04RrZ
P0fOA1rjAvVeIgxE+hR6GtXczWmwOfMQ88adnGfkfW4ZFqdancJVXzEMro/x
jwjr8L+TCmtaCko++r0Ot3MaGjKjjq9QrazhqcqFe+OLCt65XqNZcDP3hvm3
In/fgg6Dd4jnTrUVozbqdYZ1HuoWWMfAOcfHKW8tJ9OKFftScO2nuxA0dquu
JoHsHfrMz6koqa4X3fy6sCaBtO6MdUijIMeeifUJsbh12RyYQqboaxTMExoF
/1i3DJX1dVyroivrVZxo66p4x2LNRH7KSoZ17uvgWKcR57jjg+EKvlzBORqt
NdIgYBjowOpXYU9L5OfX7jlrPhexWtb6WSh//WT/Op2R5+LgNw8q59C6sSR+
JaAOL9XsJCcidty9IqbkNeAirrTPeE18gc7ePMWUUnNDG6vSs5+4H9+Iexv1
DSgm/n//7//p5a4R1vmvyajT6YgmsafVpMPtbNq0idfJqPvsyHlA7+tZWVlZ
8/rQlL+WFIe4x/r456/dZ0It6WYEMKopOyKsQzoF9ixk//KJ4E4ltzP6QpSO
PAeHFr3EFu3APYHaxST3XXsA7u1j4Aq9rhV4x3HC8Q6tj2m2wm6DdQycc/yc
NAlKc2wYsTwGPQLkrgVxTYLt6D1qMxbGCr2/7tJLpTtjHXKq5cpi5/3WlrUw
zWpGoyB0Gs5d+DUWWPbz8TK4nfa1roh3BNZZ1QmwDhpxzuwrdDSlqTbnOjSw
1/L1Y9l5KfGDJf34jafdAWtKAoon/YnHXD7ttRFnoXzcFWjI2B2wZ6jWaA2k
9Y+eybp/S8EpaStm++exkR7bf68S/UQDrAdSc1gbr1L9hTbGpf19wlzbt2/X
016j+DmH+Skmg9PpiCY12V41aXqLEmYdPHiw7zrTNZYYWGqLq/dVpX45PYvJ
deckwznWrBwkffMm4h45WWBv6iFKOWwvXgd3TeC8Mqr/CcgVBXJzGtcqKPno
ZsGbyjy2MRejnP3bXeZs8T5rc6MaHgUPuPdOENwzYZ6AeIfy2TJPKN7pTljH
wDnHz83MbRlWxKSY8adv98A0cotu/hrhHNOoTfjL7FhYSg7zGebuBvlrZN0d
65BGQbEjCz9E7UOfBV8zTDOd6xTo1e2YvvsY/w5bi1q3Cw1eTydfiTq+dTW8
02mwjrte4XOuVLTWNDiHxRT1829HyZaJsNhzRBx0XGMHUUPj2L0S5a+fouJ0
zuN7zge/vO+IxlFiHd3ab+kMW5mpz84gVR7bQIZ1HjsdB2I2KF+knytHcauc
wzK+pJ8JB8m/T/U5hH9ovj/++OOBeoe+o4qpDet4RtflNOZFJh1NNuqVJHuF
Sn0AigNp7snnMOWt0c/0HNbrS+tz6n9jzUDs0xf5OJ24R3ojmmHx4g1zdLWm
pRGvc+RYxwxLZjZyvx8huB2pyTZGaBTU7p6nYI/jbHTPKfe5e98nYq0KvV6j
0XYzrzEkvJMX/gPnqE4U3ukuWMfAOcfXU9MzUJptx9R18ejz4XYEvSP6hwbK
X5sa5uDXqTtoEkjr7liHayKxNT8pPQ1Prl3OuZ3eOnlsPahuZ/YU9F0airB8
sYdlaLK1v3UlvNNZsI4ncQ7DOQH4HMI5C+5A0Y4vkZ6Zr+hJH+expH46acko
mPW0iLl8nM7ZKBt7Gerifm11nQ5Zq7AO157ej/iJwxr7NT4chNhBPZAy5i7x
Pc1wvVq8o8Y6FBdQTEB1OuHh4ejdu7eeJkEp83NNRv5aRzaJQSeZNNwOXc//
z951wEdVLe+bQlXhKRbsvfdn9z27goAgiOJfefrsIr0JKioWEMTypIYuIgjS
e68JpPe2m23JpiebQnrZ7H7/M+fcu9ndbEISAkngzu837LJJbttz5sx3Zuab
oUOH8nFGHAUkSi8lwrkkZOsoxkNjpEGeNDmmE7vkS4QPVGI6In8tpG9nWIss
DY73JtfrkGqTeC6bIfwocidfj7zR3Z34py9B4U/PwF5R1Kj51vJid9hMW9hv
DNfcLcd3nPCOzKdS+fujSAtZz/CO2cFXfyb1XMA6Cs4hbe9rdntQyk2iPfsU
gw79FxMnwV54e8A5vHbn0324ZJo//JMLzgmeaWc517FOUpLCP52M/wUcRMeF
M+Cz2DP/NP9s/jRMCj7Mn5mKdc6MnC14pz1gHbtuK8MztzCc416fo+Cc+xnO
+QUajnNiW+dZGkzQRzCfa8LlvI+74IQS+WsF390PW0Wx2O9tZB4y2UDKJ2vQ
v9SRMrxzZDtCnnfNY4t8pQuKEwPlg9VvE5zz2QjXEDcXCb0nH5fwzrBhwxy+
seSKdea7+dOqtD3xkvVKpgWSW2ynS5cuiI+P52ss4RuK7dB4IL5zirUQFx/h
YOKsaNDGaRJ5Plno65fWxnTk/qHGOR+jprK8wfHeLKzDz5sAbUoGsn7qJcd1
etTGdoYxjJUe2zgjc1rE7qjhsYfOFpz4i9ziO8TPtuhWVK58CubwHYKvIKkJ
sa0W0LMd6xCOV3AOjeX2ula3J03QJiEzWY/lh6Jx5bRD8Jq43yPW4TzTI3fi
o02JKKyw8uXxXOAkUETFOiK2k8Lu/WBMJB5bt5zhme891u3QZ15zv8EjW/5E
Wqng8zxX6rpaW84GvNPWuQns5sMC43Be6TaKc7hvwubrttnIH9G1lmd69EX8
fdnmL5v1DCnuclL/z2DkfUVDP7qL10YIpV47Pogd+4h4hvWcV7GztOdJuWrK
nj7lNJFfQPaXxnePHj085a+VML1DUmM67UEULLpMcsM69J1OnDiRc1I4f+c0
9hReacLbhIXr515LhM6cjuifP3Kq0/FGxMCOCO3TAZXZppOOdRqD9fIdNKTM
5mopJrlzPvImXlXLycbmnWVkN5Tt/rFR/O6nT+wOjjZb6K+i984it/odhneo
1rBsdW+Yoo8IvoIzaL902kTee6AieNhZh3VUnNM6yjkJzHq8tyoE0gSRu+aJ
l8D3swPo/OlerI8TfbfOpZgOiYp1RAyQONnSmC8z+cAO0WtniSeOAuKfnsF7
j/4vNow/NzW2c+akveMdrc6E9PitbZNzOisS1pX/En6BS/+c2/n+aF2cc2b3
Qx3K5qguPhqZcwbL+WuXCn9rZHfkf3Y9rOlxTYrpKKL012m4hkHHc3kSti1D
GMV2Xu7gqNuJHNgJBcc3ioOdxCZQTQaNY8I8ZHdpP5/OP3Xq1Po4CbbI/rPP
mXbcVWmyKPVUdzEtl9zy2Lp168brdiimp2BewjdKP1lSiu8pMUbn/rKENXTM
7mkCDyBs0Hkil1KO6YT2kqD/7T3Yqk/Oh0bcCM68141XLc9j0yVEw0K9RUc5
57FdjMKfn4W9vLXy2BSxc7zFa64DvhG9d9z671DfnZoF1+HE5vdgSIgQfAVn
zIadnb1EVZzTOqph65FJr8Oh8ATc88tReI3bWz/P9Ojd6L08EikFFXxknWtc
wirWEUp5bJkGE9aFBeGqlfMgLZwOn0V163Z8KN7z29cYuHcTypnvXWNTOQrO
pLRfvHOyXqL9nHqJnimsI4/cIjNqNgwQOe6U6+6Gc6iml+pzWh3nMNVS/lp0
ECy0rzzONX/txKynmv38KK+H1+41IraTFBeDsPdvE35mfxHbCevrhYihl6O6
KJ9BLVesQ9iGcpTIH6A9dXolbKPs4+fk5CA6Oho9e/b0FNOpZPqopOKc9iRK
bGe75IGjYPTo0Q4eCsIcSmyHxgXlttFaTFiIfka/R2OE/Ee9jmEfNgbDRjwo
14t5O+p0wgd2R3VeWqPGupIv2aw5SHlsyenInP2KzAeicBRcDsvwLqjJ0Td5
7rW81Nbv1Ph/xezaTW545zZm0+6FbcE1sOz+TPDk6ww4M1wFhHU0DWCdge0O
66g4p/WUYjp5qQZ8tjEMnT+neM4+SJ6wzucH4T1qN34LMPPvjOevtfK4OdOi
Yp1a1TEfjnDyezs31ss/7U21PAum46o/52FbioE/O5V/+sxK+8Q7J8M6bN2L
/VzcoO0M5oFUlaBm/2hY510tc6459wm9heeBWPZOhcaQAX0r4xyuOmajDv+N
/GFOPXUof23C5Sjb9YPMy9T0+ajw8DY2tydhz1qE9qbYTkfhc/ZjWGdARxjn
fsKPRzxYVIdBviv5lrRvr/QWVc5DY5j29en1q6++8hTTIfV3859Vafui9BZ9
UHKL7RD/9Pnnn4+wsDDeP4eUxgWNE7Jr7kJ+JOEeM3G2ZVsQ6zeptr+Twkfw
rISMDbOYe984u6Hk0DWJh01R6rXDcIF5668ij23MhU58bF1RGfxngzVrZ0zs
Mt5htqBm3yhY/a6X8c7tLninxu86ZB6ezWPuZ4ab7SRYh60LKFMwa9v3RlWc
03qq5CPR++fnH+OcBJ5iOj7EMz1hL275ORDh6cV8apwrPNPOomKdWqXYjsWU
ggXHj6DL4h8597QnjgLiZJPmfouP/ffwOGCVmsd2xqX94R1nrOOew8bWuaMv
wB45RtzcmcI6duYHhM1mOOcqmXPtNqc+obfyGp28HeMYzmHrmCYOrY9zGA5J
jEP68lHIp1oBl/y162BNCQf3D5oRm6fYixJnOel1ECebJgHhn/dFWC/JscdO
sR2q4ck7vhmFZZVIT0t11JoruUn0SlwE5NuSn0t+LOU01VOnU8X0KdlvVut0
2pc0GNt59913OeagfDIaC0pOI2FuWpMVVYQsguHQJoTSOOvnXRtT7CMhZsR9
zK2vwsl8Y+V4CuZu1hwkO8vUEH4EFuJjU/LYqGZn1D9QsmY07FVlTZ5/p0V4
LmsNww55sO54m+GdG0QNj3M+25K7OX++OWST4CrQnW47puFxJI9Yh15D/8sA
RKZyA6359E4qKs5pXU3QJCE7RY95+6Jw2beH4PVpfTzTgpNg/PYklFfbZE6C
1h49Z15UrFOrdN8m9gyOx8XghU0r663boTw2L/azezYsR0KB4PdUOQrOvLQv
vKNgnSOwB/SF7dgrdbFO1DhxY2cI69iSNss9dO5zy1tjOGfhjSjc/AH363mO
Ryv2GneonvqHRiBn2r8EB5RcJ2AZeQEKvrlb3FQDfUUafBY2G8cgjcvt0Yr+
ohFBCH21Ry1PQX9vRDAfNGjAeUg8th8Z2XkwybUWGo3GwSVM+Wtkd8m3JW62
sWPHqjGds088xnYk+Xvu2rUr5xdX4jmEh8lnJPzrLAqPeXlqIiKHXIRwBedQ
TIdh7LCXOqMiTdPoWAph+ib31nFXhvM1yem8j2/+KJmfgO879EDhj0/BXn6i
WXPwtIj8XOwnUmBd14/hnRvrcFHXLL4VZateOANcBVquRk0EqoLeY1injxvW
GQB7+AdARZZy8a333E4iKs5pfU2guotkPV5fHgxpnGeeae/JgpPtPIZ3dmoE
7+e5xkmgiIp1XJVigllGE747sgc+xMfmAetInKNgJjosmoFpEYJrVuUoaB0h
P4F81LaPdwjrpCA5wV/GOYNc1zmOdc5EXEe2c7nxqFnxkKjPceZcW3QbxznF
fw+GISGK56y0CZyTlMR7AOojj8PCfavLamt1xlyEokWvCb+mmViH7CD5mY2K
63Bl67smETGrZnGuX4WDWvFBIz64HYlhgRyf8Xpu5g+QX0B1GSQK9xaNWapX
p9ymemI6vpIa02mvUm9sh77rd955x9Frh/CHElek2i4uCs5JS0LUOzc4xhcf
YwM68hzKtFVfw065a43ca6N6scaP8XqUjXutMQXpi98XGIfzT7O5OKEn8kb+
A7bCdFdb09oi1+7Yk/fD+sdjDO/c5IJ3KLZj87sWJ7Z+IvJ0dcbTZPPEMU2a
IIZ13vWMdSKGM6yTLV94G3l+bqLinNbXRG0SUow6bAuKx20/HoHX+H31cxKM
2oUhq2ORVVzFR9S5xDPtLCrWcVWFj21rRChu/csP0oLp8PHQW5RjoNlf47kd
a1FSXcVz2VS00zrSPvCOM9YZ6AHr9II9coS4Id5//DTao7Ic1GwdKmp2qeeE
Uw57DfusfNXzSI7aDy3lr3Os09rPTladAaYj65D/SWenWp0LkTfxClQcnCPu
7RRq56jfCa3djd7zZs+H6sUjpvRFyHMS8z8VvOMl6nfGPQFNTCR0RhNM8r49
v0SbjWMdyl8bN25cfTGdo27+sirtT+qN7RC27dixI48jKrViNKbIhlGsxxHP
SU9CzEe3s/EkyfFDbz7OKHcyavLzYuA2wXdR+N9OKa5DNTt6Np43z3Kt2Zlw
OSwfd0R1kn+z5+BpE5mL2h69VHDqL7ylDlcB1e5k8dod42mq3aHj6Xlsvzro
vwzr9K1dA6hWJ+Al2GO/AKry5Ytuez4p4RwasyrOaV1NIE4Csx7j1ofBd7LM
MV0PJ4HP6N1YEiL2H87l/CMV63hW4ikYtnuzyGPzwFHA+af9fsAlK2bjT108
f4YqR0HrSdvHOwrWCWBYZ7AHrNMb9giGdexWOe/iNNkkqtEJ/AHWeVe6cRHc
zntRVC1/GOmBq3hfcZG71trPTVbyPTQapG78AfkjL6jtqzOKanVugNUQJN9f
83ccaAyRz0n5RI25JhpntOZnmpMRN+JehLxAeKeWH4s4gaO+GQxtdDhSs3JR
WCB8GLK55DMQ91r37t3ri+k8LakxnbNBFKy6TnLCOgoH9fDhw/lYIO4KMZ5S
kJMt9vXLkmMRTTiHuKX7+8j80gxPM5wT+uEdMBuTUMzweaOmvbzOk32kNf7U
sI7I4TQe3QjL5Ouc+uz0hGXE+Sg/suiU9hxOmyi9d45+4YGbTcR3qpfcixRH
n9GWtmMMIyYZkBa/E9WBQxnW6eeGddj/475iWKdAvuC25ZdSTJDsHWEdFee0
nhInAfExxiRq8djsAEhj9sLncw/9dIiTYNwe3DcnBPHZJYKH/RzNXyNRsU5d
JY6CXFMyVgQfw/nLfoHXwhmcp6Bu3c6PkGZPxVuHtsNqs6G6LfDPnMPStvEO
YZ1kmBKDUBX4nshXqIN1hrGboBwnO07XOsf7hRInUR2ccwvPZcvdPx0aY3rb
4CJwVp0BuoRYZCwbhvzR3Z14CS5A/pRbYCsrEH1tTmHfSqnZofW8MddEmCg9
PY3BKzsqclIQ9Z9reT6bA++Qf/qihMivBsAQFYxK3tRA2Ajayx8xYkR9MZ29
bn6yKu1XCKsSZr2VabHkFtshzEN2ijjPU9m4y8jKQVauBcWaYIS/cSnC+ki8
f44ynjgXxlvXQRt+jP1+KszM1tFYaowQL2CzOQncbBnPy4wNR+5nNyJvVDcn
foJuKN00hQ3wimbPw9MmnJutGvbKYli3vVmndqeaYtyLbkbRuiHQx4WI+E6L
2jGN6CcduwnWwDdlrCPXbB5/BXb/PrBrf5HXAH7Brfq4nIXwOK2rajyn9TUh
MQm5Zj1m7ozEhV8fhNekhjkJvtlvdPARnMNhHRXreFC6fwObz+EJCRi0dQ2P
7XTwENshrOM1/3vc8vdiBGaLGKFVxTutKm0X72g5r6kxMRRlwSOBY/1dsQ5x
Tod9SEkr8p20pFGSj1Wcjhqqz+U1ue41OjejcMtH0OpTZJzT2s/LTfXUQzQS
Wb/0deoheongJfjufnF/p9iznWwhcQU0xh8knENKPqrSu7Q49igih1yCsBed
9uGpfpzwz8iHUaCLdJyLaiY6d+7sCedQrtMDkhrTOZtE6Y30p+QW2yG8M3To
UD72aPRmGJOQsms5gvp6I6KfU14k4RzimX7nRiT67xLrFLMpNFbd+QzqE+I+
pxqxFpmPcp+dnK/uQr6CdWhOjr4QRUvZ/VQ0Lt50xoXyg4njLjsK1tVPwbrQ
He/cw/vu5OybBp02qUX77ug41jEhK2Y1rMdfZ2vAS25Y50VAP5ctYqXKxbbq
o1JExTltS4mTINWox8tLAnncxiMnAfuMMNA/vj2Cw8YCPpLOVU4CRVSs41mV
2M5P/gfQ0W86fGU+Anf+af7ZgmmYHHyEP0eVo6D1pW3iHRnraMJQFjJWXucG
OWGdPgzrvMvwSJK4iZbGzDYragK+hXXulbAuvce1j87Cm1C2qhf0CRFsfU9E
kra1n5UHJQ62mFDkfvNPl17tVCtQNH8gRL/0U+/BSnvfJ8tjU3gGCgrkXBO+
YSa+r9wjfyHqzZ4udeSUd0T4J4J9Xpp4DDWV5Rg5cqQjj0lyxTrb3PxjVc4O
oe/zNslDbIdeExMTUG5ORNzMtxD8tBwbdOoXSrGd0P6dkXhkG3RpOZwfkXLJ
CDOTNhTbUfirWyR/TVGOddKQ+VNvmZtAxjpjeuDEL8/BXl54ynPxtInM/WKL
XsZ52HgPZTeuAlJz+PYW5WUjrEN5zLlRi1Fz/NW6WOdoL8C8ml1YVSs/oFpR
cU7bUuIkSDfpsepoLK6ZfhheE/Z5xDo8pjNqJ95bl4D88upzmpNAERXreFbi
KEhh68mBmCg8vG45JOJk88RRQPzTc77Bv7etRl6FiNvbzvEx1Rak7eEdLc9f
MGgiUBLyqWesE/I2UBAhbqCFsY7NfET0l/DQL7Rq2f1ID1jGc9Q51mkD889d
OQdbVKDMNS1zsI0RvNOlf42Sb/LUsQ7Zw5ycHD5u6rsWspHkX7qsHU7fV+bW
eQjr5+Pmq3bgdRecs2359+jSpYunfjplkqhjV3HO2SfKd7pKco/tsHHw5pBX
Ef7WNYjsJfH+oI64IFfxPuzNKxA7ZzQS9qyBNjEeupQ0jndMJmMt7q5HiHej
ZfLXZCUuNlMqMhYMdZmL9L7w+3/CXprf4PW0utiE/1ezb6RT7Y6Cde7knxVt
eAOG+HDRZ7QFnpkuKZH3HciL+I1zcYrYvoJ1BnMuTqRtlLlpWl9UvrW2p/Ea
LXJTDPjor1BIE/dxTgKvyZ5rdTpO2ItVkYK//FzmJFBExTqeleq/6DmYGd6Z
sH97wxwFC2eg+7JfsCAhij9LNbbTNqSt4R3COnpNNE6Ef885eGzOWIdyt4Pf
hD37gLj4FlnvZPtWmoWaDQMc/SSc+4VaF9+KfOoXakyDThPf6vOu3mdnZN9h
RADyh3Vw4mC7iHM/le+eKe6zheqhqf8NxXU87X/Xiek4ibUoD4Xhu2FeMgHh
r3R181e9Efkywz7Mjx18sVyb7iW5x3S2u/nFqpxdosR2TkjOsR1v8brhKS82
RmSco+hLPi5cF2HPSghheCj2t+FIDNgDXXIar9mhWh/qnVOfEPca2cEWiemQ
ct5pM9KXfiz2HhTeafY+f+KVsBXnuNqgtia8dscKFKfBuvZFuXbHiadgKeWy
XY3Mo/OZL6CXedlO7ZkJrJPKbMQ02e4PcMU6R54Fcva39pPhouKctqcabRKv
rQiISsT9v/rDa+xejzzTvhTTGbMbzyyJgDG/HKJMtI3OwzMoKtapXymPLYs9
j7VhQbj0j9mQOEdB3dgO9RaVfvsag/ZuQiVbb6wq1mkz0pbwDnHw6LVxKIj4
mfdWqMU6Lwu+0aAhsKdvFhfeUnt7dhts4bMF75pL7trtPHetdE1/3lOiTXGu
eVKDEcag3cgf7so3TX5VxdHF4l5bCOuQz0h1DZ76kNC6T+PIPWeoRBcO489v
I/BJ5os+I3HOaYePKvutkf29se05H3Tu1JHhHC93nFMiqTGds12U73ah5BLb
oVw2X/S60gchfb0Q9ZLEOQl43ZfCwdZfzmljWChiYCeOeULfuQHxu1bBaE7n
45LyLz0J1ZS1KM4h1YoeO2krx4n5qOSx0fuR3WAravv9MJU4sC1xrbCNPJft
Dkc9I3EVVPz+GEzRh2VetlNbO8jGJuozUBo60ZWXgDTwVdgPPQUURrTuM0Et
zlH51tqWUkzHYjbg683hOH/KgQY4CQ5CGrkLP/un8O+Tp1i38phqC6JinYZU
y+d6nEaDt3ashzTvW48cBd6LZ8JrwTRct9oPe9NM/HmqeKftSFvBO7Q/SHt7
lmjmmwf0knuKKlinv8jZTv5DXPQpYx0xr+05saihfhJL72XrtxPOIX7p3x9C
WtBanqPRVnPXHKqn3job3LDOP5A/6RpUha+Tb7ll5pzCUUBYx90/JPtIe+TO
q0f+sQ0IHdwNoc9LiBzUpTYHiXqKUu4R81sjmIYyHXSNF7yIe61uTOcvN39Y
lbNT6Pu9imm+5NxfVB4Pfz7ZgcdyIgZfgMjXL0LYgI4IYeMqhGGbcOJk43mR
bGy93JmNLS8Ev+SLhK1LYDCnoaS01ONYzsjIaDAns1lKPXYMyTCv/Qp5E66o
xTrUY+dDb9hOZLrYoTYrDO/wuu2d74lcNvceowuuQd6eLzi2SzpFXjaBddJR
ETzCrY+ojHUOP0WbJvKFtc5zU/rnqDinbSnlGWlkzqzn5x8TPNMecA7nnp64
D1fPPIZg8wmOc851TgJFVKzTsAqOghTMOX4YnRbOgM/iutzTXnIuG+W5jTy+
jz9PNY+tbQnhHWXNbz28o+OxnYzYjYD/c7Add8I6PJ+Bqe43ccH2U689QVUZ
rPtGsTX8BtE/z8G7divXvO1joDFmtOncNYcS1vHf7Ip1RjGsM/k6VCcqeX8t
N+cotkPrPeEdZazQ2k+fKf1PSCz7ViDoKYZxXu4gMM5LPg6u6bDnRL5R+KCu
iPm/HtjUp7vIWaqLc4okwUms4pyzX5TveI7kHtvx9sKTV58Hvd9YZGz6H7J2
L0Xy8i+g/f4VJI7+Jx9H1LO2Nl4oxlxwXx/oj25DfuGJOvXH1Je0xfgInJV6
DOtNSN40E5aJV4qevgrW+cin/WAdshmEd7KjYf3zCZmXzbXnDuX9pkTsOeWe
O7TPRbwvlUEfMqzzoivWoRy2gH5AaYpyYWf8UVD/HBXntE1NYOMmO1mPxQei
cfn3hxme2V8/J8HInRi7LQllVTXnPM+0s6hYp2GlZ5HM/KyjsdF4esMKwVGw
xBP/9Cx4zf0W/9y4Avoikcuv1oO1LWkLeId4eMzxexnWeZZhncGueQzETxD3
tbjYU62zp9y15AOwzr9a5iO4rS7vWnxY2+Vdc1cds02H1jCs06Uu1knY67jn
lhKyi1S3Q1iHxopyHeQHFDL/kSTv+EYEPc1wzivn1dbm9PPi8Z3wIRchZtSD
iP32VaSt+QFZe5dj4GN3cZzjVTd/7U83P1iVs1uob9LVkltsh3OyebFxlKCr
OyCtVUhbOwMJI+/jPWsdOZIUOxzgi7B3b0F2it7FQ6Z+UTRem5u/pvwNvdZR
ynmguM7GH9o31iFReNkCZwo7Sb3GnHgKbAtvQOHWT6BLjDkFXjYtV2NiGKqC
3nOL67DX40yDhwLlGfJFndnnpuKctq0JGi1yUgx4a0UwpPEid82dk8Cb4jrs
8y7sdXNCLv9ez+Xeoe6iYp2GlWKHFNvJNJow9dAeeFOvHQ9YR+IcBTPRhb3+
GB3Mn6ka22l70rp4R8t5eFISjvB9PZccNt5P9AXYIxVOseb2ipFtW1kuaja8
LK/Zd9bGdBbejOpl9yHDfyE0BnPbz10j5b5VEszb5yB/xHm8Z6Er1tnneu8t
JGQbKffRuW4nOTkFpWXlqMg0ILh/J4ZzurjinBclRDGME7f6Z6SkZ0HpqBir
0cHbtwPn3JLqxnSoXl3FOeeOKN/1bMmdk41h4ccfeQglRYWw11SjsqwUhXm5
KCstAWW1VhbmQvt1H4T2csI7AzoinOEf3R9TOb6RBy/vu9OY3DUFvxDXuqJk
G93xEX3mUB37v8mMjLVfcnxD3O/OOWx2R71OOxDOU1ADe+UJWNcP8MBTcDeP
95hDNsp5bM2JkdE6o4c5YT+qA9/i3DQuWIc42aJGAxW5ykWdsdtXcU7bVuKZ
TjHosCM0AbfNOgqv8Z7z13idzuhdGPBHNFJPVAqeQXW/3SEq1jm5Up5kusGI
zeEhuGnVAkh+03kfUU/809LsqXhx1zqUWqtho731Vv5+VakrrYd3tDyuk5wQ
gJpjrzlxTitYpzfDOsNF/hqPUTTTTrE5bdNu9NBL5zZep1O8/g1oDcwHaoO5
a4rfRd+Lw+9iqmP/T9mzjGGdLnWwTnnsXl4fZ62u4t+trQX3GKiumzjZhF3U
IJnqIpgfqv32ZUQQr7TS0575ncHM/4ycOojzGqRnW2A2GWGtLEd5STF6v/A8
r8lQYzqqyKLEdiySh347K1eu5OOP+P54vyem6eZk5FksKCsvQ8LEf4v6nX4i
n434CoL6+KK6UPCfkf9K9s1TnyhnXKNgGnolTE/+LtWjkSo8XIoqn3NNTUFq
Vi6yV09w5SYgrDOsE4ozDCirrEJlZQWqqsS8bNP9PRSeAt1mWJffL9fu3FHL
Qb3oFm43DQnhzcxlE31EM2M3wBr4his3wXG2DhD2SZwOVBfJF3RmnpWKc9q+
EidBnlmPCevD0HHyPnhNYtjGE9b5/CC8Ru/GwhDRj9ymchK4iIp1Gqe0r0wx
no92b4I099v6+acZDuq5cg7WGjT8uVa3EDeUKi0rrYN3qMdOMkyJwagM+kCu
0XHa2/N/EfawD08hj0H+/eJ01Kx9QazVS+5w4iO4CZUrHkVK+A4eK0lq5Xnu
jmucvweyQwoXUBrDDimp6UgL3oH8T1y5CfI+vQaWgDWw5BfAkpvDe8PTfjbZ
M1KqVyguLuaYhZS4qohDrbF+l91pf1ynY/6gORWWhGAEPyMx/7KjSzwn7ttB
sJRUoSg/D+WlxczHE7xY27dvd/FjnbRQUmM656p4y69TJdcxAV9fX1x11VWO
sZybm8vxBdkr6qWTbDQgRxeLyNd7IKyvqN+JoH61vb1h2bOMY/60tHQ+f5R5
pswx+j+9p/FMx6T5Rb9H+Dw7O5ufq7CwkM8ZqlMnO0m1a3X4rOV80bId0xi+
6VnLOT3+MliYGmJCOD8cHZ9io9Sziu6Hjk25oTQP6ZhtCv8oPAXb/lOXp2Dp
3ZyDOi1wdbNiOzqOdZKRE7UENcdfq9tH1L83YFzMrkGJBJ/+56LinLavWlkJ
7zwxNwDSmD31cBIcgDR+L+74XxCiMot5qFLNX3MVFes0TgVHQTKWBB1F1yU/
wVvmJPDIPz3nG7xzZCePH1a3cE9IVVpOzjze0fK9PaMmXPCOHuvnoZ/oO8CJ
WHGBzRk79hrYYpfDOqena0xn0W28l07B1mFIJD4CbevEdJz9LgXr0H6ysl+s
vM/KyuK+F/l6xIlWXlGJcn0g3zPmvpXMOZ038Sqkb/kJJnMaTMwHVOxXYmIi
V3pP56DPaU2n75v8OQUHKX4X4Z/64kH0OeegZj5hiiEJmh9eZ/5lB0ev0LC+
Xoj5iPlDfCPN1Sekffm77rqL+6/uPi3Tn2V/V8U656bQ996RqVbyENv54osv
OA4hrKDEWfgYZqpPSUXcz++LuCIbf4L3zxsxH9+FDDObQ5k5ImZD807uN0pj
WME1hD0Id5C/S3awUaaFrWcOrRFxmtINk9z661wKy2c3wpwYCXNGFrvuVEdv
H5qLpDT36TPCPjQPCVfRHGzsdZw2oflPuWzmo7CueETOZbvdwUFN9rPk78Ew
xIc1Obaj9NbJj/gZtuODPPQRfR5I33rG+oiqOKd9aIImCTkpevyyOxIXTz0I
r0/318MzLTgJvtxr4Lxr3K1XoY6LqFincUrPxMhsQnBCHPpvWV1vb1HKbfOa
9z3uWL8MERbB12RV8U6blTONd2r7iU7z3E806A3Ys+T6kyate04xnVVPsbX5
LqeYjuAjqFj5JIzRR3ld8ZmM6Sg5M0qNv5Iro/huhGsI0xDuaMjfseUaYPnI
V9QHyFjHMvEKmNd/iyQj+R4afnzn/DeyZ84xIvLzlFptjUbDc3zI7yLfz9nv
cu2fY0dlVRXMmdnIMOkQ0r8L8zEFNzDlEVHNTn7QFlgrK5gPUcrjR5S3Q8eY
NWtWfTGdFKbdmfq2hpOtSpsQb1lfY2qV3PAO4eNjx445YiE0Ngk70x5AJsMQ
GQYNIl7rLnLZeN1OB4T28YYh7CifY+k5FmTmFyEt24KcXAtOsONUVlR4nFsu
OEbWBkXO+SpaMFjgnDE9GM65hM/LnG8eQFJ0KMMDRge+UeYlzTeafwruop/R
58ocpHul+ePev+qMicJTsGeY3G/nNrhzUKcFrkKSjmJkjY/tUF1koj4TxaGf
M1vvFNNRsA7xTecFnZFbVHFO+1HiJMhM1mPQ0kBIY/d4xDnEx0Z5bed/dQj7
9fn8O1Z5puuKinUarxTbyTElY+bR/fBZMN1zHtuiHwUH9cIf8GWYP3+2ah5b
25YziXd4jx1tAvKi5jKs09utxw5bAwNPoccOxXQ062Gde4Vbnc4tnDc1b9dk
aHlM5/T3DVXiN4oqOIP8G8I2ZG/q631Y1+8SewW2ohxYRpxfi3XIxxp3GdKX
f8J7uCd54FlQfC13petz9rvo+pTPU1PNnFe6sKgEFezU5NWRlSw5UQjjofUI
7+0lYx3ROyfyrStRVFqB3KxMNo7SkSHnAwUGBuKCCy7wFNOxMf2IqZdUm8uk
yrkpSkzvsOTcb8fbm+uQIUMc+J/ii5T3Ra+V5WUoKKtCxLs38THo6Fnb1xuJ
3w1G/MLJMGxbjNzoo6jITobzJq8yp04pf6xGXFPhrCeRN7q7mI8c6/RA9syn
oYuL4JzUJ5uPSj6dsgeh5TEoE8c9FHcl3FMnf+50isJBnRkK68rHYPW7waW/
KHH1F68bAkN80+p2yOZqeG+d4XX5pqm3zpGngeIk5SJO2+2pOKf9KHESpBn1
WBcQixtmHIHX+H318EwfhDRqF/6zNh65pVV89LSp3NA2IirWabwSR0GqwYhd
kWG4Z81iSAumeeYoWDILXrOn4qntf6Goqoo/Y5saUGzTcubwjo5rVsxqtuY9
78bFNkDgHe1P4qIa3WNHHlul2ahZ29utTodiOjeiYuUzMMSF8Lzx0xnTUWI4
CpZQagIoX4X2pt39lsbtI4uf2YpzUfDFzTxPhufL0F4y87Ey5r0OrSkVSZqm
ccrVxT8i5pSenYvULAsSY6NgCA9AauAuZO5chMxVUxE/7lHBf8W512QerEnP
Q5+cguzMDI5xSOm+hw4dyrkIvOtyr4W6+bmqnLtCeJdie48wLZE85LLt3buX
x3Qo9kn5bDxOmWyCpbAIUZ/3QhjnJ1A4qBn+fkFC2LMSQp8k7gIJmomPI3P9
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
U6yJu3dVS00BPues3HwZ02fPGIGyQYegdPjpCudwneT+4EvHIX/yIKQXipg+
I1UekuszOVsav9CfeuMdf3kefq7agqXNOR/Nidf8OHL1eez25XrU+dWUFmDK
346XfdbHXWnD5L+dhG0rfpTPKdmU29S8Fa25oGuONL9N89hGjhzpT4uA41sj
vjt0r0aVllm2f5qeBz/avOaKrt35/vvv3TkM854HMQDnIOM54h5vzOPGOgtC
MPmmY2VOh3nbmQN6IG77ZqSmBdZi09xbzm++J/0Oczhmv7YnfZJ5vsQ4xE1a
Y0HHQIFwDo0xk/al/NsaQ5fb0VCPdHsS8j6+CWVDjjH8uBplI85E8dCT0Ji5
w30cHQvrHqbN1qkkA/8kxsnvGX8Q+zDvky7WrYK136Dqx8cE7vmrwj2s0xn3
F4VpfNX3uHM9FyjMs/B+uOwrfGAeyzrCuEZrbXZ/fXcV5klAIusWxNeCmFmo
3TJUxJQG5tEafz57Nxm6bYwvqXmV+QNQV7CvL3u/NAvrBBEXy5ochTky49eh
etu7qp/nJvbHfbAVjNPXwDiPwSWwt6syxnTzffTjNYy5dHKh6fus59HBz5IY
hzxvsVYUrvkCddNuhHPsWYY+9KX+OWrENay5Yb5n2jVomnsXHL8OhStlCVy1
pc0fINd45utkXxhns94wfLaMGyRmoB9M5fqVgfRVU1BCnPPaWcZ+oFgfXz5J
7g8WfXc/svKKYBdrXlZmlnveci9R1+Pwqzfe8Z7nNM3x4miN1+ZrmPM9XOvp
y7kXyuNR04A5+6DreozzqinKxfirD8XE6w6XGmxTbjkZkWtXqPc0aSrw/Tg0
viJ3je+n+33w2idNmhRIi2ClEdcdtlejScss239NaxWwdo01bC36jHIsXbrU
rUVNXMM5SOyhc8acn5yH5lqZZnkdM9a5NzDW0fpuOofDtdC7x8+eaEXSP9J3
EL9oPpzO45jXW384h6/XWihaj86TY3IhN78Qmet/RPHIC1A65FgTF/kPKH3p
eFSGDISrpty9J8b7qfds9LX7XL+SPLkf6YvFusGcjz0mXOCeb7Fr3kDUT71e
YhqZ6+Fa5TPXozHPhQrz/CjilczfgGbrmJUXaK/pzwpxOT+/wcRxSlc3QcSa
nBN25MfMFZjnJdlTUWGeAPU8xDys+V5/O1zbngKKfnPXRBhntG9uxH5kFtZp
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
nnD9ERhzSTesG/uhu77f21fxeG0xs5YZMVegvUPNX/N5vj5MaxH79bHUY8vM
R9aE51Ey7FSxNpxo9BU9A8XPdkN91E9tuhaa5uEFy1nuqKFqeLJRsuo9P3jn
ErWOT70Krmyjt8f+Gxq3ajqH1rVjLx/PMTlexGIirkzYgl1bR0o+FDYG0iy4
HYj7QNyQwn39SAJa18I6SlM6KSUdmfG/oW7zYKkp7Rvn3KvyOfyaNt5Ty9FG
/uv+bKx30LmGrptDTVL9c+yZUleanN+m/Qzn0Kdxnyx47poxUu1yLcuePRJl
Lx6BUnKyTfy12i1z1Rs4fPdnaA3r6NGa9rTZ+JlpC5eNIxi801RXg7AvX8HY
y7rJWp2QK7th7j+vRVpOgdSTTTbyj5p3SbyjsQ7PaevWrbIHIeMhHz102MPj
EyOOsrSlLbNs/zU9P7+zedXuMLfDuc15HhYWJjEJfRH9KvMfrPP3xg/ksdEX
rnn7MYzveZAYh2DcFd2w9PV/IDEmCin2tGY+qj04h0bcFQwXSf97MPw1Gn0c
j+v3mEkJcp2wb1iA4rcvUDxnrhGvnoaSF4/ErvmvwVWntd6Cz+3o993bnI9m
eGfCxS17jk5UetSOOSI+Lo7WJ92mZ7avzbtP7IGS02k+jBoe8fks3/GlrAGB
jqdb4J2H4Fp/BxDzOlCTab5T++YB+bGug3W0pnQ6cmKXoj78KYO3FkBrLfzv
cOUZ+yJSy6TzuU572+hzdY36vn9G7Rji3Jn7zgmbiUbq8uu9n0A4x7H3cI7W
bG47/1nMofQspGxbj/z3e6Ls5RNRyn072VPnCFR8eh1ctRWG/lrLz2Vr2gR6
6LwOa1L161oz4gytWR7s9fjFO1rztLwIP/7jKqmVNP7q7lIjdvUXryI1XWCq
xER5nnZDV5r4nF95XxljhIaG4k9/+pOb6+IdI4kxzYifDrNZZpll+7NRK0TP
0x9tPvAOv55zzjlYs2aN9Fv0A8Q8/J7+gGsa95ekLzN8Tdy8MZhy03GyDzG1
CmY9eDFit0UgNS3D7QPbinO0Bctd49C6NK3pwWjzqzltXicS45Fsz0DRh9eh
bLDBY5M5npNR8s6lcBSnN/O1rZl3z5d9gnfSslG68m3Vb8dbr4Dr/Niz4Vj8
MFCR1qZr219M5854bw+MGgJfI1EOxtxFURNl/xbfmgUDFN6RmtQviQ99orpJ
+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
A9JCjyArNoT/XJKVhrL8HK5TXd0cTr9Ii2rgst7ii3+XfCV3Lm5dJv0vcfEk
zqjTf8dFQ5uai4xvHxCanTJmvPsPZH94Laoy9PKFfXp/d6P9LzqGVtsHpd4d
FvMTw3ajZNUw2OZd66FVwLDO3F6wbX4ayG+YDkNLm+R++1oL/GuuWJ6bG3Ts
/gv5XMx0+RPgnbaHdRqAc0gDj3QhSFOa9v5pP6CN7gk0t5E/I7/aoPkvLe7z
4rkeZdKpTShfcgcqCdssdNdcYzjH72rYdr4KlBcIzNoK15Pyf9qPa1SfDv+c
ii5B0E5kje/m4q+Rrs7Ec5E//3nwXh0vc3XcjbSYKUb5wqGTOme0Fyrjua8m
Y6E3TKUnnRmTmT0aEBcViZiQE4g6GYiIwH04tW0NQnashT4iBHEHt3Mt2IV3
n8V5JssfuQSp4ceQznCUVqd1xtp//etfdeGcGLb6aMRecIcaGZNqqqn2ZzW6
nwnv3MhWrKYWvPPcc8/xvReqnZBfqiwvR05BCXZNfwkLBnTGvP7tMf+ODlg0
6BzMuUmD33tpMLO3stjP/szvbHtjMELmfoH008dQlptVw99RLdtk8r2e09CZ
OmTS/5I/ljy5Ot+H9AmSMpHyy5PImXS+mz7BJcgc1w1VabHKCzcsHrr37cjZ
Qa2RH5BWgdaYgrSgFShfdg9s86+rqVUw6xLYj0xnga9EHn2DPmtzWuvNaW2r
S8v7Swy6aOSHzuB8tjrrOyGtj3faFtZRcE484ZwFbrUbbzhH0YJIXAlxT9jR
lu6N1jDqg2y7GgXs2iaYYYoIRNHaMbDPuw6VXF9a1rLZ8rsGVRvZNbXqFNza
OvU54nHTOWxUnw4tjnVSYDy6BdY3O7hmiE65ENlTL0bh5s/4+9SlS0Dmrh/g
y3FQPKV4RjWUhpic6ylnpdLx6/UC4+i0WkQHH8PJTUux49OXsXpsPyy691zM
ul6DOTdqMLsPWzdoMLd/O66PRHqwpMO2kD0naOH3yMkvRLrFwo9/4sSJPJ/p
3LmzN5yj0wicI/Mi1VRT7a9l8r6m+1yrqQXvvP766zh9+jTPRYwJelgLirDq
id6cG0v+Ra6FA7tyzEO8WeoTpJoy+SDSpaba8izmmza9MAD6XatQas3kvq60
TMx/bMicTclVaqhfJVwkNZ/rfS/SJ0iyIHHhODFTdIqcKXo5sl7RoCpR0Vpq
5N4fcQQaMlOtOZZeG404UwYyDv4s+BzzPGaNLrmNa7O11d4dipNSM+PvyF+r
uSTeiUJ+2Ldi5ugxLzNHa+AdR6vgnbaDdVy60lkRC+up5yg4J3Wj8iFUnENG
/kzuI7Wt+1D26MQiZ+f7sPtdznCOB3eN+hZX3M+wa4D4MK3UbyXn6ZzZ59Xz
ed6J235D7tudFKxzEede59AM0VNrffqM7vwyX64n3b8UzwgfkTWktkOf26nZ
YzRBz3x51PHDOPDbp/B/9Gr49dVwvVfaU6VZoZRfUK5BPcL857vPcuUhd3Tk
c3a2jh+BcgZXszMzMHXqVJ7HdOnSxRvOSWTrfiUP6thyqZdqqqnWwibxzt1s
mTUevkDug7z55pvMF5mRX1iMkPULsfiBC/h84vlU27mjPfdF1LtDOijOxf5N
+yzkg6inh/zS/AGdMOsGDTa/NAipIYeQnJSI5BSai9Kwmg75VF9rOtKoLi+5
AfVjnTjEG5Ng2vQjst6/GtbJ3UVdh7TY3miHisgdDXpvd5NxgOpSrTFvxz0u
Et7RGVJg3TGVa69Wm73De3duQtXyu+BID1UOvu1gHuK1y1lJf1/+mufSOn+2
hv2P6yDXiXeCCe/Ia9uyOXvbwDrVdaWF3pqXephXnEP+R8U5ZDJPr28mS4sv
3qOTiLSjC1FFXF3PHp15iuZa+FzxQeqpdzSn0bwiyvcbPE+n2uc1cE5C0qqP
BfeaOGzUqzOhG3K/ug221GjxZvX4cbqe1AvbEC6dnCtLfrmhRu+XkcXwjiEB
x1bMxrJhl3OeyPwBXbCA4RqxZyryDNpjpb1TPyXHoN/xPINmibJ8hH7v/8jF
iDlxBNM//bQunJPM1kNK/qPiHNVU++ubvM8Hs5Wk8fAJ0k989MH7SEpLx5Gf
pnLMQtxYWdtZwrDPskcu4T6KNB/pcenDF3NMRDiH4x6axcP+jmOeOzpiDvvb
wFmfQxsdyXsPffGnclYkcZcasndERr09Put16VjOmGCA8ch6ZH3aB1baF5Na
bG92QPmxxWhsnuM+E6ZeTbjmXjris2mREBeBonXPwD73GsHpqDZn9BrYdr3u
mrvTRnraKbei2KrWdDyXTln14R2av/MoEDYeKIhTTm7LYdnWxzrivbT6JKRF
roXNqSut4pzG2Bnzr5rh+moNSUgM24Uy/4eE9oCzR6ev0qPDfNtBRYuA1zpa
75oSD5BiQeOxolLDigpDyvxXYJ3QTejpENYZfzbXYLOX5MHXOi7NzNFqtT4f
j+SxUa2drKHxOd+SjF2fvsxzCtJ2XaDUa/wUPLPonm5YNuQfWDH8cqwcdY3I
M4ZehqWDL+LcNs4fob+leaIPX4IJYx4V+7WdOnrDOelsjVLynk4tmGuppppq
rWvyfn9EI/yA1/rO1zNmwGRIwM5Jj3H/spz5mp3vjkHc1mVIjw1DoiEeRuLS
xMUg4mgAgtbMx87PXsPKJ/tiMdcy0HA9A9qn4bop/TTYOf1VxJ0ORYKhfs0X
yod81ZmW5q437fO8SSVWG8KPIevzW2Gd2E1oExDWeasLSnb/2GjdaWm0lyV1
EloT7+h1cdAmsPMaspXlBINhm+vZu3Mbqn6/GPaIRW2mrkM1OjmHSa3p1JL3
KKtOvMPnjQ4DwiexZDVBnNwWusati3WonhPP6zmp0ZtReeJFgGaBHntaxTmN
NLon5Zyr1sc6Oq6/khB3GnnbxsPud2X1OTqEeeZcDduW59j33sKccetoEbif
OzlDu/HnjvSmzdCHH0fqD8MEF4H411xv+izkfX+/eDM71a7q//7S3qDUHWjI
cVBMoxqVb6bs+1nM2P72UMzuq8FClhfQXqqs1xC+2fr6Qwhf8h0sYYfZcxNR
XJCHlEQTw3URXJsg1P9XbHptMFYMuxSLhlyMlwb1YflKu9pwThZbL3jkPaqp
ptrfx+R9/6JG+AOveOfT6Z8iQadF+Lq5SDPGIyu/CAXFom5tq2I+OzUFJqOB
+cl4rqFiSEzmdZugVXOw+rnbeZ15rsJtI79GfYY7p78CLfNbddV3pN+l/aaG
7BnJ55LWmy8abM64wTCAPl6PzK/uctOdvgTZ489BwaopsJfIGaYNz3vahP60
+7nVxUBrTEdmwA8iJ5jXu3peQNpsi2+HwyL72VsnL3DPjwnrqDWder7DHvUd
x1FPfhb79/GxcBx+GIj6EChNk2e6Ra9la2AdrT4RKdHbUXn8pTpwzmgV5zTA
yDc3ZC5Lcy6twl3juvqe3DXq0VlJPToHwa9nK89EkvNszugeIF0CYxISQg7B
8tntsL5zoQvrcL3pofy96tOblkb7iXQ8DanTydoO8bP5e9UZp8X/lWRbOM6Z
049wztmci0YYZ8l952HnhBGwhB6pcVxJ7JhS2PsksdjJ506w31uyrDBHhWDc
k4+wPKU9OnX0Oic0T6PiHNVUU811/5M/yNXUwmd77dVXkZaegfKyMmSmW7jv
qaRaC/NtQq/SjATab6d5LnFx0MXGwGgmv5mIo/+bhmWDe3BeG/k1iXcCfvlY
1FNqwSLkdym/JY2Yhpi7Bhvlxj7XAbQx0CWy/H/GIJfuNHECJp6P3NlPN2rG
jqeR7n/d8wVacNHnNSQid8sbsM/zmLtDXDbaB907nh10TrVY1dJG9TDq15J8
xlY/b216SbyjR17YDwDNvazRjyLxzhAg5kuWTOS2yPVtPazDckK9GcmxB1B+
4m2uWWevtZ7Dzk2KinN8NdrPp3uz1TX1EpJgDt+P0pXDRA+iO3eN9yTeAHvw
/8RBt2KPDhndB5Sv07GfUY1aztYJ3g/LB9fDOrWnc1ZC1rizkTvzcfF+PmId
irNyRkNDsA4tX2eLVpWX4Oj3EzDrRjEfh3QFKC9YPvxyxGyY53yevaqS3X42
vpeamZHB8FQiv84G5jco7ygrLUF4aChmzJgh9mW945witj5Q8psuLZhTqaaa
am3TpB+YzFahpha88+7Udzh+oFyF9vHc69bEPXbni/FZx2YjshguItPv8If/
0MuEvgrXcCPdgo44tX0N12LhejJuPlRqbTW0piNNarA1JJ6IGTtWZHxzr9uM
HUWT7eu7YctJFC9+hv0rlBs0RIeu2RbFMz3LOU8fRMnK4cqcUU8d6kvhiF3T
KvpTnn1OKs7xdYn+e4MuEgWhM1gOP8JNU9lLfUfHMJFNzq1qvmvcOlhHB228
Caa4IJQET2Y4Z5h3nMPnhDJcmLRKOdjW7eX4sxhdU9LUalWNAqm7tusjOOZc
hspFXrhru15jCXSFMkenda8rYQLyZ2fGX4tXsA7ziyf2IPOdS0WskrN1xndD
3uyx4hrVM1tHmtQn8GWeqPui606xn3gU/P1qPb8OJOxaxXHO4nsZzmF5AOEc
/1HXImLfZuQVlzIYWs5CjUuDiPYGpT41Lan7RtzJV155RenP8To/R8U5qqmm
mjeT/oD8Qw28I/lszz77LPdvxMVy118h/y1jHT2SH8/IyOR+j/wXGWlPL6X6
DmkWcJ2VDlj3n7v5zDDS15f8G6m9RvGAakaNMZrtLfs7fF6EdVJyYPn2IeSM
P9sN6/RAzoy7YMs+M6zj3kckZ+20dl5MOUKcKR3pAf9DhVOHuq8rT6DHVUPg
yNYqH6Lle9kphspZsip/zdelc+pRF4R+xXL8R2vHO9S/Y/ATuaA48816PVsO
69A5MMCgDUfhqY+BwEcYzhnrBec8LjTqzEvFva3WcxpkslbdKrUdnZbPDE05
uY5rSFafo8P8l98/UbV6MBwpx4TvamXuGpnsiznjPidltk7C8d3InKRwEJxz
RM9H3uKX+fv5inXIKG7GxcU1KjZRzKbvQg1T7vuCVCPv9104sAvXLKI8YNnw
KxG6exOM5iQY2Gvk5xe4/ZmD+wo5H49iJu2pkk7Ru+++y/ORs846S8U5qqmm
WkNN+oV3NV74bBLvPPXUU4iIiOA6PIR3JMeMsAX5O/JJtP/izj2zVZTxxxMz
PxR+juaBDerKuWxBq/x4fUHWdiRXifxuQ2s67n0xcuakz/6aYR0dwzpp3w1u
FqwjjeKB1E5uE4u4bAlJyN/8KuxzPblsDP/MvAT249+JefHiBJzR52+I0RwP
VWe6sSsOOr0BxrhQFJ36SME7nnNknnTqUYNmZTrkPdv017hlsY7AOaTDIbAe
4ZwxCp/PE+ew82JapBykOj+noUZ+nvbZJZ+p5b7f7BobzDBEnUDBxhc5D7ca
1iHuGlu2E9+LA7W3LneNTNbBmsSfObHOLoZ1erhhnR7InnQ+8he/Jt6zAViH
uBqEwRpa25E8NtqXos/oGbfttiqELf4Gs0iLYGBXrtG66P7zELjoByQkJkMX
G+t8X8KCZMTNoDyCluwJio6Oxr///e+65oSqOEc11VTzxTorj9S/U6tewejR
oxETE8N9EPlu8m3ki8gvEcaooctC7aCVlczvVmLTf+6E360M6wzozPt31r1w
F2JCTyLBlHhG83RkLCFrFE+shbAOmeRktYn8nfS2WU6cGLYbpSsegY3mUjhr
O8Rlu5nnDI6kQOXzN39tx1PLQa3pNHbFQasXHK7i4Km8V8WrxnKQ+B0sO8T1
bYZr3HJYR84KNSI7fJaiQ/BUTYxHj0eGwaH/TXD4mulz/x2MeKbymrbk91uX
YEb64Tlw+F3hwV27CVWzr4Rt638YGCtWuGutf20b0xNT6+JYJxWGoB3IGt9N
zNYhrMPiVfbkHshfMZG/Z0OwDh0fxc7GHB89n64/7VE6TbnniyxJWDniGiy4
qxMW0AzQ/u2x+e3hMCanQRsTxT+LxEuUU1D+IHnohKNpT5Xyi+eff76u+Tmk
Q/C+kr+oOEc11VSrz9zxjkXj4VM6dhS6jgMGDMCxY8f4Xg7VeMgnka/zWseG
2NshLi5x2ZY80B1+xGUbdDafExZ2YBsSzIkMnxh4zJR7O40x4tP5PEPUfbUA
1nGfFeO7RlzzL67LZkpH9r7/QyVxP+a76bKRJhtx3vdPBspapo+dTGoStPx+
8V9r6TneSUJi7EGUnxzHcv+RXmbvPCV684NfAHJOKJe4aXPDlqzr6PSJyIhc
LmpWNbh79HkVnBP3NXMYVogZJK2fC/9ZTWoUtJz+NNV0kmE6HYCSVY8Kf+Wu
R0BzkpfeAbt2vfDXbaCmQ0Z1ajpHTTKTyB3rjGPxaprEOhcie0pP5K+eyt/T
0QAtBtmz01Ddae5nmI+W3HN6HWecZI+mA5sws5cGi1i8px4dmsUXuvcP8PnW
8Xqnj5e9P/RdkjV92Qv8+OOP11XPcdeV7qxRTTXVVPPNpL8YrhHzhqv5lk5K
P+DgwYNx/Phx7h8pdye/RD6K9vkI/9DP1HPDfR/3u4Ijs27sTUJz8u6z4Nev
PQ788iF0cbFIZn6S9vLl8xti7rlUo2Z2tiDWkf1EbSmHJ76PXhuDwnVjYfe7
WuyNytyBdApmXwGHaa/S09B8eaE8R6RLIetfak3nDK+tgndSYnai4sTLwDFv
eEeZvXP6HaDYpFyMprvOLYN1hLZ0WvQWVB5/QdGQfsrjc7LPHTgcjqiP4ChN
hopzmsYoBtD1bEye3PCl5/zMjEO/wD77clQuvMWjT+ca2PZOEAfmaDg/oLmM
4mOTnSMn1tmJzAnne9R1LkD+8rf5ezakrkNG+4yNPUaKZ+Sz6R6XVlFUgIOf
v8wwDs3Z64K5t7XDupfugTk9G/HaOI5n6G/IH0geG+2bEt6h8xUSEoI777yz
LpxD8wElzlHrOaqpplpDTeKdh9hK1NRS37nuuutw4MABzmWjOjP5O5q/LLV5
yJdRHOR16coKnlcE/TgFC+7u7NTW3/DaYOgiwpCclo6Kavw3h1gOtyV/52Hu
/DXaX2pwzaQFOWyE/+QeaFvBO3pdLO/zTTu6AOVLB8BGe6OSy0a1nbnXwbb9
JTGLr4nOQ11GXA+Ktyp/rakWu776ZFiiNsB2/DmGd0Z5wQFjhBZ17AygqvHz
pLxZ82MdoS2dGHcEpScn8v4kr5prgSPgCB0PR0GscmCt36/+VzC5D98kNYt6
rjP5KXP4XpStGIyq+X1cNR2nHsHDcKSdEDinDegRkNH+He3jNWgOQl2rWr9O
Ty/9Oq/w920o1pFzm+vnI+o8VryzNuM+X7Q4KxVrn+rD9VeJu7bo3m44OOsz
HusTzSYnL4T4GMRbIx4d6Q9QPnH48GEMHDiw2v6qx0pha6RHvqKaaqqp1lCT
83fuYUunqQXv9OrVC/v27eM+i/ZiJN6gfF7qa5LvtDLMQzmPYc8aLH2ohzJj
tBNWjLwG0ScCUVxazjKrRuRWSh5F2vsS5zQ0nnDN6RQrLN8+AGszYx06B3RO
mizuNVEOIWbuJCN/8yuwz72mpgb1zIvhMO5Gc++FEz9bcsbbzvn58y9R30lE
VsRCpU9/tBdtNqW+Y5znxv1pmu88WfNgHa2iuRaBwlOfKJprYzxwDsN1gQzf
nfwPHDnHlYNqG3nwX8FkLt/8nFPx2pkHvoV9tofG9PwbxZ7M0c+Vg2ob3DUy
whAUC5ukV4eWuw7bZE8dtvOQt+BF/r4NxTqENwhn1MA6dF0pXhlMXDeV+mv5
MiuP7Hd6owkG9pjC4r8lTcwpzkuKx5xbNHzOBOevPXIJog7thCU9HVWV1Y+N
vkNUz6fv0aFDh3D99ddXyzOU5VAeEzViH5ZMxTmqqabamVpH5bEPWzEaD7zT
oYOY43XZZZdhw4YN3GdVeGAOWmKfPoH70Zz4SKx49Er4MR+44O6umD+gC8zR
4S6fV1WJypIilBdYUWrNQEl2OooyklGSZeH/LsvLQWVxIWzlZdV8ZW5uXqO5
YXpFc9rbfB3r9w/Alpss3uQMsU5b7dnh54A0XBNYrDq+BmXL7oVt7rUetZ1r
Ydv1BgMjmU1yLmo7N8RhoO+PWtNp6kXnUmhRWMN/hYP37njrZ6H+nVFA2tYm
69lvPqwjZqfSZ8oN+5nP0HF4nRU6WmC51G3KAbUdbtNfxYj/JLlIzaU7oTUm
wxxGNZ0hNWs6c65G1XqGZ3O0bU5rQs6KabK6l3O+zl5kTrvSy3ydMfx9G4p1
yGjPkt7DwLAL4RfCMvzcR0ci9nQYYkJOIjo4CFEnjyLq+BH+c0zIccSGhyAu
6jQ/tsSUVJSyWywrLhS/XdeOzw6leO8/4iqkJRq8xg7idlOesH//fvTu3dsb
zpGL9l3vV/KSThrVVFNNtaYxiXduZCtS4+F72rdvj3bt2qF79+7Ys2cP91uU
00htNlnbSVLmMKTEhGEl83nk+xYNOgcze2uQERuC0twsZMWcQsSyn3Fw+n+x
+b8D4T/sMiy5vzt/DvX3+A+9FOufuxX73huLE799CPOhP7jOS0Wx8JOJycz/
N4YPrY3lGqaZMwa6sA7tldEe2fznYS/MFg65ibAO1enbXj8KOw4dOw/GFBTU
0KCmvp1bWD5xJRzmvWiu2o7kUKiaBM13jXXxgrOYH/J/blrUXrQKTr3EbuQQ
5Yt7Zte6ObEO9SJlRPq7cdY8NdceF9y1RH+3z6JqSze10b1LPr/5sI6e1xcy
An6AffalHjUdhnvm3QD7yR/EwbShmg4Z1SvonEjdnDNeHOskIyH4ACwf3Qjr
1J7K/txFyBrXFbm/jeLv66gqr+fIapqN3aup6RkwsWONPR2KyGMBOLr0f9j5
8YvY+PoQrBh1LRY/cD7XVPO7SYMlD16A5SxOr/3PXdg27Rkcmf8too7sgZH5
mISALTx2E9aZw567dkxf/h6VZWJeBX1n6JE4b7QPSnz4K6+8sto+qsei/dYb
PPIS1VRTTbWmsvbKY0+2jmu84B1aPXr0wPbt23mPDuU15ONp0b/NZpPgOYQG
Md94uVLX6YI5/dph73tjsHr0tZjZR8N9Is0ao34emjtKz1k46GyOdejfxP0l
/pvfrRo+h5n+vWfa0zi+cjaiTx3n+Q/tR8X7nCvrhPZybCQyv7oD1gkKh+3d
S5DNfi5aNQn20nwRCJoI69AeKNV1Wj/3rb5EbceE5FObUeb/IGwc77jVdvz+
CdvuN4GSrCY5H57nhTiQhAHVmk5zLi3XojbHBqHk5FQF73jr3RkKRL4PlKUq
F6nxeKd5sI6Wc/KSYvag/MTrisbcUzVrOuxzOBJmiRlRKs5pVqP7l65Nk+X0
ziX6dBKVmo6tWk3nJlHT2ciud76pzdV0yOh7T32sTVbHJ6xjTEJCyBFYvrgb
1ikXitoOW9lvd0Hez0P4+zYG61RVlCM5NgJH/GZg/X8Hcu6ZXz8Rk+f1b4f5
AzpxnYEFFI8HduU/0+94/+1tIn7TWjOmH7aMexRzbxZxfjZhnafZ9bLZkZVu
cepbk78njEy8kPPPP9+ZT3jmGGxFaQS/hEzFOaqpplpzWQeNwDyEd4I0teAd
qjv//PPPTv1pynOIi2tT+g5jjx/CsqGXYS7DOtxHDugosA37mTAN96Hcd7bn
2gXkP7mfpUX/7t+e4xvysTSbjDAQ/Y5mk/o/dh0Cfp/O6+uCX+xDzNUJHozh
VACyPr8Z1ondBNaZdimy3+qE0v2/N2nvAo8n7FxIPkNbq1+QBnWcMQ15W9+C
3X3eDj3SXirDO46kI8rpaFqtLop/lA+oWKeZrzH17iQkIzlmNyqO16LNdnws
wwkPAzSD5gy//02PdRjOiafZQcEoCZ7GcM7wmloEVJ8ibenoT4BSwmttLwf+
qxntz8ve9qa9f6mmY0L6wV9hn30JKhfdUrOmc6Jt1nQo9lHNomnxHzu3RjP0
p08g9afHYJ18voJ1LhJY58cHxD6UzfeeNJoJUZhmxsmZH2PJ/edzfMP3Gyke
s0XxeR77N+0zUjzmGOhW8TjXGZc78edSXKYYPe92sRdJf0uv5z/qWiSnZ8KS
msK5yrQHSvufCxYs4HNzqJZTC86h/dWL3fIQ1VRTTbXmtPbKOp+t3RoPn0Rc
NqkN+eOPP3J/RvkN57CZTcgrKEDUrrVY+lBP7iPJNwrcInTZ6HfzOO7pjIX3
dMPiBy7AEvZcvgb3xOIHL8Sie8/j/nTe7e3E85k/JWwk9pg6Y05f4VODVs+F
Liaa91PWWeOhmk6CCcb9/sj6uDesk84T3GfCOm92QPnJFc0SA+mctEWulrO2
E7wBZcsf8OjbuYXP6bMfmQ5UFskoeUbnQebBxBNva1rcf+Wl59psKUiPXAU7
n0XzmJf6Dvt94EggeYOyX94WsI6YF0o/54d9x3DOUC9aBIrmWshrcORHKAeh
9ug0t0mNAqnD2TTfVZqnkwRT5GEUr30CtvnXo1Jq4v8JajpNOkPU7ZzEJxih
j41AypIJgotAnGvCOuO6Iu+bu2AvznHTL63bygtzEbPej2sG0cy7hRLf3Cn2
IYmDQTiHOOdLWExeNuQiLH/4Yr6WPfwPLOVxuRvHNHNvk7yMjk4eBsc61K/z
6JUwRYcjk+UFucwX0H7fF1984ezNqQXn0L5qTyXvUHGOaqqp1lJGPqejsnZq
avomJ9557bXXuG+m+EdYJy0zB4d++RALmc/k9XDa+2GP5BsJqyx5sAdWjbkZ
2z/8Dw7NmYGTm5YhPGAHwg/uQvih3Ti1bTWOLPoJu754E2ufvxvLhl7KfOy5
Yq/pVrGHtEDhupHPpteJPhkodGL0tcRebRzv8zSv/RzZ710B6+TuHOtY37sM
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
jWyPyKc6IfWt7jx+VdMVlRzlcV2RMWMg0rJZTMywcH1Tiotyvo6c9yr1I8go
Xn700UdOzlotetJZbE1W4rbam6Oaaqqp5ptJzYK72IrQ1NHDM2jQIK57SXUd
2jMkDU2pG0NxhnoqyZ9Tnp2WnAhTWhZSF72NbI5xqu+DUXzImnQhdM93RRjF
k9Ht+aIYEzqSYoyCe0Z3VLAPW1TzYb+L+m0cdCFHlRpP3X3eEuvQcZ3pfl+j
jXJPpcZTEbUDuTPuRM6Ec6tr+yhzxLPfu8IN7xDPxABz2B6UrnyE1wOqz9m5
EA6TnLPiykkJf9K18EmTgOoJCq5KCV6H4rVPKlrRfermqcl8njhLyweiatdr
sNP8RPd6n+SH/dmwTX3m3jvk1sfgKGT3RfDPLE8cxnCfW39Pbfv4nN92M+zs
OZUL+iF793QYoo67MA9dF6dOwV6Un3jDi06BokEd9TFQalEOT1wDT6yjVzSm
U6K3o+L4S+y1HvOiR/AIHDFfAuVZcNa4pFHffJ4R9sOf8jofv/518dRkPs9w
ecXi21C8agQyDvwAQ/QphgGSRB1Lp/Oo27Q2ZmlK7KN1fTb2WQn3JDDcYzk0
E8WrR4taD2He+dfX+R3h51jpebPvGceSYi1g861GTT6PdLwon66+50H7RAnI
DPgejtmXVdclmH05bAy7o5Iwg3L9CeccmInscWdz7m11LWmBczK+HgTT4U0M
56QhPja6Va6nnLkp7gMffQ57XllaAsy/v87xDdVuwp7owrENjz+PdeCYh/bd
ZKyi+ESPxv+eg+x3PPGOMkfho2tRfGw5P4OOKlfsoT03wjWEd8hP06L5oI88
8kh9vTk0N+dBJV6rvTmqqaaaag0zWQM/j62tGqFfWc3PduzYkT9ecsklXP+S
6jtytjMt2quSc3iys7JQUlSI8opK5P74kJgpJ2OAos1jGX8+Isd2RvCo9jgl
10gWP548C+FPdeVctpBHRdzhuOcxBfewGER1nrD/XILYbUucc7Prin8U52k+
QVPxuBttCt4hTdOCWY8jZ+K5NTULnHhH9vIKPdYizzk7hDFmXgz76QXw7Emn
Xiq6JpTn1l7TEX3XepaHmcP3o2CD4OwLrlptWtF9lB6cPrxX37ZuFOwhvwmN
NGkOW629zH9Nc9OtdZux6Ug6AtvucajyH6hoDV9fe1+Pks+ShkH5kgFIP/Q7
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
+OBUh84ZJZ/6+8dvRGNjExrra/V2Ui+bsSb+9l133eXBOAFiOdQfoK7PGeZ8
adfMsc0222z7z7KODm8dgJdUK3a0o03NemrR0dE6Z4WcNsY4mM9aV23U/Pzm
oct1PIdxnRmnOLBm7iuG5o3CRJlqbiGHm/goPydbx20Kvn4LUUN66Lo7mqdw
owPRzw9AjTvXMzcS55BPTWwjGIdzIrUE9hymSTb8lxTVUp2mT5NiYh3vtgbO
SlLzcx5S0zORrs6xUrm61Vs+R/GkExXe6YGKF3ywjiX3ptGT0+Gbm3O69mHr
F5yPut9fQfUfM1H59XOo+GQ4yuffg7J3b0TpG1eh9M2+Lds716N8wX2oXDYW
1aveQm3oUjSkhaG5LB/N1WUaB4lW9v+yid646O0RR5PXw8b1Z9Hr89f4d25H
n01ym62afZ717GbzOtcUo/GPiV7NAontLL0Izetu8R+/8dc2+ObpGPEc5m24
fp6GZOadqz6anBivcbjob3ANm8+dxD/5uVVD2LdZ89Ykd010GOW7vjjofwID
ebBNqvE+frvCK9sMDBOxDqm/fYqM795C5pJnkD33n8h7qx/yX74MBS9frtol
yH/pYu///301cmYMRc7s+5H50ShkLH8FrmXDUW+N1fnqtHFM0NrULeM/xDq1
M05C8bOHomhED7imnIncDctRUvP3fs75HMmYLlrW1KRJy85DaXoc4p+8oMW8
EHH3wUhauRiFxSVqCLPwm81nrq6yDH/+e6SO5zBXZ95FnbFy8kNIz3Pp2nB8
RjlXccz+7LPPcPDBB7cXyylX7R2HkY/TwWHXzLHNNtts+081q27BlarFOPzo
Fli1qa+99lqsXr1az1M1pn5AQ63x+suE2zHrHIeu3zZTYZ7f35+s80aTLPxs
0bvJys5BSfJWxDxyMkKvV3OZ8NjuPxzVmXF6f43KlySnQfgNusbEnojjaA0f
5cekOA2fhnoLMVFIiApDwrZwxP35E+JXf4O4FYsQu3ympc1A7LfzEfvHN0iM
2ITs5DikRIchv7AIJR8+BNfj+6Bs8hGaY9Lah/GHcQz+PVvtuyehZOIhWutA
c+KYA8Q6d7qOT29v7dIWrbfxd9bUGNlT1xTU8SW1j+Kpp2tt7OpVb2odheZK
N5rrq/+rdQ2kjpJVN4p5Vsw/Y78iXhd/S3QrBMMGavTrBQ/we8QBzBnj/rhf
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
oPKd49FErDPXyj05DbXTT4L7qUOR+1hP5D5/PvK+ehm5SVuRll2A9GxvvlJS
UqLWFNa1IePNluDT4n3/luDhVSWkOA0MFL8dztXLkPn5c8h/9QqtIVU07jAv
B8eX66b9amOt2TWyJ8rn3YPG7Bhvzcw9aIJxuBYsWnz0j4lvrTUI96p/TIyj
89W3ITlsNdKXvYDsqRepa9MLxSONvKdWueqt4gItr69rpOof750KrOlvxHZ8
YjrNv9yAileP19sxj6OtfbXQo9C57gfApXz4wlEHovjdm1EbthzN5QUG7tlJ
DtLuMt5bru/LWoU1r2eP4tTEZF0fK3XNl8j79zVGHEdimr73ytTy0M/FhCN0
zKb0g4GoXj0LDekR/rU8+BmfD9ZY0q2x7dZs5Ng3NDWjuq4BpVX1KCwuQ/a2
P5H+0ThkjT8BBSMOQMmkw7V2faNF46RejSfNH56OklePQdigHtj6z+MQ/8qd
yPxxPvISotT4kYe0nAJk5hktNSMLKWmZSE7LQJIzXTX1qt4nZeRorcz49asQ
vfhlhI29UmsbRAzuYeAOwT0WrlsE13PIb1PjatLr96KxvAjNlvrP1loBfF61
PkhqqkfbLvqLGdh0cyedW6TXhnzi6uHmfMB5YZ36jQ8v7IB5F3bG/Iu7asyz
8PIe+Pqe8zDvvBDMvqgrRp7UCb27GPMP56EQ/xiH9XKosXazOZ/ZeTm22Wab
bbZZTWI8XP96U7UShz/tAnOuIX/g/AM64OWzOmlO2wI1T3GumkuNnAs6Yc65
IZh7fkddi+e3AT0ROXgfY02RHG0Tg7SYX29lPm0nbFHzY2nYT5D8azHRLk11
OrWOQYLySaOmj0Ko2t7IBerSCuPo+M3tykd4+GRkLJ6CusLMVn4LcyB0HoTy
S5oa6tFYX4fa6mqUuN3IzsrUvm9qchKyMzM0ryKD/rjCKBnZucpnKVeYaQmq
P7rCqCc552Sjpo5q1e+dgKzHD0DskK76vDQvfeiBKFn/FUW8NdfPVZiPNHU+
6abmlzW3vv2WYOAd1jfUNQ7jjFddPyhFx4GSw9ciQ/nr+a/+Q/PdtM/nj+PG
z8cfZsQp1HbVv76HpqrSPeIDWzEOeWo8X95Xnv9ej+EkmjEcXnPqDW/djLSv
Xkfu5HNQ9AQ1hnsZ18eDbdrAImOseR3eHCwj531/1Hx8ARCqsM66mxXOuUW/
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
zzi82MbWHrDNNttss22Pm8I6Oq4z6bSO0xdf3AmfXNxp9rH7hpygPpoe4nCU
Ofzptam5TGI8nTt3xuTJk/VcLv4j5/H87ExklVQjijjgWkfLudQyp4bd0AnR
00chfvt2pNHnT00JOLdz35IXL3N6IP9bcnd8/UxZIyWPiH6q1MDhOixxh3Dc
hKckfHr6EY2WWJPbXazrXjBnIyE6EpETrjQ0jUwfwdA4CkHi5H6olTpAPpwb
ORZeL4kH7PYcGObxpKTpOiW57w40eEIteFDiG3dH1crXNCbgURVaOEh/SV4O
cWSi8hvD1yLnrQHq+Lp6a276yePQPK4pZ6Pq9xnedX+pp+LHP+Z9pq/mT0OO
fUr6mPCN5F6x/wnGZt+gj2zN/6IPyH2ITpZsI3FPfya1pgJfa9HXUtiHuT0x
W5E5/wkUEvtpbTY/dXuY6zOuDwrUfS3/bDSaa1rj/b1pvI4GP1D589QIUzgn
Z97DKH68i+p/h/vRIOiNymXjFFgy8Y3g8N1kfJZFL4T30y8nU/TIflmO8PuP
MfheA735OVuuD4FzxuN6f6VFLjjNeJ7E/CSvUbRP+BtWPq38jcZ+JRhJ+qDo
RbIFg3ckB4j7910Dsurs675o6ljWl7mQ8OIghN1IDrGfMZra2Tc6kPj6vXr7
xroaHUfivp999ln06NGjPYzDVqHaItUOk2nHYfPVbLPNNtts20tmxnUco07u
OHnpZZ1/79Mt5Cj1NsSciFiT5w+Hwa1uE/Mce+yxWL58uSd3QU2m+t+Yl+7Q
dWkifOdQ1uK5vgOi3x+FhLjtms9CLR/Ox8L7aWseb8v/bg/nSP6xrH+K/2H1
J+h/CtYRvVmrRhLX97WPzJouzCOJjkLk+Cta4p3bumPzPxzIXPSsci0a5SD8
HpPk8OwZvBOv/eUE5btlL3wc7id9avHoPHeFI0buh8rfP0BeYZG5zvwXxHKk
UZPr27dQMOEohc96euprtuQ3HWD49M+ciMo/Zlkc2YY2czmsGguylm79bbkH
/vK76L9KzMYX69CIW4UXSd9WMJNV98/f/Ze1fcFQAa+LxHo05olSmGc4Csdb
6sr68tomHAbX8K4ofvF81CWu3e2YYUesoqJca9FlpCYhe8GjcD/RrWU8Z+xB
Ro7VM8eieu0c40v6eHevpjafXeJc0RL028f5XDvTER+6HpETr0f49SFePTL1
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
Gm+Bcn2kll8r/ydR4R/6oFvDEDXyApMr00X7VqGDe6J46x/aY2wKMmdHckD8
+Vm7xl3zMX08zajbvgrF085SOMXELay3M6I7ct8dhOTI9UhISTNzP4z8D2Kf
vPdu0xrVHnykc30OROH4I1Eb/ZOx/52qVWlca8Gswfr21thJsPVsrHV1Avng
wWCd9ursWPfHuER79X782S5z2Tx4Jw/O796FS99rS/2j8YeiYFhHlH3+pHHf
hMtm3sOGrG0oef0KuEbuZ9xzHdPZBwUvX47UjSvNPhK3U8dlvXfCPfS9NsHw
1wSbCGcsMyMdOWXVSPrhQ2zua6w/sLbO5iscSHllsPE7Da11EQJhHf5fdCFF
d5p9g/ef94ffs9aZ5bjEfsH+zOOX+DOxDfsK//7111979AaCzMWpVy1TtWdU
298cP22MY5ttttlmm21/X7NqGHCuHqpapGq1jiAxz4EHHqg1WFesWKF9EK6z
E/vQX6FPwffEQfSVBAPRR7HmQ4tvIznkvrnS/jhsVp3rzPQ0pOXkY9vEaxB2
taFPQL9qk/p/yo+LUFTThJJidyufyJ/xt33zSGQt2VpTdZdN8jCUX1u+4D64
WC9F+7GsC3kQXE8dAecvHyIhPU/HcxLjYjV3LfOjsXA90cPM++hj5ugcgoJH
O6N67Vxz3zuOc6z6DMHqS1tjOtw22BqVvAdSqzYQVzBYDpus4wfjz7MJn2lH
jXEN0VTfObxj1rxJTkXmp0/p2J0Xq/KeH4iiCUeiev1H5kWq9/DZajd+bNbT
OdTM8zkExcO7IGfuvxCfkbcDeTr+89AEV7Df++Mfcr1CuKm+5y74hvdK+k02
dQCyFXaqaUbWygXYfKlD59BpXYKrHEh+8wG9/tBc3zqW6w/r8L6JBjjvA8cX
/h63k3w//i77Lp9f4h9+V7RVJD+H57d+/XoMGzbMU/szyFwcjofbVHtQtS7m
eGnXALXNNttss822/xyTWI/YNaqtUq3S0Y6OgdVHuOCCC7Bo0SLtc3A9levE
xDb0Uejb+tO3pQ8rfDjiIfouvrk+/B59HSv+4D75GX2Yovxc7TulvH6XrlEY
MbCLztnRa8g/zEdeWQ2yMtI9HBweH/23QBrX9KGsdTMl9rBTumttWaNxPar/
mOHJNdd+r9YoCEHmJ+ORoHxjg7uWZXCgfLhrbrUt/eCK5c8qiFNn5ujs3DES
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
ayf8235yH/Ju5shnFvv27cPIkSNRt27dsugb+jtCdTgUQx6o6TFlW39/GIZh
GIZh/l1Y+x3Pavoci1hhuVoZdE+9evUwadIk+Hh7y/4EOVeDETi2mawpkL2e
1TNp4W/5flQPaV76vJLbeXcQJ/zt8PAw4XfHynw48nnjU9IR7b4BfoOeMnpJ
6/6Zr/DrznTQEDB/EK5npOvz5O8UrmmnHgkqppDvw8uZJ5flz35H9uPwwhnY
OfpNbOjzPNZ0qo3VHR/FT53rYP9bNeDdw1Hsr0X6sOTLkk+bPNa2zgn4sCrW
v+QIZ6FXVjTXc6OkX92qAla2q4T1vZ7H9k+74Jcp78N93nj8OusT7J7wDrYP
64w1XerI5Va0qqj73Ur3SJ+8vPTfV71aA8fdvtPnUhajc+61/xpB54me36t5
lPerN4Hy3Uvq72atdeh7kK9dLMZ2bwsN4fvTXHmMKR/QtVV5PU4j8wT1c+Da
uiLc2lXGpj4N4P5ZXxyb/Sl+WzQVPq5f4fDMj7BvdDds6lVfLufapqL8vDwH
4jwuaWqPLR3KI3xoVal1rc+/iuuEffggvF636NdLjwr4tecTWNe1HtZ1qoWN
3ephx8DWOPzFRwj5dROuJ8dJ/QPToaM4Cn1n1c9M6UOq/Y8MF3onMRWJQefh
P+EleHXW4Gt6bnC2i7iXRjVD4oUThQ7RTerVQDVf4vqPir2KqJhYBKz7Bt69
KsNXaB7SPb5v6VrndHsNgTNeR2BQCCZPnCDv4+Lu8yLsjvF346qmx4xfMP2t
sY4rMwzDMAzD/KewlePWXtNzTshvKZPu+fvTz2LU252xoesjOEE9oITG8aZe
AF3sEfJVb+Sm6XULOdlZ8jk2meprQL53Ns1a+f0O0jOvISIoAOenvAqv1yzw
NuJBW1tr2PxeE/gLzZKUniln7VhD/cykbhLrlrGFy4E4tdEZG99tYtTLaIVi
LlJfUB6ZeG9newe5Lep9Rb6srbgOPeu/NrE6DnZ7AAtftINrC309P71WE7vH
98GZLa4IvHgeweGRCKZ6lJBQo9dXqP57qPDtxff19zqJU2sXYMcnHeH2UhWx
D+VkHpaueRyxXGge5xc17P2sPwLP+8jPBpniJGadUNScx7vlQuEZrSXFXsqi
dej4lyZmZK3XKDZlnktbaL/v6NvMjAnFvlFdseR5TdbkyPOnzqWwNa/WxKFp
HyD88E7cyip5pmpOaiJCPbbAffK7+KnDI0JnlpO6dam4To71roSsyTVtxnbI
gvs/IOv9T71hjw1tHcRn7OV1tNyUu+hi5CeSpnKf8g4SLpyWvfhu5Fw3+kLo
MS2lOZXWSU3RdV/kqQNY0bYy9nQQWr87XZukc+xw6duBSE7PQGxMtLjOw6XG
yZ/pJF5TxOcjhN7JydZ7w1NvwQvDnYQ2E/vbrRw2trfD0Gc1PFnJ8q/qG2fj
74b13xWO4TAMwzAM80fB2j+h139Z91Rz1ND1bw6YJfzSExM7ITsuTPiyehyG
ajquyphOeH5tuvJzSaeEBAchQ/jvKUnxOPNlf+wVvt66Ng7SZ1z8jFjfslmI
idfjQMoHN0PrSkxOwfnDe7FlQGs4N9KMGg1zHpkeB1Amfdwm9tjR3h6/CZ8w
ZMADReQv1UDQoCrY9LIjljYW+/Xm0ziy9P9w5aI/QiMidR+eeh3n1wvdbfR/
wWK5QKHDEpJTkRkfhTPfT5S+utwfo65khfi+S5/TsP2TzrgotFEw9VgwYlTm
PmakXUqjQ+6lB1tZtQ5B59PcN6E0feRoG7a+x+/GvKKUK37YPqAVlrygawdV
d+PcxIJ13erh8MLPkRQblf95Pe53R+/9bfwO+Wq8J+tnCraTk54EryXTsP71
x7FYaNhdHcsjbuTDsg9BslVfgoRRD+Ny3wo42cWCn9sJPUM6J7/3gWHNzfmJ
5fUYlNDF+6e8hxC/s4iJvSr7XFNdluozTufkunEMrqUkYd8/P8Di+hpWta2I
TW017O9UEb5LJiEz+zpu5uQgLk6vk6P7QB07M6Q7b926KXTRNaxeNB/d6pVH
9Qp0j1rKqm+ShK0R1lWYYxF/PxiGYRiGYf6IWDTbfktnTfdvqNa4dLrHIl4L
vW+H5s2bYcb06Th58qSc7aLmolDPYKVzKKeH+j/Rq+yvFRGO5Ixr8JgxAIsb
6D6u84sWbOrbBBeOHkBsUorM2aH1GU6u7t8K/9h/40JZ7+/cWNPrNFSNRn6u
WXk9h8kw+bt4n+I7u1624PL7FZE0+hHp25pjOtmTa+JIj0pY3q4qPOdPQtDl
AEREx8gZ9zKWRDGcUuZukY9PNU4wajquJ8XCc1p/uX96jMdB1u8sE/791sH/
gP/powgJC9e1kmk+zb3W9WdkZCI8IkLa/dQ65l5s1AM6PDxCrzcyz++0Oja0
DdJcZKrfhVrP70r/XjiNzX2el73rZDyHdE5TO7i2eRD7Ph+EyxfPI0TowNjY
aOTJXLHS5/ORHsjNvYUb4hrKFR9Lj4+B+4wPsbKlA3z6VcE1q9hO6vgaSBhZ
DRf6OGJrO02P57TUcw/1vETDWjrmX3Pm/ETS3Wu71sWZza4IjYyW2lXpnPzr
WHD58B6s+kdNqZloXUvFdX/8h0nIFockSlw7NPuKjHSO6gVPGpZ6qdG58vLy
wsyZM9GyZUvTfWiR9+Xd92ex+obu+9VaYX2jmf5OsMZhGIZhGObPhi3dQ34O
+Tul1z2GkW9lfp9mc/To0QPz58+XvjTVj1B9NsV0KIeHfDXy4yi+k3n9BoI8
d2JN179JP5H8SJcXNXhvXYnY1AwZH0kS2kjqJUPreC2ZLuvRpV4gnzM/Z80R
azvXxqHpHyBw+3LEnvVEwiUvRJzcB78NC3Bo1iCsf6MenJvY43TvCkgZ+7A+
O3Kc/mw/beKjiBn6II4Pb4EovzPSJ80V+0l+Mvn35G+Sz055efRaktaRz/EN
DUE+t/LtL+9yw2qK8TTRZG4b6Z2lz1N8pwsunj2FYKF3QgytQ72zikPGNPLy
ZM+yvFs3Zb18SlIiQoKuSF2mz+AMsdnzraxxnYz0NISHhiBMnL/Lly7KXhD6
DM/AghmexjbNvafp/OfvtxHPSQ29iJ0D28q8NYpz0Xml3L513Z+B1841CI2K
FusPkN+FdF9pY1ykCaivhuqbHmz0raA4S7hY5+E1S+HZry5Sx1RFsmnWTuqE
GkgcXgWeXR3h3Lw8NvR4Bge+GIIza36Ez56NOPfrNvy2ZSU8vp+CrYNewcp2
D+m6p5keS6TrkWI8bu2r4YjLHETExgmNHIHMa5n5+5YtRJfn4s+x6ClN1iWR
1t3wdiPEXjqHG+J6I32k6pvoWQFdbxcuXMCiRYvQt2/fQr2hyfLn35Ssb2jO
J/VQSxe2TdgbGusbhmEYhmH+tzHrHgX5P12EbdL0+YDkH5GfVKwvVVTOjJOT
E0aNGoWtW7dKv5PiFOTLBVy6hGvCB8wWfvbOTzvLfJ6V7SrLPLYDs0dLvzk8
NBhhIcHISEuV/q3Pii/1nCHjWbqMkTS2w9b3GiN43zp9dqcBaSzaDvmKcmZq
fLzQDgk4vdEFxwY+g6tC16RN1P1c8nczxlZB0OSmSPQ/I7d1J+/ueIrq3av0
jq2aFdVrmWJYpHHMyBp2Ac0j3fx2QxnLkHlQpHee07B3xsfys+HGPlM/Bmvf
Xs41FZomPfIKLm1ehiOzBmPvyNex5Z2G+Pnt57F1QGvsEMfT/evR+G3HWlzy
8y6oBQoOuXetQ8eC4gkpiYg4vBMn5o/HjmGvYePbTlj75pPY0Ps56ff/MqUf
jrl+C//fTuq6giw4ROoe1Xv6tikuk50Yg/2j35TnnXoI0HFY1tCCrR+3x4XT
xxASFiE0VGCh3tvWsSFb54eWoe9Fy9M5iDRqu5T+jIoQr0npCHFfj5BPayF9
QnXZf1r2pZj0KMI+fgDHhrdC1G+ecp25ubflOlUfQNkLkPLSIiIR4OsNj/mT
sOb1OkZ+ooPUO86NLbL/xDG3+UhMv5avQynnLOqyP3aP6yn1LcWulonXPZPf
RZa4VG5kZ8njRPvp7u6OqVOnyvunqPusFPlpSt/QfbxDWB9hD5ruddY3DMMw
DMP8VbAV7yG/iPwj8pOU7snTSqF7lE9mfr9SpUro3r07vvvuO3h6eiI9JRk3
hf978MtPZFzHlWpumlnwU4fqcGv3EFzbPoi1Perj3IbFOL9pEdZ3rYNljSz5
fZ6XCZ1z/NtxyL2epWsJoS0ozyk1NUXqEPJzo6OjEC391HDERkeAFEzK6a24
OuVppI6pos/TmVgbSYMsSPZwRmRKFkKDg2Qsp6h6etJrqiaJfGib+Wvptuvn
lR6L9z0h9M4Lut6hPDwjB8pzwXRExSfJnLn8Oo3f9V7MWQmx8F01F+uFxqBZ
mXrenmmuTHM1c0afb+os52lWxe6Jb+PcrztkXCPoSlChmEtxWof885gz7tg7
4nU95tJYM23PwbQ91Y/bIntrr+/9PI6tmIsAPx+ps8JCw2Rc5rpxnmg7Xoun
YdGzeu4inculL2jYJjTURe/TsteDjBOZehzQK8XWitI51JebNAKdc/pOZv2p
4nEFdUN3kCNkV8KOL5E6WBPnv5aM8aWNKI/YOR0Q4nsKqRnUHyOnIOdOHP+0
1FS5fuoNcIX6M4h1R8bGITLQH55T3xfn0k6eR5mXJr7Pxnca4dKeNTi7dBo2
inNGWp5iPqteekjWANFM2hXiPfcFM+ATEAQ31xV46623ULlyZduxm5K1jcpP
K07fWDTWNwzDMAzD/LWx5Q9V1PR4z4/CgjR93kaJukczaR9rX+2Jx2rjnX79
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
Jp/aHBP6j2mhv5DZ0jIUi/PT9J7OPxjnpbuwF4VVsn0aJaxpGIZhGIZhmL8q
tnzhkvzhBzXdxyZfm3zu7zVdC3kLu6IVzEhV8SHrGNFfTRup73zHZKpmRuWY
hWm6ltwhbKGw8cJ6C2uq6TNoi6Ms55BhGIZhGIZh/uqU1Y8up+k1IRQf6iCs
p7BPhX2m6XGJDcL2aLo+Ij+f/H3l/5u1kbX9XkorixYpyYraJ/N+K93ibXw/
+p6kBacKGyGsl7BOmq4VawqrUIpjyVqGYRiGYRiGYf47FOWL36s/Xl7T/f9G
wjoKe1vYh5o+W5WMZlZOEPaFsM8Nm6npcZBVwlYa5ipsp7AjwjyEHbJhHsb/
7zSWV59dZaxvpmkbtL3Jwj4W1t/Ylw+N/eto7G9NY//vhft13BiGYRiGYRiG
+WNQnI//Z/Xz/xe/E8MwDMMwDMMw/11K0hllMYZhGIZhGIZhGIZhGIZhGIZh
GIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZh
GIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZh
GIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIb5Q/L/
8lokyw==
    "], {{0, 596.16}, {595.44, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{100, 100}],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, 
    MetaInformation -> <|
     "Exif" -> <|
       "ImageWidth" -> 827, "ImageLength" -> 828, "XResolution" -> 100, 
        "YResolution" -> 100, "ResolutionUnit" -> "Inch", "Software" -> 
        "Created with the Wolfram Language : www.wolfram.com", "DateTime" -> 
        DateObject[{2023, 11, 1, 17, 3, 40.}, "Instant", "Gregorian", 2.], 
        "TimeZoneOffset" -> 2|>, 
      "Comments" -> {
       "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
        "Creation Time" -> 
        DateObject[{2023, 11, 1, 17, 3, 40.}, "Instant", "Gregorian", 
          None]}|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{236.19000000000005`, Automatic},
  ImageSizeRaw->{595.44, 596.16},
  PlotRange->{{0, 595.44}, {0, 596.16}}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{3.910262866988683*^9},
 CellTags->"DefaultContent",
 CellID->445097320,ExpressionUUID->"695c31c1-c87b-440f-9f95-153bd6fa819f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Description",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LongDescription", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a short paragraph explaining your paclet. This is the first \
text that users will see when visiting the main landing page of your paclet.",
          "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLongDescription"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "68b408e7-b859-4144-9846-e8d2e289ce57"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LongDescription"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Basic Description", "LongDescription", "TemplateCellGroup"},
 CellID->433339604,ExpressionUUID->"83e0066e-4751-4788-b442-b480a5e7601e"],

Cell[TextData[{
 "The HyperBloch paclet provides a Mathematica interface to the output \
generated by the GAP package HyperCells (",
 ButtonBox["https://github.com/HyperCells/HyperCells",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/HyperCells/HyperCells"], None},
  ButtonNote->"https://github.com/HyperCells/HyperCells"],
 ") which constructs cell, model, and supercell graphs of hyperbolic lattices \
based on triangle groups. The functionality includes graphical visualization \
of the different pieces of information stored in that output and the \
construction of (Abelian) Bloch Hamiltonians in particular for the \
application of the supercell method."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.9054149090114555`*^9, 3.9054151109793177`*^9}, 
   3.9054151578216343`*^9, 3.9054156150366917`*^9},
 CellTags->"DefaultContent",
 CellID->441612482,ExpressionUUID->"ea942ce8-7cf1-4712-9dc8-535b5b165832"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Details", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Details may include a long description of the resource's contents, \
history, methodology or other relevant information. Give references here if \
they are directly relevant to the resource. The details will appear above the \
examples on the webpage for the resource.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetails"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e188fc36-3444-43f4-81c9-b49a5607ef5a"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Details"},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details", "TemplateCellGroup"},
 CellID->484110581,ExpressionUUID->"974c252a-3018-47b7-bcc4-e17260c8753a"],

Cell["Additional information about the paclet.", "Notes",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->889292814,ExpressionUUID->"9cba951e-0f5c-401e-bef6-1871e98e12ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Primary Context",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"PrimaryContext", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Specify the primary context of your paclet that users should load \
with ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "Needs", "SymbolsRefLink", ShowStringCharacters -> True, 
                 FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/Needs", 
                ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " or ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "Get", "SymbolsRefLink", ShowStringCharacters -> True, 
                 FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/Get", ContentPadding -> 
                False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to access the paclet's functionality. If your paclet is \
not meant to be loaded via a context, this section can be left blank. If \
specified, the primary context will also be displayed on the main web page \
for your paclet."}], "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoPrimaryContext"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "81790372-7299-4296-ab4c-51c6a1d3d84f"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PrimaryContext"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Primary Context", "PrimaryContext", "TemplateCellGroup"},
 CellID->945361513,ExpressionUUID->"bc83142b-44cf-4ff3-a1f5-437a6bb50099"],

Cell["MyPublisherID`MyPaclet`", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->310388821,ExpressionUUID->"525f9f74-8132-49bf-a2f5-15af456d6996"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Main Guide Page",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"MainGuidePage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose one of your documentation guide pages to feature as part of \
the main landing page for your paclet. This guide page should correspond to a \
general overview of your paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoMainGuidePage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f50f4fb4-984f-497f-84f3-8a72830699a0"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "MainGuidePage"},
 CellTags->{"Main Guide Page", "MainGuidePage", "TemplateCellGroup"},
 CellID->587602718,ExpressionUUID->"8fd9493a-4441-4df0-b8b0-7b9a9a439eb8"],

Cell[BoxData[
 TemplateBox[{},
  "MainGuideChooserTemplate"]], "MainGuideChooser",
 TaggingRules->{
  "Refreshing" -> False, "Relative" -> True, "MainGuidePageString" -> 
   "Documentation/English/Guides/HyperBlochPackage.nb"},
 CellTags->"MainGuidePagePanel",
 CellID->614786987,ExpressionUUID->"dddbe359-4bfa-43fa-86bc-c4012f9e6603"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleNotebook", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide examples showing how to install, configure, and load your \
Paclet along with some basic usage. This section will be displayed on the \
main landing page for your Paclet when deployed to the cloud or published in \
the Wolfram Language Paclet Repository.\n\nThe usage examples should provide \
a succinct overview of what types of features users can expect from your \
paclet. Detailed examples should be reserved for the corresponding function, \
guide, or tutorial pages.\n\nThe default content appearing here shows the \
recommended structure for this section, but any of it can be removed or \
changed as desired. Use additional cells and cell styles as needed.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleNotebook"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "6988a989-3ec1-490e-bf5b-ac0cc8901138"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExampleNotebook"},
 CellTags->{"ExampleNotebook", "Examples", "TemplateCellGroup"},
 CellID->365974185,ExpressionUUID->"92669131-54ee-4baf-893d-d0394c8d44a7"],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization for Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleInitialization", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Put any initialization code that's needed for evaluating examples \
here.\n\nCells marked as excluded will not appear anywhere in the published \
paclet except for the definition notebook.\n\nCells can be toggled as \
excluded using ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{"Tools", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], "Cells", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], 
                RowBox[{
                  RowBox[{"Mark", "/", "unmark"}], " ", "selected", " ", 
                  "cells", " ", "as", " ", "excluded"}]}], StripOnInput -> 
              False, ShowStringCharacters -> False, FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> "SemiBold", 
              FontColor -> GrayLevel[0.28627]]]], 
           " from the toolbar above."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleInitialization"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e74020e6-8200-479a-98f6-49db83949c7e"]
}], "Subsection", "Excluded",
 Editable->False,
 Deletable->True,
 TaggingRules->{"TemplateGroupName" -> "ExampleInitialization"},
 CellTags->{
  "ExampleInitialization", "Initialization for Examples", "TemplateCellGroup"},
 CellID->468286435,ExpressionUUID->"89432c8e-6547-4ad3-b4d4-2928a540bf26"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[1]:=",
 CellID->996717066,ExpressionUUID->"8a00cf15-6eb9-4941-89b0-653a1a7850e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<PatrickMLenggenhager`HyperBloch`\>\"", "]"}], 
  ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[2]:=",
 CellID->242816418,ExpressionUUID->"97e5bd6e-8886-4ab4-aeac-d3125326478c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Installation", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.905416202143489*^9, 3.905416203174591*^9}},
 CellID->120556191,ExpressionUUID->"70c5c3fe-6d7e-4c28-bcd0-c1c587925d3e"],

Cell[CellGroupData[{

Cell["Dependencies", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.905416623962792*^9, 3.905416625430732*^9}},
 CellID->241643693,ExpressionUUID->"ef9a0a02-af9b-492a-9ba6-b528fd0d7ff5"],

Cell[TextData[{
 "Install the NCAlgebra paclet as described here: ",
 ButtonBox["https://github.com/NCAlgebra/NC#installing-ncalgebra",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/NCAlgebra/NC#installing-ncalgebra"], None},
  ButtonNote->"https://github.com/NCAlgebra/NC#installing-ncalgebra"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.905416633582834*^9, 3.905416644573815*^9}, {
  3.9054166815341263`*^9, 3.90541669715058*^9}},
 CellID->136723199,ExpressionUUID->"85c33650-af10-4456-8f17-1ed8ae8ab289"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Paclet", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.90541662736741*^9, 3.905416627912326*^9}},
 CellID->76765568,ExpressionUUID->"eb4957cb-4387-4931-af07-2e9be6830f0c"],

Cell[TextData[{
 "Download the latest release from ",
 ButtonBox["https://github.com/HyperCells/HyperBloch/releases",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/HyperCells/HyperBloch/releases"], None},
  ButtonNote->"https://github.com/HyperCells/HyperBloch/releases"],
 " and then install the paclet using:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.905416491644326*^9, 3.9054165040638533`*^9}, {
   3.905416557497587*^9, 3.905416563771185*^9}, 3.905417761661549*^9, {
   3.940560510317367*^9, 3.940560510318246*^9}, {3.940560552182518*^9, 
   3.940560563615122*^9}},
 CellID->393275500,ExpressionUUID->"76eee756-92dc-4c35-ab0d-4dbe5d96b0ba"],

Cell[BoxData[
 RowBox[{"PacletInstall", "[", "\"\<~/Downloads/HyperBloch-x.x.x.paclet\>\"", 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.905416564388837*^9, 3.9054165910408964`*^9}},
 CellID->313715408,ExpressionUUID->"7db4933c-2d41-44f1-b180-450e6357bc4c"],

Cell["Finally load the package using:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.905416708820588*^9, 3.905416712921465*^9}, 
   3.905417764716488*^9},
 CellID->163821601,ExpressionUUID->"272f5a7b-8ec4-4621-9307-696b52c4c963"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<PatrickMLenggenhager`HyperBloch`\>\"", "]"}], 
  ";"}]], "Input",
 TaggingRules->{},
 CellLabel->"In[3]:=",
 CellID->582934189,ExpressionUUID->"26bba059-db52-4c04-aa57-c0c1ba7b8179"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 TaggingRules->{},
 CellID->462042388,ExpressionUUID->"24249031-d52e-4d30-87dc-e67af0f30de0"],

Cell["\<\
The HyperBloch paclet relies on data generated by the HyperCells GAP package, \
such as for example the cell graph of the smallest unit cell of the \
hyperbolic {8,8} lattice and the model graph of an elementary \
nearest-neighbor hopping model defined on a single primitive cell of the \
hyperbolic {8,8} lattice. We first import this data from the corresponding \
files:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.9054168790715094`*^9, 3.9054169029093885`*^9}, {
  3.905416967356919*^9, 3.905417038800004*^9}, {3.905417095193486*^9, 
  3.905417115229846*^9}, {3.905417154822427*^9, 3.905417157264367*^9}, {
  3.9054180086326246`*^9, 3.905418030856866*^9}, {3.9066282617409215`*^9, 
  3.90662830302035*^9}},
 CellTags->"DefaultContent",
 CellID->319073343,ExpressionUUID->"8ce29116-c977-47ea-a518-07e06274c01d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cellgraphString", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<PatrickMLenggenhager/HyperBloch/ExampleData/(2,8,8)_T2.6_3.hcc\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modelgraphString", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<PatrickMLenggenhager/HyperBloch/ExampleData/{8,8}-tess_T2.6_3.hcm\>\"\
", "]"}]}], ";"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.906628305407981*^9, 3.906628372549469*^9}},
 CellLabel->"In[4]:=",
 CellID->464690901,ExpressionUUID->"11f507d7-cf8e-458d-8541-89927a54ea05"],

Cell["Next, we construct the cell and model graphs:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.9054173152878227`*^9, 3.9054173314609003`*^9}, {
   3.90541736536385*^9, 3.905417388581557*^9}, 3.905417812027415*^9, 
   3.905668408192871*^9, {3.906628392596126*^9, 3.906628420794755*^9}},
 CellID->51150794,ExpressionUUID->"c1ca457a-81bf-40c8-86a9-c680ff81c174"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cellgraph", "=", 
   RowBox[{"ImportCellGraphString", "[", "cellgraphString", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modelgraph", "=", 
   RowBox[{"ImportModelGraphString", "[", "modelgraphString", "]"}]}], 
  ";"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.9054173337149367`*^9, 3.905417345810728*^9}, {
  3.905417390943224*^9, 3.9054173927149506`*^9}, {3.905417425043855*^9, 
  3.9054174417088194`*^9}, {3.9056557062724314`*^9, 3.905655709098342*^9}},
 CellLabel->"In[6]:=",
 CellID->185333617,ExpressionUUID->"5f784bb0-0ed1-4bf0-8063-2095d703667e"],

Cell["\<\
To visualize the corresponding graphs, we simply need to specify which \
elements to show:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.905417461355053*^9, 3.905417493570995*^9}, 
   3.9054178148203835`*^9},
 CellID->310253097,ExpressionUUID->"8c7a66f0-c6f9-45fc-96d5-b4573f1ee4b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VisualizeCellGraph", "[", 
  RowBox[{"cellgraph", ",", " ", 
   RowBox[{"Elements", "->", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ShowCellBoundary", "->", 
       RowBox[{"{", 
        RowBox[{"ShowEdgeIdentification", "->", "True"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ShowCellGraph", "->", " ", 
       RowBox[{"{", "}"}]}]}], "\[IndentingNewLine]", "|>"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "->", "300"}], ",", 
   RowBox[{"RasterSize", "->", "300"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.9054174477731047`*^9, 3.9054174519585505`*^9}, {
  3.905417496548165*^9, 3.905417518303195*^9}, {3.905417874091674*^9, 
  3.9054179445148277`*^9}, {3.905668310718388*^9, 3.905668313884898*^9}, {
  3.9056683746040163`*^9, 3.905668375230406*^9}, {3.90566847047383*^9, 
  3.905668473956182*^9}},
 CellLabel->"In[8]:=",
 CellID->120797051,ExpressionUUID->"4166d689-3d4d-47e5-af06-98c92e5bf93f"],

Cell[BoxData[
 GraphicsBox[{{InsetBox[
     FormBox[
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
FAqFQqFQKE4W/wrwgQtD
         "], {{0, 300.}, {300., 0}}, {0, 255},
         ColorFunction->RGBColor,
         ImageResolution->72.],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->300,
       ImageSizeRaw->{300., 300.},
       PlotRange->{{0, 300.}, {0, 300.}}],
      TraditionalForm], Scaled[{0.5, 0.5}], Scaled[{0.5, 0.5}], Scaled[1]], 
    CircleBox[{0, 0}]}, {
    {RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0, 0], AbsoluteThickness[2], 
     {RGBColor[0.368417, 0.506779, 0.709798], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAr9NamZ/o6j8AAAAAAAAAAJjtMh1G
peo/gDysYMisbD/QzEYUgGLqP4CD9wxVVX0/F6elFVQg6j8g6s3aq32GP/bP
KqnI3uk/4NxzZnCjjj+muNhG5J3pP9B63CeVjZM/X4A1Vq1d6T+APRnTAfKX
PyUlqS0qHuk/IG/uO49+nD8VZd0RYd/oPyjRwDllmaA//l8fNVih6D9oyztQ
HgejP9wIw7YVZOg/2H5XhTWIpT+8doiinyfoP9iCrpNrHKg/PiQD8Pvr5z/I
PsVSf8OqP8QsA4Iwsec/ACl4vS19rT9LlgAmQ3fnP/SHTPyYJLA/eraIkzk+
5z/oY92sopOxP2rBrWsZBuc/AEgVt48Lsz9+kHg46M7mP/w/CwE7jLQ/Kq9c
bKuY5j88JPCTfhW2P6a7rmFoY+Y/vMbNnzOntz/9KB1aJC/mPzyPW38yQbk/
7W8rfuT75T98JOi7UuO6P5y7r9ytyeU/pMBXEWuNvD8VH1NqhZjlP0DLNnJR
P74/FGAUAXBo5T+kUuAL2/i/P5JjzV9yOeU/jP1bJe7cwD8USLspkQvlP9J8
O28UwcE/pDkJ5tDe5D+01kXfyajCPwILXv81s+Q/mrRFl/eTwz9Cn2zDxIjk
P5r+WmGGgsQ/Ai+HYoFf5D8WR0WyXnTFP8tzNe9vN+Q/n6O2q2hpxj8nxM1d
lBDkP/u3rh6MYcc/jioRhPLq4z87uN2NsFzIPwCByhiOxuM/JCUPML1ayT/q
mnCzaqPjP0AGnPKYW8o/iIbLy4uB4z9+Y+R7Kl/LP7zunLn0YOM/AsDPLVhl
zD8bpku0qEHjP+ZWVCgIbs0/UGOS0qoj4z8F2gRMIHnOPxO3MQr+BuM/YHKk
PIaGzz8ZVEDX
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(1\\\
\\\\\\)], \\\\\\\\(\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", StringForm[\\\"\\\\!\\\\(\
\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\), \\\\(`1`\\\\)], \
\\\\(`2`\\\\)]\\\\)\\\", \\\"1\\\", \\\"\\\"], Rule[Editable, \
False]]\\)\"\>", {0.840896415254426, 0.3483106997487611}], {}}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], LineBox[CompressedData["
1:eJwtUn0s1HEcPpeXo06b5LUarfIyDVediBkzMSMMRXnpMLdmk6XdlaZldfI2
NdP0hzsqhrtqqETaw+hFU07n9XDu9z3szMtKlCxK3/rjs2efffZ5e57HUZAV
nc5msVguW/EXFy18zDaNdbgkO07xS+Jj99p5gg5xdqd1N4GF1fTqgwGCErfS
c/I8AodPvxZ/vtxCfagM3gS1UsMCRQ1BZdKP2LMrDILr27iviwkslz7E33rC
YHktUnFYRMCv5JUFCRnUjflfYKUR8KYOzcgcGVgXcdy8oglElbkxUrUWF7PM
WlQBBElv3aeCy7Vob4+tGuERuBZ1lFWHaZFenJ8edJBA558qbt6mxdrdYoG9
LYG1fDXNRDSFO3zFu0RzglaN+BV/VoPC4MBHO4wIMof2+RvEahDj1qJz3mDg
/LAh6HL3JCyfxYS3fGeQV53mUuM5iaTk+JuKrwwy8tqiymUTWA7tNNm9xMCj
rscpgTuB/TUhvMV5Bjmmc7aGueOweir0ObaVG0pS78v0ary5+q+uMtDYnIhT
w3cDtH9IwN4+0z2G0wtn6PxxCZeRe47hvd3//ckCU6lsFMrMZnqfedzepV7u
KEhKAL1fYl//ze/aCCZc5fQ/ESdCxJkfRlRKEf1/2GPgo1fCMOaO3KD8ZJxi
Bap7h1DiF0P5kyrCd216D+F5H4fym38gI6epcRBrXcaUf4es/kL2nkFELvhR
fYz6xcLfpSrcm42g+k2HnLd8wVLBJruV6ltV4HH9aM5naALZVP+KshHJbf0A
1sPXqT/s0ngrSBxAXzZD/SPskl/Rq5RQVjRSf/VwdU07w5TgO3lR38WfbPCV
SPrxB3WVc+I=
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(1\\\
\\\\\\)], \\\\\\\\(-1\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \
StringForm[\\\"\\\\!\\\\(\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\\
), \\\\(`1`\\\\)], \\\\(`2`\\\\)]\\\\)\\\", \\\"1\\\", \\\"-1\\\"], \
Rule[Editable, False]]\\)\"\>", {-0.8408964152636819, -0.34831069975480705}], \
{}}}, 
     {RGBColor[0.880722, 0.611041, 0.142051], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQHbXNkOsf22P7GCi9dFHWAfHDj+xbnZbqL339yD42
uy1mdd0j+2OWd74uuvjIfo2t8/z9lo/sH+l9fftzxyP7+Wc+hEZ/eWgfafW3
bc3CR/bOZUciW9c9tD9Us4l3b/cjew0bnX6XjIf2TCxea3TLH9nnLFB4Ol/x
oT2XpGUWQwqQX1EaMu/WA/uO34w65kFA/jHN+26TH9jPF2DZfNnxkf3s1dv6
F3g/sPfq9J973eiR/dvm2IpNzA/sv7TUpLqoPrKfU/Uqhb38vr38ltYkaclH
9se/5+42e3bP/k7dsuOxfI/sv1qK2DOG3rNv3WSzhIcVqD9kvkvp4bv2TTvX
Ptb4+9BefGGU5kLDu/Zf4v19N397aO98fn3g5Pl37DPUQ1rWfHxoP8Vjt3oU
7x37Odq72UXfPbQv/XdfkqX6tv29mc5Gb18/tJ9wLmrm/Be37EP3JFuZAvmr
512VsA67Zf8FKt8f8ovr6eGb9keh+h+cZX242vCm/XKo+fx/ojjnzb9h75EA
sd/WQ+zdSd4b9m+g7rNKXvjZtua6PdNmiPtzl7qXc7y+Zl9QD/HfPKXTZ82j
rtkfg/o/Y+ovx1snr9pvbIWEj4ibh/A/y6v20l2Q8KsWSCrZuOqKfYsgJHyb
15zqZJIB8v9Awr83piTjf+9lewkpSPwoqcaKbGO4bK/CCom/Hxt06k1KLtn/
qIXErxfLlbaOFxftl1hD4t9eSf/L/tiL9k4GkPTx5tiKyheXL9hbWUPST2bE
g4383hfseVwg6UsuaYlNW9t5+2/bIekPAFA2SuQ=
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(2\\\
\\\\\\)], \\\\\\\\(\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", StringForm[\\\"\\\\!\\\\(\
\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\), \\\\(`1`\\\\)], \
\\\\(`2`\\\\)]\\\\)\\\", \\\"2\\\", \\\"\\\"], Rule[Editable, \
False]]\\)\"\>", {0.34831069974997103, 0.8408964152537602}], {}}}, 
     {RGBColor[0.880722, 0.611041, 0.142051], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAAAAAADDekL063F2Zn+jqv4BPLGHI
rGy/VuY1HUal6r/AjzQNVVV9v+G1SRSAYuq/ICrr2qt9hr+kgKgVVCDqvwAP
kGZwo46/MJotqcje6b+wKOonlY2Tv8Nz20bknem/kJsm0wHyl7+dLDhWrV3p
v1CY+zuPfpy/yMKrLSoe6b+oWMc5ZZmgv2v03xFh3+i/8FJCUB4Ho79Z4SE1
WKHov2ATXoU1iKW/l3zFthVk6L8AMbWTaxyovzjdiqKfJ+i/EBPMUn/Dqr/g
fQXw++vnv5Avf70tfa2/+3kFgjCx579oKlD8mCSwv4zXAiZDd+e/XCvhrKKT
sb897IqTOT7nvxg6GbePC7O/MuyvaxkG579cYg8BO4y0v9Cwejjozua/OHz0
k34Vtr+TxV5sq5jmv6RZ0p8zp7e/uMiwYWhj5r8kYmB/MkG5v1AtH1okL+a/
WDztu1Ljur8cbC1+5PvlvywiXRFrjby/TLCx3K3J5b8MezxyUT++v+sMVWqF
mOW/HFXmC9v4v7++RxYBcGjlv0AqXyXu3MC/wEXPX3I55b/+1j5vFMHBv30l
vSmRC+W/QmBJ38mowr8CEwvm0N7kv2RvSZf3k8O/E+Ff/zWz5L9S7F5hhoLE
v8pybsPEiOS/ZGlJsl50xb/IAIligV/kvwD8uqtoaca/mUQ372835L/gR7Me
jGHHv8uUz12UEOS/8IDijbBcyL/Z+xKE8urjv+InFDC9Wsm/yFPMGI7G478d
RKHymFvKvwdwcrNqo+O/dt3peypfy7/SXs3Li4Hjv/N21S1YZcy/FMueufRg
47+SS1ooCG7Nv16HTbSoQeO/Fg0LTCB5zr9iSpTSqiPjv1vkqjyGhs+/16Qz
Cv4G47806Gdu
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(2\\\
\\\\\\)], \\\\\\\\(-1\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \
StringForm[\\\"\\\\!\\\\(\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\\
), \\\\(`1`\\\\)], \\\\(`2`\\\\)]\\\\)\\\", \\\"2\\\", \\\"-1\\\"], \
Rule[Editable, False]]\\)\"\>", {-0.34831069975223156, -0.840896415266262}], \
{}}}, 
     {RGBColor[0.560181, 0.691569, 0.194885], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAAAAAAACMOb0q2VqZn+jqP4DPr2DI
rGy/vvIyHUal6j+AgfkMVVV9v6XRRhSAYuo/gAXP2qt9hr+hq6UVVCDqP4AW
dWZwo46/OtQqqcje6T+wJ90nlY2Tv6m82Ebknek/UPsZ0wHyl78nhDVWrV3p
P7A+7zuPfpy/uCipLSoe6T9QQsE5ZZmgv3po3RFh3+g/UEY8UB4Ho786Yx81
WKHoP/gDWIU1iKW/+AvDthVk6D+AEq+Taxyov795iKKfJ+g/aNnFUn/Dqr8t
JwPw++vnP/DOeL0tfa2/qC8DgjCx5z/E4Ez8mCSwvy2ZACZDd+c/uMLdrKKT
sb9guYiTOT7nP/isFbePC7O/XsStaxkG5z9MqwsBO4y0v4aTeDjozuY/AJbw
k34Vtr9Sslxsq5jmPxw/zp8zp7e/9L6uYWhj5j9YDlx/MkG5v3wsHVokL+Y/
dKrou1Ljur+kcyt+5PvlP4xNWBFrjby/lr+v3K3J5T88XzdyUT++v1ojU2qF
mOU/yO3gC9v4v7+wZBQBcGjlP8BOXCXu3MC/jGjNX3I55T+w0TtvFMHBv3ZN
uymRC+U/Qi9G38mowr96Pwnm0N7kP+IQRpf3k8O/VhFe/zWz5D+eXlthhoLE
vx2mbMPEiOQ/4KpFsl50xb9wNodigV/kPy4Lt6toaca/1Xs172835D9TI68e
jGHHv9jMzV2UEOQ/WyfejbBcyL/wMxGE8urjPxCYDzC9Wsm/IIvKGI7G4z/1
fJzymFvKv9KlcLNqo+M/+d3keypfy79AksvLi4HjPz4+0C1YZcy/UvucufRg
4z/Y2FQoCG7Nv5izS7SoQeM/rF8FTCB5zr/AcZLSqiPjP7T7pDyGhs+/gsYx
Cv4G4z/R9Vi+
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(3\\\
\\\\\\)], \\\\\\\\(\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", StringForm[\\\"\\\\!\\\\(\
\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\), \\\\(`1`\\\\)], \
\\\\(`2`\\\\)]\\\\)\\\", \\\"3\\\", \\\"\\\"], Rule[Editable, \
False]]\\)\"\>", {-0.34831069974881834, 0.8408964152537055}], {}}}, 
     {RGBColor[0.560181, 0.691569, 0.194885], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQvee4Idc/tsf2k+6B6f0xm7MOiB9+ZM+StVR/6etH
+xOq22JW1z2yn5dw5+uii4/2f/Fxnr/f8pG9cujXtz93PNqvcvtDaPSXh/Yi
CX/b1ix8tP9f85HI1nUP7dkXbeLd2/1ov7CnTr9LxkP7xxpea3TLH+1vWqPw
dL7iQ/tZtpZZDCmP9i9vLg2Zd+uB/Q15Jh3zoEf7T1zQvO82+YH9fhOWzZcd
H+0X3bqtf4H3A3u/tf5zrxs92t/YE1uxifmB/bsVNakuqo/2f+t8lcJeft9e
7kZrkrTko/1+rHm7zZ7ds/+2aNnxWL5H+5e5itgzht6zP33NZgkP66P9x+Lm
u5QevmvPdm/tY42/D/dLrYzSXGh41/5Ei7/v5m8P9xdcXR84ef4d+wU+IS1r
Pj7c/9Znt3oU7x17j8Dd7KLvHu7/z/BAkqX6tr3IAWejt68f7g84HzVz/otb
9mqPk61MgfyVc69KWIfdsi84CJE/H/iL6+nhm/YMIRD9+SdZH642vGm/OQBi
/tevUZzz5t+wt+iC2N/qIPbuJO8N+wtPIO77FLnws23Ndft39yDuXzTLvZzj
9TX74jUQ/8WLnT5rHnXN/ssjiP+Ptf9yvHXyqr30Vkj4KJh7CP+zvGp/YRck
/DwZkko2rrpiP80ZEr5qs091MslcsWc2gIS/lFdJxv/ey/Zi/pD4WS8YK7KN
4bL9BmtI/M2Zo1NvUnLJXmkbJH6V3l9u63hx0b6qFBL/CTz6X/bHXrS/kg1J
HwUbVlS+uHzBfloFJP3kOz7YyO99wd6pGZK+MoyX2LS1nbcX/glJfwDmWmIu

       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(3\\\
\\\\\\)], \\\\\\\\(-1\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \
StringForm[\\\"\\\\!\\\\(\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\\
), \\\\(`1`\\\\)], \\\\(`2`\\\\)]\\\\)\\\", \\\"3\\\", \\\"-1\\\"], \
Rule[Editable, False]]\\)\"\>", {0.348310699748923, -0.8408964152537368}], \
{}}}, 
     {RGBColor[0.922526, 0.385626, 0.209179], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQve64Idc/tsf7mfeDafubwUv1l75+tH/fqqwD4ocf
2Wt53/m66OKj/Y+K2mJW1z2yT3H4+vbnjkf7Z7o4z99v+ciezedv25qFj/Z/
uvQhNPrLQ/sVfZt493Y/2v+j+khk67qH9vpiXmt0yx/tt3PU6XfJeGjfo22Z
xZACNG+JwtP5ig/tC/iYdMyDHu13qCkNmXfrgf0PZZbNlx0f7Z97UvO+2+QH
9ipz/edeN3q0X2vdtv4F3g/s42bWpLqoPtp/szW2YhPzA3vVk61J0pKP9hvX
vkphL79v3z9l2fFYvkf75X7m7jZ7ds/+0wmbJTysj/YLWonYM4bes99xYe1j
jb8P918Knu9SeviuPVOFv+/mbw/3n5kXpbnQ8K59jENIy5qPD/efO70+cPL8
O/bNrrvZRd893P/Hebd6FO8d+1NbnI3evn64/+iP+5Is1bftA28kW5kC+ZeO
R82c/+KWPd92iPyLaVclrMNu2fN4QfRf8f7F9fTwTXsNd4j51kdYH642vGkv
1Aixv/djFOe8+Tfsee5A3PfWRuzdSd4b9u3XIO7XCV/42bbmun3KEoj/Ns1w
L+d4fc3e4jbE/x6ip8+aR12zX7cWEj6d7b8cb528ar9uMyT8Dph7CP+zvGq/
ywYSvicYk0o2rrpin6EJCf+2uac6mWSu2O/0gMRPtG9Jxv/ey/Y9ppD4uyIa
K7KN4bK90QZI/C5bqFNvUnLJflc+JP75vl5u63hx0d4uDZI+DIX1v+yPvWiv
UQxJPxo7VlS+uHzB/mstJH3xeD3YyO99wf7JZ0j6y3BbYtPWdt4eABMiYhU=

       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(4\\\
\\\\\\)], \\\\\\\\(\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", StringForm[\\\"\\\\!\\\\(\
\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\), \\\\(`1`\\\\)], \
\\\\(`2`\\\\)]\\\\)\\\", \\\"4\\\", \\\"\\\"], Rule[Editable, \
False]]\\)\"\>", {-0.8408964152563142, 0.3483106997496378}], {}}}, 
     {RGBColor[0.922526, 0.385626, 0.209179], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAQtNamZ/o6j8AAAAAAKALvRjtMh1G
peo/gLasYMisbL8+zEYUgGLqP8DG9wxVVX2/dKalFVQg6j/gDs7aq32Gv0LP
KqnI3uk/IAV0ZnCjjr/it9hG5J3pP9CQ3CeVjZO/in81Vq1d6T9QVRnTAfKX
v0AkqS0qHuk/8IjuO49+nL8hZN0RYd/oPxjfwDllmaC//F4fNVih6D9o2jtQ
Hgejv8wHw7YVZOg/+I5XhTWIpb+gdYiinyfoPyCUrpNrHKi/FCMD8Pvr5z9I
UcVSf8Oqv44rA4Iwsec/uDx4vS19rb8KlQAmQ3fnP3iSTPyYJLC/LrWIkzk+
5z8Yb92sopOxvxXArWsZBuc/2FMVt48Ls78gj3g46M7mP4hMCwE7jLS/xK1c
bKuY5j98MfCTfhW2vzi6rmFoY+Y/uNTNnzOnt7+JJx1aJC/mP/idW38yQbm/
cm4rfuT75T8ENOi7UuO6vx26r9ytyeU/6NBXEWuNvL+SHVNqhZjlP0zcNnJR
P76/jl4UAXBo5T98ZOAL2/i/vwlizV9yOeU/4gZcJe7cwL+IRrspkQvlP5KG
O28UwcG/GDgJ5tDe5D/e4EXfyajCv3YJXv81s+Q/ML9Fl/eTw7+4nWzDxIjk
P5oJW2GGgsS/ei2HYoFf5D+EUkWyXnTFv0ZyNe9vN+Q/e6+2q2hpxr+mws1d
lBDkP0fErh6MYce/EikRhPLq4z/1xN2NsFzIv4p/yhiOxuM/TjIPML1ayb98
mXCzaqPjP9sTnPKYW8q/IIXLy4uB4z+MceR7Kl/Lv17tnLn0YOM/gc7PLVhl
zL/GpEu0qEHjP9VlVCgIbs2/BmKS0qoj4z9l6QRMIHnOv9a1MQr+BuM/MoKk
PIaGz78CClRM
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(4\\\
\\\\\\)], \\\\\\\\(-1\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \
StringForm[\\\"\\\\!\\\\(\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\\
), \\\\(`1`\\\\)], \\\\(`2`\\\\)]\\\\)\\\", \\\"4\\\", \\\"-1\\\"], \
Rule[Editable, False]]\\)\"\>", {0.8408964152537366, -0.34831069974930134}], \
{}}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAd/9amZ/o6r8AAAAAAE9RvfgZMx1G
peq/AIO2YMisbL/f+UYUgGLqv0CF/QxVVX2/7dSlFVQg6r9AYdHaq32Gv6z+
KqnI3um/ANF3ZnCjjr9W6NhG5J3pv9C23ieVjZO/JLE1Vq1d6b+QvhvTAfKX
vxpXqS0qHum/kDjxO49+nL9amN0RYd/ov4BbwjllmaC/sJQfNVih6L/QfD1Q
Hgejvxo/w7YVZOi/wFhZhTWIpb+oroiinyfov5CGsJNrHKi/+F0D8Pvr57+Y
bcdSf8Oqv29oA4Iwsee/EIR6vS19rb8L1AAmQ3fnvzTMTfyYJLC/cvaIkzk+
579cv96sopOxv8IDrmsZBue/KLsWt48Ls79Y1Xg46M7mv1jLDAE7jLS/sPZc
bKuY5r8oyPGTfhW2v/4Fr2FoY+a/qIPPnzOnt79Qdh1aJC/mv3xlXX8yQbm/
ZMArfuT75b9YFOq7UuO6v2APsNytyeW/WMpZEWuNvL9QdlNqhZjlvwjvOHJR
P76/8roUAXBo5b+wkOIL2/i/vz7CzV9yOeW/xildJe7cwL+4qrspkQvlv0y2
PG8UwcG/b6AJ5tDe5L9wHUffyajCvx52Xv81s+S/mghHl/eTw7/fDm3DxIjk
v9ZfXGGGgsS/TKOHYoFf5L+GtUayXnTFv/HsNe9vN+S/LB+4q2hpxr9WQs5d
lBDkv5RAsB6MYce/9a0RhPLq47++Td+NsFzIv84JyxiOxuO/cMcQML1ayb9O
KXGzaqPjvy21nfKYW8q/rxrMy4uB47/aHuZ7Kl/Lv9eInbn0YOO/mIfRLVhl
zL9YRky0qEHjv3oqVigIbs2/3gmT0qoj479UuQZMIHnOvyBkMgr+BuO/JV2m
PIaGz78c8Gv7
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(1\\\
\\\\\\)], \\\\\\\\(-1\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \
StringForm[\\\"\\\\!\\\\(\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\\
), \\\\(`1`\\\\)], \\\\(`2`\\\\)]\\\\)\\\", \\\"1\\\", \\\"-1\\\"], \
Rule[Editable, False]]\\)\"\>", {-0.8408964152636819, -0.34831069975480705}], \
{}}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], LineBox[CompressedData["
1:eJwtkm1Ik1EYhrc5tSz7tGzUjwwqFwublDKd3pjDSjNLtHJuIFPJxIhitmSm
f9zogzJwUEk51zQip6ILFWcpGInFyvVufqyp73vMkEQpUiFTy+j8eHh4OJxz
7ue67zDN5fR8AY/HE6/Wv76nXRq0EjABEe2nE+sj6qcJ9NbCntBeAlOMb/6p
i+BEkVHVUEbQGjE/86uDoDk+0dwtIzgQu2y0WQg6nd8zs+c4mG60Br+6Q6DV
vckyNHFwC5NtB3UEV+IklYoCDj6RrJCXR+C07J40h3E4v8SXRKcTfCkpzqjx
sijaLLQzCQRLfeLxpCoWIbfTngxFEhxtbKusTWHhMJTmK/YS2Azq661+LNiX
Bs1OEUFy2be8QN04HpY/61NvILD+vuSI+jqGGLu8br0/AS8+BPzMMUg7GyfC
lznsyzIrintHUZ2Tlmpf4FBerxRbpKMICM+osP3g4GWaz1SZfTgkcQRum+Vw
LtWxXxnsQ2F1YuTMNIcLfqxIqP8MT1duzJHVuYlRPjJPeVFAzxesnh2xZ72Q
0Pv+ysWgyd4R8On7FYw/1yAdgYn+P8bPXltjHoaY6os6tX22P3gYUqpfddHy
M650CPfofu0Nx3RrpgfhpvtvEb93RisHV7n85yN4vJjg7fdASPkNnjy+dUXm
gZLy1YRqtC0v3Eii/O/b390S7HLjLfXnda624M9dBl3UP61EHdLGY6Cn/hZ1
SMoPaz9hE/WfW+c23pxy4QHNx4I4Yq5b7cI1mp+eD89LppgBRNJ8qXLYlo0p
AxDQ3Mmv1smNxo/4C8YERsA=
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(1\\\
\\\\\\)], \\\\\\\\(\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", StringForm[\\\"\\\\!\\\\(\
\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\), \\\\(`1`\\\\)], \
\\\\(`2`\\\\)]\\\\)\\\", \\\"1\\\", \\\"\\\"], Rule[Editable, \
False]]\\)\"\>", {0.840896415254426, 0.3483106997487611}], {}}}, 
     {RGBColor[0.880722, 0.611041, 0.142051], LineBox[CompressedData["
1:eJwlUmtI03EUnVPTRtPQLC0fiYitjOXQfDRZ2rJMRB0quRyVKQ2p9qGZWmYl
OYoSIftSmdPQQTktHYk48wQippQ6Nx+br/1/Zi5MyfJNzey/D5fL5XLvPfec
458lE+UwGQwGZyv+54S9ISzrtmlUBtpyqHPuxz2dBB3aWm7dHEHLYGlmfTHB
RvvY8isdgVUVq0Qkwe72pfn1VgLPiJ9p55YolOn+KNQ1BDu/dmaUNlJY82lm
f3hEUKA+VC6UUoh6G68+nE8gc98/o/SnENcXkcvIJkhekKdWmczoarMLDhcR
nBdwpuIqzDAZ7TX6GIK+oJby6gQz7mYmvRzhEZTbSwqa7c0IyCrKEQYS+N77
nu2UP4XjL0qz9nkRzDpe1R79NokfMlW3xIXALdldYJc2iZsN/NodjgTS61XC
vM4JpHc0TB/4SyHlUwanJmQC1deSEjUrFCo3G1MqlOOgBKn31YsUrpS0BYnZ
4xhJ1Dp5LFDgxk55Odwaw2DXCd78HIXH3uJnSosJy4uXosK26vhVg+exdBN4
Rlv/SOs6a6bTiKdy2/ws35GqDzFirdC2f+yGeHuVchSsdtt9br/HQg97FC5+
jTQ+zUr17+iiEeT5R9P4P588le88NwzfVdt/woHeL+HiYVSGKej/3ydvxJh6
hvDc9TbNz2XX0+7WyCEwfZJp/niWi/KmNwaIGhxofjef9D5kehvgV8Ok+Q8W
yaWbZXrkdkfS+ggOSna1MPRw056h9fvVFXwnVD4IKV9D61vMMSgeWHQoZFpp
/VlnuUuQ6HBhc5n2h4r9utCiH0CJ2wTtH9k7c5NrwgCyAlS0v+RhdXyFoh8R
Sh7tv3+rUHMk
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(2\\\
\\\\\\)], \\\\\\\\(-1\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \
StringForm[\\\"\\\\!\\\\(\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\\
), \\\\(`1`\\\\)], \\\\(`2`\\\\)]\\\\)\\\", \\\"2\\\", \\\"-1\\\"], \
Rule[Editable, False]]\\)\"\>", {-0.34831069975223156, -0.840896415266262}], \
{}}}, 
     {RGBColor[0.880722, 0.611041, 0.142051], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAAAAAAMDOeb37xXiZn+jqPwAaHGDI
rGw/yzdQHUal6j/A1YQMVVV9P+puYxSAYuo/gBWB2qt9hj9SocEVVCDqP4BY
FWZwo44/xCJGqcje6T8wRqUnlY2TP7Bk80bknek/4Pna0gHylz+Fhk9WrV3p
P0D+qTuPfpw/f4bCLSoe6T/o8Zs5ZZmgP/Ei9hFh3+g/8LMUUB4Hoz/gezc1
WKHoP5CcLoU1iKU/fITathVk6D/QQYSTaxyoPwhUn6KfJ+g/wAmaUn/Dqj9V
ZRnw++vnPxBpTL0tfa0//NMYgjCx5z9cljb8mCSwPyymFSZDd+c/pJPHrKKT
sT+4MZ2TOT7nPyDL/7aPC7M/86rBaxkG5z/AR/YAO4y0P2jrizjozuY/zODb
k34Vtj++fm9sq5jmP2Bnup8zp7c/XAPBYWhj5j8oQkl/MkG5P3jsLlokL+Y/
3BbXu1Ljuj/8sjx+5PvlP3geSBFrjbw/PILA3K3J5T94vyhyUT++P2ptY2qF
mOU/AAfUC9v4vz9wOiQBcGjlPw7MViXu3MA/as7cX3I55T9OUzdvFMHBPwZI
yimRC+U/LshC38mowj930xfm0N7kP27TQ5f3k8M/nkNs/zWz5D92XFphhoLE
P7Z7esPEiOQ/APVFsl50xT98tJRigV/kP+OxuKtoacY/nadC72835D86NrIe
jGHHP8Kr2l2UEOQ/VrXijbBcyD+Cyx2E8urjP0CvFTC9Wsk/+uDWGI7G4z/F
KqTymFvKP7W/fLNqo+M/Ei/ueypfyz8GdtfLi4HjP4I+2y1YZcw/7q6oufRg
4z9ok2EoCG7NPxQ9V7SoQeM/3N4TTCB5zj9A153SqiPjPwlJtTyGhs8/Ow49
Cv4G4z87tkfS
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(2\\\
\\\\\\)], \\\\\\\\(\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", StringForm[\\\"\\\\!\\\\(\
\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\), \\\\(`1`\\\\)], \
\\\\(`2`\\\\)]\\\\)\\\", \\\"2\\\", \\\"\\\"], Rule[Editable, \
False]]\\)\"\>", {0.34831069974997103, 0.8408964152537602}], {}}}, 
     {RGBColor[0.560181, 0.691569, 0.194885], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAAAAAAADiVb3yBFuZn+jqv4BXo2DI
rGw/Ux8zHUal6r/AJ/QMVVV9Px3/RhSAYuq/ANDM2qt9hj8T2qUVVCDqv4Be
c2Zwo44/vgMrqcje6b9wjdwnlY2TP1jt2Ebknem/oKUZ0wHylz8ctjVWrV3p
v4Aw7zuPfpw/DVypLSoe6b84YME5ZZmgP0ud3RFh3+i/gIo8UB4Hoz+lmR81
WKHov6BvWIU1iKU/GkTDthVk6L/Ypq+TaxyoP7iziKKfJ+i/iJfGUn/Dqj8c
YwPw++vnv9i3eb0tfa0/rm0DgjCx578Ya038mCSwP2rZACZDd+e/ZGPerKKT
sT/4+4iTOT7nv2RkFrePC7M/dAmuaxkG57/YeQwBO4y0P0DbeDjozua/BHzx
k34Vtj/Q/Fxsq5jmv+w8z58zp7c/XgyvYWhj5r84JF1/MkG5P/Z8HVokL+a/
pNjpu1Ljuj9Yxyt+5PvlvziUWRFrjbw/qBaw3K3J5b+QvjhyUT++P/R9U2qF
mOW/3GXiC9v4vz/4whQBcGjlvzYXXSXu3MA/rMrNX3I55b+YpjxvFMHBP5iz
uymRC+W/nhBH38mowj/GqQnm0N7kv6r+Rpf3k8M/9X9e/zWz5L/GWFxhhoLE
PzsZbcPEiOS/VrFGsl50xT82rodigV/kv94duKtoacY/cPg172835L8iQrAe
jGHHP3JOzl2UEOS/KFLfjbBcyD+0uhGE8urjv7DOEDC9Wsk/OhfLGI7G479B
v53ymFvKP203cbNqo+O/uSvmeypfyz+IKczLi4Hjvz6X0S1YZcw/c5idufRg
47/fPFYoCG7NP75WTLSoQeO/cM4GTCB5zj8WG5PSqiPjv+x0pjyGhs8/MnYy
Cv4G47+1IVes
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(3\\\
\\\\\\)], \\\\\\\\(-1\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \
StringForm[\\\"\\\\!\\\\(\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\\
), \\\\(`1`\\\\)], \\\\(`2`\\\\)]\\\\)\\\", \\\"3\\\", \\\"-1\\\"], \
Rule[Editable, False]]\\)\"\>", {0.348310699748923, -0.8408964152537368}], \
{}}}, 
     {RGBColor[0.560181, 0.691569, 0.194885], LineBox[CompressedData["
1:eJwlUntI02EUnZqtstWixxINUlDzRSrZ2Fp9ZGNaQ8lHosthyFZjhMPSpiQN
QpdaIqUkJW0q9Ycpzhe+Um46WhlFzs3XnG6/z2bS5iLSyCjNff1xuVwu995z
zzlBeYo0qTeNRgvfCk9ukZzbtbF9EQYT+J6MrKGlr1l6DMr4vuMvnBgFjtTn
tN7BMFK/stZsxGj4SoYWOBiK//i61/sxWuv3yry8SgG7lHGvrQmj9bDJ7PJ2
CnTsUcbwfYzUOl4NX0aBjZfdFq3EaMkY49AGUTBuTpTTJBg1SsozNBY7CBAz
ip2GUYicYxPU2uEWta/bdBYjo4+hplFoh5uunGfTcRgZqq8Xd/nYYVBVKeWH
YMR10aV0pQ3mhY/yAvwxyhitenVyaQFoA11vxXu25rNikNelBaioS3q+2xej
Kf0gv0g/D+6kgcVjfykUkVMU3hQ7D7nNouTunxT6PTGWWqu1QkFwblnbdwq9
f2gOEzGs4Pr8hn7QTSFp1S//bbfnIJKVErfipJD56Y0n2mULZPrkc+O3atTi
Onwq0wLXOpJJ/0MD08+hnwUF6/+8+mIA1Ro7CyluMdnPHVDs1GhnoIeeTe7L
UYR7jDEDjsQ+gi+xrufH6dJpSI8WEPwNTJFyh3MK5pw68t+Dd9aPbNEUMP1r
yP+HlH4JlrFJePylnPBjl2Tt3+BMQuq3LMJfaH5BYedLMwypGITfSOFspXeg
GfJK/Aj/7WfuyjarTcBrTSD61CXLD/TSTHCkI53otxrMUZ0onIALSUNEX6ne
pq5YNoIhgk70vxrHXQWxERrOb654/CGL6i5ZNo3D0bIl4h8762vnXuE4GEZ0
xF/rml6eWv0JehQ84r9/5hth+Q==
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(3\\\
\\\\\\)], \\\\\\\\(\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", StringForm[\\\"\\\\!\\\\(\
\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\), \\\\(`1`\\\\)], \
\\\\(`2`\\\\)]\\\\)\\\", \\\"3\\\", \\\"\\\"], Rule[Editable, \
False]]\\)\"\>", {-0.34831069974881834, 0.8408964152537055}], {}}}, 
     {RGBColor[0.922526, 0.385626, 0.209179], LineBox[CompressedData["
1:eJwtUn1IU3EUffmRZq6gzCktcEbUaCVblq6UX+oo08RpGjgblCiJmWIqVloG
6UuTErSMgnwpuSiXnzhTqRsZqZmkbtO51O39zHg4NC0NXGqt9/rjcrlc7r3n
nnOESZmxKQ4EQYjs8S97vpO4ra2fQpp+NoNeUedXZ8VI1p72lt+NYSBifKl2
CKMDheSZ+usYekOXZpdfYfRBEUaBDIM8ZpXU1GBEmOfjExdpMFa18F6XYTR3
631CcQMNacIIzb48jHZGicvlqTTMyGRpRDJG0OQzTQlpcPVxEAfEYuRTkhtX
bbLA10CnVl0IRqUGkflYpQXy26Ifj0ox2t+pLX8SaYHAtoIU+S6MHCtUl1sc
LfCIKU7a7o2R9f5MskueGbTt6h7VJowStmR0Hfo2CVPfg566O9v7pzzQuvhJ
KPv9cmrPKo0uZlDy3O4J+KSOjmr9RaOITqWoRjIB/tlxRZoFGsUzjTGV1Djc
KOhy2TZHo+ZzXbuVvHEg5sOks1YaDfIt3k75X8DITz580F6rGOVDijGBzcb1
hR0GryOnTXCpgpufzrS5TXePgeDe//0zznS9ZAzUw9x92jtxQzVlhDhpA4uv
4bznXB/PCFWSYBb/3aKan8EFo3DS6Rn7n7X3eJ6rdQTcjpLs/xXh/QMByhG4
yr/G8rPjjS3E1GcA0lfB8jeaFb51TWYATRPHL4WScppf6OFmLce/yvyx1EGg
h409nD7ZlTmpf+7owLeD0y/9rMpDS+jAS9bK6kssiAv9c4ZhZZXTP+uEnixh
hoBZ5vyB0/0WQTUEoe4TrH8u8J9fYXSDcFugZv21t9HSvDlyEFYeSFn//RDU
BZHkZ/gLVidkCA==
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(4\\\
\\\\\\)], \\\\\\\\(-1\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \
StringForm[\\\"\\\\!\\\\(\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\\
), \\\\(`1`\\\\)], \\\\(`2`\\\\)]\\\\)\\\", \\\"4\\\", \\\"-1\\\"], \
Rule[Editable, False]]\\)\"\>", {0.8408964152537366, -0.34831069974930134}], \
{}}}, 
     {RGBColor[0.922526, 0.385626, 0.209179], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAA+hdwmZ/o6r8AAAAAQIWePTG9Rx1G
peq/gMdeYcisbD/GJ1sUgGLqv8CaMg1VVX0/pY25FVQg6r9grd3aq32GP3xC
PqnI3um/oCR3ZnCjjj+wt+tG5J3pvxCG2CeVjZM/oAxIVq1d6b/wUxDTAfKX
P3c/uy0qHum/IDPhO49+nD97Du8RYd/ov1hauDllmaA/opkwNVih6L9AyzFQ
HgejPw7U07YVZOi/8ENMhTWIpT/y1Jiinyfov8BaopNrHKg/ExcT8Pvr578g
drhSf8OqP/q1EoIwsee/GAtrvS19rT/Itw8mQ3fnv4zzRfyYJLA/R3KXkzk+
57+A7tasopOxP7YZvGsZBue/dBUPt48Lsz+Yh4Y46M7mv4BzBQE7jLQ/hEdq
bKuY5r844OqTfhW2P9P3u2FoY+a/9CzJnzOntz+yCypaJC/mv6DAV38yQbk/
APw3fuT75b9AQeW7UuO6PwD0u9ytyeW/FOhVEWuNvD/bBl9qhZjlv+QbNnJR
P74/bvofAXBo5b8g6uAL2/i/P8yz2F9yOeW/GPtcJe7cwD+YUcYpkQvlvxI6
PW8UwcE/+P8T5tDe5L8aYUjfyajCP8SRaP81s+S/IBlJl/eTwz8t6nbDxIjk
v65JX2GGgsQ/6EGRYoFf5L+2hEqyXnTFP5VSP+9vN+S/PN+8q2hpxj/Wctdd
lBDkv4T8tR6MYcc/Oq0ahPLq478SEOaNsFzIP9Xb0xiOxuO/I5oYML1ayT8o
0nmzaqPjv7ehpvKYW8o/gJ7Uy4uB478lLvB7Kl/LP9brpbn0YOO/B8LcLVhl
zD/OjFS0qEHjv9+XYigIbs0/Ijib0qoj47/3YBRMIHnOP5p+Ogr+BuO/tUW1
PIaGzz/vXloa
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(4\\\
\\\\\\)], \\\\\\\\(\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", StringForm[\\\"\\\\!\\\\(\
\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\), \\\\(`1`\\\\)], \
\\\\(`2`\\\\)]\\\\)\\\", \\\"4\\\", \\\"\\\"], Rule[Editable, \
False]]\\)\"\>", {-0.8408964152563142, 0.3483106997496378}], {}}}}, {}}, {{
     {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0.5946035575013604, 0.246292857752354}, {
          0.3378023603053425, 0.02536937560291487}, {0., 0.}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0.5946035575013604, 0.246292857752354}, {
          0.2568011971960195, 0.22092348214943944`}, {0., 0.}}]]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{-0.5946035575030888, 
          0.24629285775204157`}, {-0.25680119719693395`, 
          0.22092348214956797`}, {0., 0.}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{-0.5946035575030888, 
          0.24629285775204157`}, {-0.3378023603061541, 0.02536937560247319}, {
          0., 0.}}]]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0.24629285775223855`, 0.5946035575013856}, {
          0.22092348214938526`, 0.25680119719604916`}, {0., 0.}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0.24629285775223855`, 0.5946035575013856}, {
          0.02536937560285223, 0.3378023603053362}, {0., 0.}}]]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{-0.24629285775332965`, 
          0.5946035575017989}, {-0.0253693756033302, 0.33780236030572175`}, {
          0., 0.}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{-0.24629285775332965`, 
          0.5946035575017989}, {-0.22092348215000032`, 
          0.25680119719607797`}, {0., 0.}}]]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0.8408964152537147, 0.}, {0.6772494048228729, 
          0.0826458473215162}, {0.5946035575013604, 0.246292857752354}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0.8408964152537147, 0.}, {0.758250567932199, 
          0.16364701043083812`}, {0.5946035575013604, 0.246292857752354}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0.8408964152537147, 0.}, {
          0.08264584732070052, -0.11290825922545052`}, {-0.5946035575030888, 
          0.24629285775204157`}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0.8408964152537147, 0.}, {0.16364701042992177`, 
          0.3592011169774932}, {-0.5946035575030888, 
          0.24629285775204157`}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0.8408964152537147, 0.}, {0.4458175832297086, 
          0.19952472547741282`}, {0.24629285775223855`, 
          0.5946035575013856}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0.8408964152537147, 0.}, {0.6413716897762445, 
          0.39507883202397376`}, {0.24629285775223855`, 
          0.5946035575013856}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0.8408964152537147, 0.}, {0.19952472547685837`, 
          0.11852356236815229`}, {-0.24629285775332965`, 
          0.5946035575017989}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0.8408964152537147, 0.}, {0.3950788320235295, 
          0.476079995133646}, {-0.24629285775332965`, 
          0.5946035575017989}}]]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0., 0.}, {0.42044820762685714`, 
          0.13827763482792507`}, {0.8408964152537147, 0.}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0., 0.}, {0.4204482076268578, 
          0.09893151553078851}, {0.8408964152537147, 0.}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0., 0.}, {0.42044820762685686`, 
          0.05942536182748782}, {0.8408964152537147, 0.}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0., 0.}, {0.42044820762685564`, 
          0.019819713459346296`}, {0.8408964152537147, 0.}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0., 0.}, {
          0.42044820762685564`, -0.019819713459346296`}, {0.8408964152537147, 
          0.}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0., 0.}, {
          0.42044820762685686`, -0.05942536182748782}, {0.8408964152537147, 
          0.}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0., 0.}, {
          0.4204482076268578, -0.09893151553078851}, {0.8408964152537147, 
          0.}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0., 0.}, {
          0.42044820762685714`, -0.13827763482792507`}, {0.8408964152537147, 
          0.}}]]}}}, 
     {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0]}], FaceForm[
      Opacity[0]], {DiskBox[{0.5946035575013604, 0.246292857752354}, 0.], 
       InsetBox[
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], 
        Offset[{2, 2}, {0.5946035575013604, 0.246292857752354}], ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {
       DiskBox[{-0.5946035575030888, 0.24629285775204157`}, 0.], InsetBox[
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], 
        Offset[{2, 2}, {-0.5946035575030888, 0.24629285775204157}], 
        ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {
       DiskBox[{0.24629285775223855`, 0.5946035575013856}, 0.], InsetBox[
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], 
        Offset[{2, 2}, {0.24629285775223855, 0.5946035575013856}], 
        ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {
       DiskBox[{-0.24629285775332965`, 0.5946035575017989}, 0.], InsetBox[
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], 
        Offset[{2, 2}, {-0.24629285775332965, 0.5946035575017989}], 
        ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {DiskBox[{0.8408964152537147, 0.}, 0.], 
       InsetBox[
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], 
        Offset[{2, 2}, {0.8408964152537147, 0.}], ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.], InsetBox[
        RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], Offset[{2, 2}, {0., 0.}], 
        ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}}}, 
    {GrayLevel[0], AbsolutePointSize[5], 
     PointBox[{0.5946035575013604, 0.246292857752354}], 
     PointBox[{-0.5946035575030888, 0.24629285775204157`}], 
     PointBox[{0.24629285775223855`, 0.5946035575013856}], 
     PointBox[{-0.24629285775332965`, 0.5946035575017989}], 
     PointBox[{0.8408964152537147, 0.}], PointBox[{0., 0.}]}}},
  ImageSize->300,
  PlotRange->{{-1.1, 1.1}, {-1.1, 1.1}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.905417456132838*^9, {3.9054175115355206`*^9, 3.9054175196315193`*^9}, {
   3.9054178814917603`*^9, 3.9054178897761955`*^9}, {3.905417919816042*^9, 
   3.90541794738951*^9}, 3.9056683216064*^9, 3.905668376523464*^9, 
   3.9056684773062973`*^9, 3.905912895921404*^9, 3.906628434732387*^9, 
   3.918639397773658*^9},
 CellLabel->"Out[8]=",
 CellID->1332941841,ExpressionUUID->"e0780462-9e29-4121-9896-080f9b6273c5"]
}, Open  ]],

Cell["\<\
Since the model graph does not contain information about the cell boundary, \
showing the latter when visualizing the former, requires specifying the \
corresponding cell graph as an option:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.905417555572894*^9, 3.905417598488208*^9}},
 CellID->160254281,ExpressionUUID->"c068ffb4-885a-4883-a0ce-20c6daa117bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VisualizeModelGraph", "[", 
  RowBox[{"modelgraph", ",", 
   RowBox[{"CellGraph", "->", "cellgraph"}], ",", 
   RowBox[{"Elements", "->", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ShowCellBoundary", "->", 
       RowBox[{"{", 
        RowBox[{"ShowEdgeIdentification", "->", "True"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ShowCellGraph", "->", " ", 
       RowBox[{"{", "}"}]}]}], "\[IndentingNewLine]", "|>"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "->", "300"}], ",", 
   RowBox[{"RasterSize", "->", "300"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.905417532063554*^9, 3.905417566556912*^9}, 
   3.905417949449997*^9, {3.905668384406363*^9, 3.9056683871523576`*^9}, {
   3.905668482337908*^9, 3.905668483623055*^9}},
 CellLabel->"In[9]:=",
 CellID->81586248,ExpressionUUID->"933ed96a-fcff-48a5-b096-dbb2c13868d5"],

Cell[BoxData[
 GraphicsBox[{{InsetBox[
     FormBox[
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
FAqFQqFQKE4W/wrwgQtD
         "], {{0, 300.}, {300., 0}}, {0, 255},
         ColorFunction->RGBColor,
         ImageResolution->72.],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->300,
       ImageSizeRaw->{300., 300.},
       PlotRange->{{0, 300.}, {0, 300.}}],
      TraditionalForm], Scaled[{0.5, 0.5}], Scaled[{0.5, 0.5}], Scaled[1]], 
    CircleBox[{0, 0}]}, {
    {RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0, 0], AbsoluteThickness[2], 
     {RGBColor[0.368417, 0.506779, 0.709798], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAr9NamZ/o6j8AAAAAAAAAAJjtMh1G
peo/gDysYMisbD/QzEYUgGLqP4CD9wxVVX0/F6elFVQg6j8g6s3aq32GP/bP
KqnI3uk/4NxzZnCjjj+muNhG5J3pP9B63CeVjZM/X4A1Vq1d6T+APRnTAfKX
PyUlqS0qHuk/IG/uO49+nD8VZd0RYd/oPyjRwDllmaA//l8fNVih6D9oyztQ
HgejP9wIw7YVZOg/2H5XhTWIpT+8doiinyfoP9iCrpNrHKg/PiQD8Pvr5z/I
PsVSf8OqP8QsA4Iwsec/ACl4vS19rT9LlgAmQ3fnP/SHTPyYJLA/eraIkzk+
5z/oY92sopOxP2rBrWsZBuc/AEgVt48Lsz9+kHg46M7mP/w/CwE7jLQ/Kq9c
bKuY5j88JPCTfhW2P6a7rmFoY+Y/vMbNnzOntz/9KB1aJC/mPzyPW38yQbk/
7W8rfuT75T98JOi7UuO6P5y7r9ytyeU/pMBXEWuNvD8VH1NqhZjlP0DLNnJR
P74/FGAUAXBo5T+kUuAL2/i/P5JjzV9yOeU/jP1bJe7cwD8USLspkQvlP9J8
O28UwcE/pDkJ5tDe5D+01kXfyajCPwILXv81s+Q/mrRFl/eTwz9Cn2zDxIjk
P5r+WmGGgsQ/Ai+HYoFf5D8WR0WyXnTFP8tzNe9vN+Q/n6O2q2hpxj8nxM1d
lBDkP/u3rh6MYcc/jioRhPLq4z87uN2NsFzIPwCByhiOxuM/JCUPML1ayT/q
mnCzaqPjP0AGnPKYW8o/iIbLy4uB4z9+Y+R7Kl/LP7zunLn0YOM/AsDPLVhl
zD8bpku0qEHjP+ZWVCgIbs0/UGOS0qoj4z8F2gRMIHnOPxO3MQr+BuM/YHKk
PIaGzz8ZVEDX
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(1\\\
\\\\\\)], \\\\\\\\(\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", StringForm[\\\"\\\\!\\\\(\
\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\), \\\\(`1`\\\\)], \
\\\\(`2`\\\\)]\\\\)\\\", \\\"1\\\", \\\"\\\"], Rule[Editable, \
False]]\\)\"\>", {0.840896415254426, 0.3483106997487611}], {}}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], LineBox[CompressedData["
1:eJwtUn0s1HEcPpeXo06b5LUarfIyDVediBkzMSMMRXnpMLdmk6XdlaZldfI2
NdP0hzsqhrtqqETaw+hFU07n9XDu9z3szMtKlCxK3/rjs2efffZ5e57HUZAV
nc5msVguW/EXFy18zDaNdbgkO07xS+Jj99p5gg5xdqd1N4GF1fTqgwGCErfS
c/I8AodPvxZ/vtxCfagM3gS1UsMCRQ1BZdKP2LMrDILr27iviwkslz7E33rC
YHktUnFYRMCv5JUFCRnUjflfYKUR8KYOzcgcGVgXcdy8oglElbkxUrUWF7PM
WlQBBElv3aeCy7Vob4+tGuERuBZ1lFWHaZFenJ8edJBA558qbt6mxdrdYoG9
LYG1fDXNRDSFO3zFu0RzglaN+BV/VoPC4MBHO4wIMof2+RvEahDj1qJz3mDg
/LAh6HL3JCyfxYS3fGeQV53mUuM5iaTk+JuKrwwy8tqiymUTWA7tNNm9xMCj
rscpgTuB/TUhvMV5Bjmmc7aGueOweir0ObaVG0pS78v0ary5+q+uMtDYnIhT
w3cDtH9IwN4+0z2G0wtn6PxxCZeRe47hvd3//ckCU6lsFMrMZnqfedzepV7u
KEhKAL1fYl//ze/aCCZc5fQ/ESdCxJkfRlRKEf1/2GPgo1fCMOaO3KD8ZJxi
Bap7h1DiF0P5kyrCd216D+F5H4fym38gI6epcRBrXcaUf4es/kL2nkFELvhR
fYz6xcLfpSrcm42g+k2HnLd8wVLBJruV6ltV4HH9aM5naALZVP+KshHJbf0A
1sPXqT/s0ngrSBxAXzZD/SPskl/Rq5RQVjRSf/VwdU07w5TgO3lR38WfbPCV
SPrxB3WVc+I=
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(1\\\
\\\\\\)], \\\\\\\\(-1\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \
StringForm[\\\"\\\\!\\\\(\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\\
), \\\\(`1`\\\\)], \\\\(`2`\\\\)]\\\\)\\\", \\\"1\\\", \\\"-1\\\"], \
Rule[Editable, False]]\\)\"\>", {-0.8408964152636819, -0.34831069975480705}], \
{}}}, 
     {RGBColor[0.880722, 0.611041, 0.142051], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQHbXNkOsf22P7GCi9dFHWAfHDj+xbnZbqL339yD42
uy1mdd0j+2OWd74uuvjIfo2t8/z9lo/sH+l9fftzxyP7+Wc+hEZ/eWgfafW3
bc3CR/bOZUciW9c9tD9Us4l3b/cjew0bnX6XjIf2TCxea3TLH9nnLFB4Ol/x
oT2XpGUWQwqQX1EaMu/WA/uO34w65kFA/jHN+26TH9jPF2DZfNnxkf3s1dv6
F3g/sPfq9J973eiR/dvm2IpNzA/sv7TUpLqoPrKfU/Uqhb38vr38ltYkaclH
9se/5+42e3bP/k7dsuOxfI/sv1qK2DOG3rNv3WSzhIcVqD9kvkvp4bv2TTvX
Ptb4+9BefGGU5kLDu/Zf4v19N397aO98fn3g5Pl37DPUQ1rWfHxoP8Vjt3oU
7x37Odq72UXfPbQv/XdfkqX6tv29mc5Gb18/tJ9wLmrm/Be37EP3JFuZAvmr
512VsA67Zf8FKt8f8ovr6eGb9keh+h+cZX242vCm/XKo+fx/ojjnzb9h75EA
sd/WQ+zdSd4b9m+g7rNKXvjZtua6PdNmiPtzl7qXc7y+Zl9QD/HfPKXTZ82j
rtkfg/o/Y+ovx1snr9pvbIWEj4ibh/A/y6v20l2Q8KsWSCrZuOqKfYsgJHyb
15zqZJIB8v9Awr83piTjf+9lewkpSPwoqcaKbGO4bK/CCom/Hxt06k1KLtn/
qIXErxfLlbaOFxftl1hD4t9eSf/L/tiL9k4GkPTx5tiKyheXL9hbWUPST2bE
g4383hfseVwg6UsuaYlNW9t5+2/bIekPAFA2SuQ=
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(2\\\
\\\\\\)], \\\\\\\\(\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", StringForm[\\\"\\\\!\\\\(\
\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\), \\\\(`1`\\\\)], \
\\\\(`2`\\\\)]\\\\)\\\", \\\"2\\\", \\\"\\\"], Rule[Editable, \
False]]\\)\"\>", {0.34831069974997103, 0.8408964152537602}], {}}}, 
     {RGBColor[0.880722, 0.611041, 0.142051], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAAAAAADDekL063F2Zn+jqv4BPLGHI
rGy/VuY1HUal6r/AjzQNVVV9v+G1SRSAYuq/ICrr2qt9hr+kgKgVVCDqvwAP
kGZwo46/MJotqcje6b+wKOonlY2Tv8Nz20bknem/kJsm0wHyl7+dLDhWrV3p
v1CY+zuPfpy/yMKrLSoe6b+oWMc5ZZmgv2v03xFh3+i/8FJCUB4Ho79Z4SE1
WKHov2ATXoU1iKW/l3zFthVk6L8AMbWTaxyovzjdiqKfJ+i/EBPMUn/Dqr/g
fQXw++vnv5Avf70tfa2/+3kFgjCx579oKlD8mCSwv4zXAiZDd+e/XCvhrKKT
sb897IqTOT7nvxg6GbePC7O/MuyvaxkG579cYg8BO4y0v9Cwejjozua/OHz0
k34Vtr+TxV5sq5jmv6RZ0p8zp7e/uMiwYWhj5r8kYmB/MkG5v1AtH1okL+a/
WDztu1Ljur8cbC1+5PvlvywiXRFrjby/TLCx3K3J5b8MezxyUT++v+sMVWqF
mOW/HFXmC9v4v7++RxYBcGjlv0AqXyXu3MC/wEXPX3I55b/+1j5vFMHBv30l
vSmRC+W/QmBJ38mowr8CEwvm0N7kv2RvSZf3k8O/E+Ff/zWz5L9S7F5hhoLE
v8pybsPEiOS/ZGlJsl50xb/IAIligV/kvwD8uqtoaca/mUQ372835L/gR7Me
jGHHv8uUz12UEOS/8IDijbBcyL/Z+xKE8urjv+InFDC9Wsm/yFPMGI7G478d
RKHymFvKvwdwcrNqo+O/dt3peypfy7/SXs3Li4Hjv/N21S1YZcy/FMueufRg
47+SS1ooCG7Nv16HTbSoQeO/Fg0LTCB5zr9iSpTSqiPjv1vkqjyGhs+/16Qz
Cv4G47806Gdu
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(2\\\
\\\\\\)], \\\\\\\\(-1\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \
StringForm[\\\"\\\\!\\\\(\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\\
), \\\\(`1`\\\\)], \\\\(`2`\\\\)]\\\\)\\\", \\\"2\\\", \\\"-1\\\"], \
Rule[Editable, False]]\\)\"\>", {-0.34831069975223156, -0.840896415266262}], \
{}}}, 
     {RGBColor[0.560181, 0.691569, 0.194885], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAAAAAAACMOb0q2VqZn+jqP4DPr2DI
rGy/vvIyHUal6j+AgfkMVVV9v6XRRhSAYuo/gAXP2qt9hr+hq6UVVCDqP4AW
dWZwo46/OtQqqcje6T+wJ90nlY2Tv6m82Ebknek/UPsZ0wHyl78nhDVWrV3p
P7A+7zuPfpy/uCipLSoe6T9QQsE5ZZmgv3po3RFh3+g/UEY8UB4Ho786Yx81
WKHoP/gDWIU1iKW/+AvDthVk6D+AEq+Taxyov795iKKfJ+g/aNnFUn/Dqr8t
JwPw++vnP/DOeL0tfa2/qC8DgjCx5z/E4Ez8mCSwvy2ZACZDd+c/uMLdrKKT
sb9guYiTOT7nP/isFbePC7O/XsStaxkG5z9MqwsBO4y0v4aTeDjozuY/AJbw
k34Vtr9Sslxsq5jmPxw/zp8zp7e/9L6uYWhj5j9YDlx/MkG5v3wsHVokL+Y/
dKrou1Ljur+kcyt+5PvlP4xNWBFrjby/lr+v3K3J5T88XzdyUT++v1ojU2qF
mOU/yO3gC9v4v7+wZBQBcGjlP8BOXCXu3MC/jGjNX3I55T+w0TtvFMHBv3ZN
uymRC+U/Qi9G38mowr96Pwnm0N7kP+IQRpf3k8O/VhFe/zWz5D+eXlthhoLE
vx2mbMPEiOQ/4KpFsl50xb9wNodigV/kPy4Lt6toaca/1Xs172835D9TI68e
jGHHv9jMzV2UEOQ/WyfejbBcyL/wMxGE8urjPxCYDzC9Wsm/IIvKGI7G4z/1
fJzymFvKv9KlcLNqo+M/+d3keypfy79AksvLi4HjPz4+0C1YZcy/UvucufRg
4z/Y2FQoCG7Nv5izS7SoQeM/rF8FTCB5zr/AcZLSqiPjP7T7pDyGhs+/gsYx
Cv4G4z/R9Vi+
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(3\\\
\\\\\\)], \\\\\\\\(\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", StringForm[\\\"\\\\!\\\\(\
\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\), \\\\(`1`\\\\)], \
\\\\(`2`\\\\)]\\\\)\\\", \\\"3\\\", \\\"\\\"], Rule[Editable, \
False]]\\)\"\>", {-0.34831069974881834, 0.8408964152537055}], {}}}, 
     {RGBColor[0.560181, 0.691569, 0.194885], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQvee4Idc/tsf2k+6B6f0xm7MOiB9+ZM+StVR/6etH
+xOq22JW1z2yn5dw5+uii4/2f/Fxnr/f8pG9cujXtz93PNqvcvtDaPSXh/Yi
CX/b1ix8tP9f85HI1nUP7dkXbeLd2/1ov7CnTr9LxkP7xxpea3TLH+1vWqPw
dL7iQ/tZtpZZDCmP9i9vLg2Zd+uB/Q15Jh3zoEf7T1zQvO82+YH9fhOWzZcd
H+0X3bqtf4H3A3u/tf5zrxs92t/YE1uxifmB/bsVNakuqo/2f+t8lcJeft9e
7kZrkrTko/1+rHm7zZ7ds/+2aNnxWL5H+5e5itgzht6zP33NZgkP66P9x+Lm
u5QevmvPdm/tY42/D/dLrYzSXGh41/5Ei7/v5m8P9xdcXR84ef4d+wU+IS1r
Pj7c/9Znt3oU7x17j8Dd7KLvHu7/z/BAkqX6tr3IAWejt68f7g84HzVz/otb
9mqPk61MgfyVc69KWIfdsi84CJE/H/iL6+nhm/YMIRD9+SdZH642vGm/OQBi
/tevUZzz5t+wt+iC2N/qIPbuJO8N+wtPIO77FLnws23Ndft39yDuXzTLvZzj
9TX74jUQ/8WLnT5rHnXN/ssjiP+Ptf9yvHXyqr30Vkj4KJh7CP+zvGp/YRck
/DwZkko2rrpiP80ZEr5qs091MslcsWc2gIS/lFdJxv/ey/Zi/pD4WS8YK7KN
4bL9BmtI/M2Zo1NvUnLJXmkbJH6V3l9u63hx0b6qFBL/CTz6X/bHXrS/kg1J
HwUbVlS+uHzBfloFJP3kOz7YyO99wd6pGZK+MoyX2LS1nbcX/glJfwDmWmIu

       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(3\\\
\\\\\\)], \\\\\\\\(-1\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \
StringForm[\\\"\\\\!\\\\(\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\\
), \\\\(`1`\\\\)], \\\\(`2`\\\\)]\\\\)\\\", \\\"3\\\", \\\"-1\\\"], \
Rule[Editable, False]]\\)\"\>", {0.348310699748923, -0.8408964152537368}], \
{}}}, 
     {RGBColor[0.922526, 0.385626, 0.209179], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQve64Idc/tsf7mfeDafubwUv1l75+tH/fqqwD4ocf
2Wt53/m66OKj/Y+K2mJW1z2yT3H4+vbnjkf7Z7o4z99v+ciezedv25qFj/Z/
uvQhNPrLQ/sVfZt493Y/2v+j+khk67qH9vpiXmt0yx/tt3PU6XfJeGjfo22Z
xZACNG+JwtP5ig/tC/iYdMyDHu13qCkNmXfrgf0PZZbNlx0f7Z97UvO+2+QH
9ipz/edeN3q0X2vdtv4F3g/s42bWpLqoPtp/szW2YhPzA3vVk61J0pKP9hvX
vkphL79v3z9l2fFYvkf75X7m7jZ7ds/+0wmbJTysj/YLWonYM4bes99xYe1j
jb8P918Knu9SeviuPVOFv+/mbw/3n5kXpbnQ8K59jENIy5qPD/efO70+cPL8
O/bNrrvZRd893P/Hebd6FO8d+1NbnI3evn64/+iP+5Is1bftA28kW5kC+ZeO
R82c/+KWPd92iPyLaVclrMNu2fN4QfRf8f7F9fTwTXsNd4j51kdYH642vGkv
1Aixv/djFOe8+Tfsee5A3PfWRuzdSd4b9u3XIO7XCV/42bbmun3KEoj/Ns1w
L+d4fc3e4jbE/x6ip8+aR12zX7cWEj6d7b8cb528ar9uMyT8Dph7CP+zvGq/
ywYSvicYk0o2rrpin6EJCf+2uac6mWSu2O/0gMRPtG9Jxv/ey/Y9ppD4uyIa
K7KN4bK90QZI/C5bqFNvUnLJflc+JP75vl5u63hx0d4uDZI+DIX1v+yPvWiv
UQxJPxo7VlS+uHzB/mstJH3xeD3YyO99wf7JZ0j6y3BbYtPWdt4eABMiYhU=

       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(4\\\
\\\\\\)], \\\\\\\\(\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", StringForm[\\\"\\\\!\\\\(\
\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\), \\\\(`1`\\\\)], \
\\\\(`2`\\\\)]\\\\)\\\", \\\"4\\\", \\\"\\\"], Rule[Editable, \
False]]\\)\"\>", {-0.8408964152563142, 0.3483106997496378}], {}}}, 
     {RGBColor[0.922526, 0.385626, 0.209179], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAQtNamZ/o6j8AAAAAAKALvRjtMh1G
peo/gLasYMisbL8+zEYUgGLqP8DG9wxVVX2/dKalFVQg6j/gDs7aq32Gv0LP
KqnI3uk/IAV0ZnCjjr/it9hG5J3pP9CQ3CeVjZO/in81Vq1d6T9QVRnTAfKX
v0AkqS0qHuk/8IjuO49+nL8hZN0RYd/oPxjfwDllmaC//F4fNVih6D9o2jtQ
Hgejv8wHw7YVZOg/+I5XhTWIpb+gdYiinyfoPyCUrpNrHKi/FCMD8Pvr5z9I
UcVSf8Oqv44rA4Iwsec/uDx4vS19rb8KlQAmQ3fnP3iSTPyYJLC/LrWIkzk+
5z8Yb92sopOxvxXArWsZBuc/2FMVt48Ls78gj3g46M7mP4hMCwE7jLS/xK1c
bKuY5j98MfCTfhW2vzi6rmFoY+Y/uNTNnzOnt7+JJx1aJC/mP/idW38yQbm/
cm4rfuT75T8ENOi7UuO6vx26r9ytyeU/6NBXEWuNvL+SHVNqhZjlP0zcNnJR
P76/jl4UAXBo5T98ZOAL2/i/vwlizV9yOeU/4gZcJe7cwL+IRrspkQvlP5KG
O28UwcG/GDgJ5tDe5D/e4EXfyajCv3YJXv81s+Q/ML9Fl/eTw7+4nWzDxIjk
P5oJW2GGgsS/ei2HYoFf5D+EUkWyXnTFv0ZyNe9vN+Q/e6+2q2hpxr+mws1d
lBDkP0fErh6MYce/EikRhPLq4z/1xN2NsFzIv4p/yhiOxuM/TjIPML1ayb98
mXCzaqPjP9sTnPKYW8q/IIXLy4uB4z+MceR7Kl/Lv17tnLn0YOM/gc7PLVhl
zL/GpEu0qEHjP9VlVCgIbs2/BmKS0qoj4z9l6QRMIHnOv9a1MQr+BuM/MoKk
PIaGz78CClRM
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(4\\\
\\\\\\)], \\\\\\\\(-1\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \
StringForm[\\\"\\\\!\\\\(\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\\
), \\\\(`1`\\\\)], \\\\(`2`\\\\)]\\\\)\\\", \\\"4\\\", \\\"-1\\\"], \
Rule[Editable, False]]\\)\"\>", {0.8408964152537366, -0.34831069974930134}], \
{}}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAd/9amZ/o6r8AAAAAAE9RvfgZMx1G
peq/AIO2YMisbL/f+UYUgGLqv0CF/QxVVX2/7dSlFVQg6r9AYdHaq32Gv6z+
KqnI3um/ANF3ZnCjjr9W6NhG5J3pv9C23ieVjZO/JLE1Vq1d6b+QvhvTAfKX
vxpXqS0qHum/kDjxO49+nL9amN0RYd/ov4BbwjllmaC/sJQfNVih6L/QfD1Q
Hgejvxo/w7YVZOi/wFhZhTWIpb+oroiinyfov5CGsJNrHKi/+F0D8Pvr57+Y
bcdSf8Oqv29oA4Iwsee/EIR6vS19rb8L1AAmQ3fnvzTMTfyYJLC/cvaIkzk+
579cv96sopOxv8IDrmsZBue/KLsWt48Ls79Y1Xg46M7mv1jLDAE7jLS/sPZc
bKuY5r8oyPGTfhW2v/4Fr2FoY+a/qIPPnzOnt79Qdh1aJC/mv3xlXX8yQbm/
ZMArfuT75b9YFOq7UuO6v2APsNytyeW/WMpZEWuNvL9QdlNqhZjlvwjvOHJR
P76/8roUAXBo5b+wkOIL2/i/vz7CzV9yOeW/xildJe7cwL+4qrspkQvlv0y2
PG8UwcG/b6AJ5tDe5L9wHUffyajCvx52Xv81s+S/mghHl/eTw7/fDm3DxIjk
v9ZfXGGGgsS/TKOHYoFf5L+GtUayXnTFv/HsNe9vN+S/LB+4q2hpxr9WQs5d
lBDkv5RAsB6MYce/9a0RhPLq47++Td+NsFzIv84JyxiOxuO/cMcQML1ayb9O
KXGzaqPjvy21nfKYW8q/rxrMy4uB47/aHuZ7Kl/Lv9eInbn0YOO/mIfRLVhl
zL9YRky0qEHjv3oqVigIbs2/3gmT0qoj479UuQZMIHnOvyBkMgr+BuO/JV2m
PIaGz78c8Gv7
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(1\\\
\\\\\\)], \\\\\\\\(-1\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \
StringForm[\\\"\\\\!\\\\(\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\\
), \\\\(`1`\\\\)], \\\\(`2`\\\\)]\\\\)\\\", \\\"1\\\", \\\"-1\\\"], \
Rule[Editable, False]]\\)\"\>", {-0.8408964152636819, -0.34831069975480705}], \
{}}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], LineBox[CompressedData["
1:eJwtkm1Ik1EYhrc5tSz7tGzUjwwqFwublDKd3pjDSjNLtHJuIFPJxIhitmSm
f9zogzJwUEk51zQip6ILFWcpGInFyvVufqyp73vMkEQpUiFTy+j8eHh4OJxz
7ue67zDN5fR8AY/HE6/Wv76nXRq0EjABEe2nE+sj6qcJ9NbCntBeAlOMb/6p
i+BEkVHVUEbQGjE/86uDoDk+0dwtIzgQu2y0WQg6nd8zs+c4mG60Br+6Q6DV
vckyNHFwC5NtB3UEV+IklYoCDj6RrJCXR+C07J40h3E4v8SXRKcTfCkpzqjx
sijaLLQzCQRLfeLxpCoWIbfTngxFEhxtbKusTWHhMJTmK/YS2Azq661+LNiX
Bs1OEUFy2be8QN04HpY/61NvILD+vuSI+jqGGLu8br0/AS8+BPzMMUg7GyfC
lznsyzIrintHUZ2Tlmpf4FBerxRbpKMICM+osP3g4GWaz1SZfTgkcQRum+Vw
LtWxXxnsQ2F1YuTMNIcLfqxIqP8MT1duzJHVuYlRPjJPeVFAzxesnh2xZ72Q
0Pv+ysWgyd4R8On7FYw/1yAdgYn+P8bPXltjHoaY6os6tX22P3gYUqpfddHy
M650CPfofu0Nx3RrpgfhpvtvEb93RisHV7n85yN4vJjg7fdASPkNnjy+dUXm
gZLy1YRqtC0v3Eii/O/b390S7HLjLfXnda624M9dBl3UP61EHdLGY6Cn/hZ1
SMoPaz9hE/WfW+c23pxy4QHNx4I4Yq5b7cI1mp+eD89LppgBRNJ8qXLYlo0p
AxDQ3Mmv1smNxo/4C8YERsA=
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(1\\\
\\\\\\)], \\\\\\\\(\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", StringForm[\\\"\\\\!\\\\(\
\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\), \\\\(`1`\\\\)], \
\\\\(`2`\\\\)]\\\\)\\\", \\\"1\\\", \\\"\\\"], Rule[Editable, \
False]]\\)\"\>", {0.840896415254426, 0.3483106997487611}], {}}}, 
     {RGBColor[0.880722, 0.611041, 0.142051], LineBox[CompressedData["
1:eJwlUmtI03EUnVPTRtPQLC0fiYitjOXQfDRZ2rJMRB0quRyVKQ2p9qGZWmYl
OYoSIftSmdPQQTktHYk48wQippQ6Nx+br/1/Zi5MyfJNzey/D5fL5XLvPfec
458lE+UwGQwGZyv+54S9ISzrtmlUBtpyqHPuxz2dBB3aWm7dHEHLYGlmfTHB
RvvY8isdgVUVq0Qkwe72pfn1VgLPiJ9p55YolOn+KNQ1BDu/dmaUNlJY82lm
f3hEUKA+VC6UUoh6G68+nE8gc98/o/SnENcXkcvIJkhekKdWmczoarMLDhcR
nBdwpuIqzDAZ7TX6GIK+oJby6gQz7mYmvRzhEZTbSwqa7c0IyCrKEQYS+N77
nu2UP4XjL0qz9nkRzDpe1R79NokfMlW3xIXALdldYJc2iZsN/NodjgTS61XC
vM4JpHc0TB/4SyHlUwanJmQC1deSEjUrFCo3G1MqlOOgBKn31YsUrpS0BYnZ
4xhJ1Dp5LFDgxk55Odwaw2DXCd78HIXH3uJnSosJy4uXosK26vhVg+exdBN4
Rlv/SOs6a6bTiKdy2/ws35GqDzFirdC2f+yGeHuVchSsdtt9br/HQg97FC5+
jTQ+zUr17+iiEeT5R9P4P588le88NwzfVdt/woHeL+HiYVSGKej/3ydvxJh6
hvDc9TbNz2XX0+7WyCEwfZJp/niWi/KmNwaIGhxofjef9D5kehvgV8Ok+Q8W
yaWbZXrkdkfS+ggOSna1MPRw056h9fvVFXwnVD4IKV9D61vMMSgeWHQoZFpp
/VlnuUuQ6HBhc5n2h4r9utCiH0CJ2wTtH9k7c5NrwgCyAlS0v+RhdXyFoh8R
Sh7tv3+rUHMk
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(2\\\
\\\\\\)], \\\\\\\\(-1\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \
StringForm[\\\"\\\\!\\\\(\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\\
), \\\\(`1`\\\\)], \\\\(`2`\\\\)]\\\\)\\\", \\\"2\\\", \\\"-1\\\"], \
Rule[Editable, False]]\\)\"\>", {-0.34831069975223156, -0.840896415266262}], \
{}}}, 
     {RGBColor[0.880722, 0.611041, 0.142051], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAAAAAAMDOeb37xXiZn+jqPwAaHGDI
rGw/yzdQHUal6j/A1YQMVVV9P+puYxSAYuo/gBWB2qt9hj9SocEVVCDqP4BY
FWZwo44/xCJGqcje6T8wRqUnlY2TP7Bk80bknek/4Pna0gHylz+Fhk9WrV3p
P0D+qTuPfpw/f4bCLSoe6T/o8Zs5ZZmgP/Ei9hFh3+g/8LMUUB4Hoz/gezc1
WKHoP5CcLoU1iKU/fITathVk6D/QQYSTaxyoPwhUn6KfJ+g/wAmaUn/Dqj9V
ZRnw++vnPxBpTL0tfa0//NMYgjCx5z9cljb8mCSwPyymFSZDd+c/pJPHrKKT
sT+4MZ2TOT7nPyDL/7aPC7M/86rBaxkG5z/AR/YAO4y0P2jrizjozuY/zODb
k34Vtj++fm9sq5jmP2Bnup8zp7c/XAPBYWhj5j8oQkl/MkG5P3jsLlokL+Y/
3BbXu1Ljuj/8sjx+5PvlP3geSBFrjbw/PILA3K3J5T94vyhyUT++P2ptY2qF
mOU/AAfUC9v4vz9wOiQBcGjlPw7MViXu3MA/as7cX3I55T9OUzdvFMHBPwZI
yimRC+U/LshC38mowj930xfm0N7kP27TQ5f3k8M/nkNs/zWz5D92XFphhoLE
P7Z7esPEiOQ/APVFsl50xT98tJRigV/kP+OxuKtoacY/nadC72835D86NrIe
jGHHP8Kr2l2UEOQ/VrXijbBcyD+Cyx2E8urjP0CvFTC9Wsk/+uDWGI7G4z/F
KqTymFvKP7W/fLNqo+M/Ei/ueypfyz8GdtfLi4HjP4I+2y1YZcw/7q6oufRg
4z9ok2EoCG7NPxQ9V7SoQeM/3N4TTCB5zj9A153SqiPjPwlJtTyGhs8/Ow49
Cv4G4z87tkfS
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(2\\\
\\\\\\)], \\\\\\\\(\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", StringForm[\\\"\\\\!\\\\(\
\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\), \\\\(`1`\\\\)], \
\\\\(`2`\\\\)]\\\\)\\\", \\\"2\\\", \\\"\\\"], Rule[Editable, \
False]]\\)\"\>", {0.34831069974997103, 0.8408964152537602}], {}}}, 
     {RGBColor[0.560181, 0.691569, 0.194885], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAAAAAAADiVb3yBFuZn+jqv4BXo2DI
rGw/Ux8zHUal6r/AJ/QMVVV9Px3/RhSAYuq/ANDM2qt9hj8T2qUVVCDqv4Be
c2Zwo44/vgMrqcje6b9wjdwnlY2TP1jt2Ebknem/oKUZ0wHylz8ctjVWrV3p
v4Aw7zuPfpw/DVypLSoe6b84YME5ZZmgP0ud3RFh3+i/gIo8UB4Hoz+lmR81
WKHov6BvWIU1iKU/GkTDthVk6L/Ypq+TaxyoP7iziKKfJ+i/iJfGUn/Dqj8c
YwPw++vnv9i3eb0tfa0/rm0DgjCx578Ya038mCSwP2rZACZDd+e/ZGPerKKT
sT/4+4iTOT7nv2RkFrePC7M/dAmuaxkG57/YeQwBO4y0P0DbeDjozua/BHzx
k34Vtj/Q/Fxsq5jmv+w8z58zp7c/XgyvYWhj5r84JF1/MkG5P/Z8HVokL+a/
pNjpu1Ljuj9Yxyt+5PvlvziUWRFrjbw/qBaw3K3J5b+QvjhyUT++P/R9U2qF
mOW/3GXiC9v4vz/4whQBcGjlvzYXXSXu3MA/rMrNX3I55b+YpjxvFMHBP5iz
uymRC+W/nhBH38mowj/GqQnm0N7kv6r+Rpf3k8M/9X9e/zWz5L/GWFxhhoLE
PzsZbcPEiOS/VrFGsl50xT82rodigV/kv94duKtoacY/cPg172835L8iQrAe
jGHHP3JOzl2UEOS/KFLfjbBcyD+0uhGE8urjv7DOEDC9Wsk/OhfLGI7G479B
v53ymFvKP203cbNqo+O/uSvmeypfyz+IKczLi4Hjvz6X0S1YZcw/c5idufRg
47/fPFYoCG7NP75WTLSoQeO/cM4GTCB5zj8WG5PSqiPjv+x0pjyGhs8/MnYy
Cv4G47+1IVes
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(3\\\
\\\\\\)], \\\\\\\\(-1\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \
StringForm[\\\"\\\\!\\\\(\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\\
), \\\\(`1`\\\\)], \\\\(`2`\\\\)]\\\\)\\\", \\\"3\\\", \\\"-1\\\"], \
Rule[Editable, False]]\\)\"\>", {0.348310699748923, -0.8408964152537368}], \
{}}}, 
     {RGBColor[0.560181, 0.691569, 0.194885], LineBox[CompressedData["
1:eJwlUntI02EUnZqtstWixxINUlDzRSrZ2Fp9ZGNaQ8lHosthyFZjhMPSpiQN
QpdaIqUkJW0q9Ycpzhe+Um46WhlFzs3XnG6/z2bS5iLSyCjNff1xuVwu995z
zzlBeYo0qTeNRgvfCk9ukZzbtbF9EQYT+J6MrKGlr1l6DMr4vuMvnBgFjtTn
tN7BMFK/stZsxGj4SoYWOBiK//i61/sxWuv3yry8SgG7lHGvrQmj9bDJ7PJ2
CnTsUcbwfYzUOl4NX0aBjZfdFq3EaMkY49AGUTBuTpTTJBg1SsozNBY7CBAz
ip2GUYicYxPU2uEWta/bdBYjo4+hplFoh5uunGfTcRgZqq8Xd/nYYVBVKeWH
YMR10aV0pQ3mhY/yAvwxyhitenVyaQFoA11vxXu25rNikNelBaioS3q+2xej
Kf0gv0g/D+6kgcVjfykUkVMU3hQ7D7nNouTunxT6PTGWWqu1QkFwblnbdwq9
f2gOEzGs4Pr8hn7QTSFp1S//bbfnIJKVErfipJD56Y0n2mULZPrkc+O3atTi
Onwq0wLXOpJJ/0MD08+hnwUF6/+8+mIA1Ro7CyluMdnPHVDs1GhnoIeeTe7L
UYR7jDEDjsQ+gi+xrufH6dJpSI8WEPwNTJFyh3MK5pw68t+Dd9aPbNEUMP1r
yP+HlH4JlrFJePylnPBjl2Tt3+BMQuq3LMJfaH5BYedLMwypGITfSOFspXeg
GfJK/Aj/7WfuyjarTcBrTSD61CXLD/TSTHCkI53otxrMUZ0onIALSUNEX6ne
pq5YNoIhgk70vxrHXQWxERrOb654/CGL6i5ZNo3D0bIl4h8762vnXuE4GEZ0
xF/rml6eWv0JehQ84r9/5hth+Q==
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(3\\\
\\\\\\)], \\\\\\\\(\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", StringForm[\\\"\\\\!\\\\(\
\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\), \\\\(`1`\\\\)], \
\\\\(`2`\\\\)]\\\\)\\\", \\\"3\\\", \\\"\\\"], Rule[Editable, \
False]]\\)\"\>", {-0.34831069974881834, 0.8408964152537055}], {}}}, 
     {RGBColor[0.922526, 0.385626, 0.209179], LineBox[CompressedData["
1:eJwtUn1IU3EUffmRZq6gzCktcEbUaCVblq6UX+oo08RpGjgblCiJmWIqVloG
6UuTErSMgnwpuSiXnzhTqRsZqZmkbtO51O39zHg4NC0NXGqt9/rjcrlc7r3n
nnOESZmxKQ4EQYjs8S97vpO4ra2fQpp+NoNeUedXZ8VI1p72lt+NYSBifKl2
CKMDheSZ+usYekOXZpdfYfRBEUaBDIM8ZpXU1GBEmOfjExdpMFa18F6XYTR3
631CcQMNacIIzb48jHZGicvlqTTMyGRpRDJG0OQzTQlpcPVxEAfEYuRTkhtX
bbLA10CnVl0IRqUGkflYpQXy26Ifj0ox2t+pLX8SaYHAtoIU+S6MHCtUl1sc
LfCIKU7a7o2R9f5MskueGbTt6h7VJowStmR0Hfo2CVPfg566O9v7pzzQuvhJ
KPv9cmrPKo0uZlDy3O4J+KSOjmr9RaOITqWoRjIB/tlxRZoFGsUzjTGV1Djc
KOhy2TZHo+ZzXbuVvHEg5sOks1YaDfIt3k75X8DITz580F6rGOVDijGBzcb1
hR0GryOnTXCpgpufzrS5TXePgeDe//0zznS9ZAzUw9x92jtxQzVlhDhpA4uv
4bznXB/PCFWSYBb/3aKan8EFo3DS6Rn7n7X3eJ6rdQTcjpLs/xXh/QMByhG4
yr/G8rPjjS3E1GcA0lfB8jeaFb51TWYATRPHL4WScppf6OFmLce/yvyx1EGg
h409nD7ZlTmpf+7owLeD0y/9rMpDS+jAS9bK6kssiAv9c4ZhZZXTP+uEnixh
hoBZ5vyB0/0WQTUEoe4TrH8u8J9fYXSDcFugZv21t9HSvDlyEFYeSFn//RDU
BZHkZ/gLVidkCA==
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(4\\\
\\\\\\)], \\\\\\\\(-1\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \
StringForm[\\\"\\\\!\\\\(\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\\
), \\\\(`1`\\\\)], \\\\(`2`\\\\)]\\\\)\\\", \\\"4\\\", \\\"-1\\\"], \
Rule[Editable, False]]\\)\"\>", {0.8408964152537366, -0.34831069974930134}], \
{}}}, 
     {RGBColor[0.922526, 0.385626, 0.209179], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAA+hdwmZ/o6r8AAAAAQIWePTG9Rx1G
peq/gMdeYcisbD/GJ1sUgGLqv8CaMg1VVX0/pY25FVQg6r9grd3aq32GP3xC
PqnI3um/oCR3ZnCjjj+wt+tG5J3pvxCG2CeVjZM/oAxIVq1d6b/wUxDTAfKX
P3c/uy0qHum/IDPhO49+nD97Du8RYd/ov1hauDllmaA/opkwNVih6L9AyzFQ
HgejPw7U07YVZOi/8ENMhTWIpT/y1Jiinyfov8BaopNrHKg/ExcT8Pvr578g
drhSf8OqP/q1EoIwsee/GAtrvS19rT/Itw8mQ3fnv4zzRfyYJLA/R3KXkzk+
57+A7tasopOxP7YZvGsZBue/dBUPt48Lsz+Yh4Y46M7mv4BzBQE7jLQ/hEdq
bKuY5r844OqTfhW2P9P3u2FoY+a/9CzJnzOntz+yCypaJC/mv6DAV38yQbk/
APw3fuT75b9AQeW7UuO6PwD0u9ytyeW/FOhVEWuNvD/bBl9qhZjlv+QbNnJR
P74/bvofAXBo5b8g6uAL2/i/P8yz2F9yOeW/GPtcJe7cwD+YUcYpkQvlvxI6
PW8UwcE/+P8T5tDe5L8aYUjfyajCP8SRaP81s+S/IBlJl/eTwz8t6nbDxIjk
v65JX2GGgsQ/6EGRYoFf5L+2hEqyXnTFP5VSP+9vN+S/PN+8q2hpxj/Wctdd
lBDkv4T8tR6MYcc/Oq0ahPLq478SEOaNsFzIP9Xb0xiOxuO/I5oYML1ayT8o
0nmzaqPjv7ehpvKYW8o/gJ7Uy4uB478lLvB7Kl/LP9brpbn0YOO/B8LcLVhl
zD/OjFS0qEHjv9+XYigIbs0/Ijib0qoj47/3YBRMIHnOP5p+Ogr+BuO/tUW1
PIaGzz/vXloa
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(4\\\
\\\\\\)], \\\\\\\\(\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", StringForm[\\\"\\\\!\\\\(\
\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\), \\\\(`1`\\\\)], \
\\\\(`2`\\\\)]\\\\)\\\", \\\"4\\\", \\\"\\\"], Rule[Editable, \
False]]\\)\"\>", {-0.8408964152563142, 0.3483106997496378}], {}}}}, {}}, {{
     {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0., 0.}, {
          0.0699525050864362, -0.017620813312427715`}, {
          0.08070734354523137, -0.036665162243917394`}, {
          0.08091729928177427, -0.05136697989593444}, {
          0.05136697989593445, -0.08091729928177425}, {
          0.036665162243917415`, -0.08070734354523137}, {
          0.01762081331242772, -0.0699525050864362}, {0., 0.}},
          SplineDegree->7]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0., 
          0.}, {-0.017620813312427708`, -0.0699525050864362}, \
{-0.036665162243917394`, -0.08070734354523137}, {-0.05136697989593443, \
-0.08091729928177427}, {-0.08091729928177425, -0.05136697989593446}, \
{-0.08070734354523137, -0.036665162243917415`}, {-0.0699525050864362, \
-0.01762081331242772}, {0., 0.}},
          SplineDegree->7]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0., 0.}, {-0.06995250508643622, 
          0.017620813312427704`}, {-0.08070734354523137, 
          0.03666516224391738}, {-0.08091729928177428, 
          0.05136697989593444}, {-0.05136697989593447, 
          0.08091729928177425}, {-0.03666516224391744, 
          0.08070734354523137}, {-0.017620813312427736`, 
          0.0699525050864362}, {0., 0.}},
          SplineDegree->7]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0., 0.}, {0.017620813312427697`, 
          0.06995250508643622}, {0.036665162243917374`, 
          0.08070734354523137}, {0.05136697989593443, 0.08091729928177428}, {
          0.08091729928177424, 0.05136697989593447}, {0.08070734354523137, 
          0.03666516224391745}, {0.06995250508643619, 
          0.017620813312427736`}, {0., 0.}},
          SplineDegree->7]]}}}, 
     {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0]}], FaceForm[
      Opacity[0]], DiskBox[{0., 0.}, 0], InsetBox[
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}], Offset[{2, 2}, {0., 0.}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}}, 
    {GrayLevel[0], AbsolutePointSize[5], PointBox[{0., 0.}]}}},
  ImageSize->300,
  PlotRange->{{-1.1, 1.1}, {-1.1, 1.1}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.905417601062002*^9, 3.905417950375193*^9, 
  3.905668389989712*^9, 3.90566848465403*^9, 3.905833344257795*^9, 
  3.905912901639659*^9, 3.918639400496449*^9},
 CellLabel->"Out[9]=",
 CellID->506904390,ExpressionUUID->"731fb9b7-74bf-41e5-9e45-7dc5d6d8e85e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->871630328,ExpressionUUID->"6d8c2a15-a465-4a92-a7dd-140bff28b1fe"],

Cell[CellGroupData[{

Cell[TextData[{
 "Creator",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Contributed By", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this paclet.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "68ebe814-9446-4838-a288-64597017fa01"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Contributed By"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Contributed By", "ContributorInformation", "Creator", "TemplateCellGroup"},
 CellID->57534933,ExpressionUUID->"94da2678-eabb-4858-9cd5-ae3fcc72ae26"],

Cell["Patrick M. Lenggenhager", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.9035965290296993`*^9, 3.903596530851055*^9}},
 CellID->297503276,ExpressionUUID->"583b08d3-88b4-49df-81b8-1087ecb67ed9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source Control Repository",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SourceControlURL", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "If this paclet has a corresponding source control repository (e.g. \
GitHub), you can provide the URL here.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceControlURL"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "db0b0e06-252c-4383-a5f7-805dde12d94f"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SourceControlURL"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Source Control Repository", "SourceControlURL", "TemplateCellGroup"},
 CellID->221376991,ExpressionUUID->"a68191f8-9f56-4ef2-8e5f-153fc2b40511"],

Cell["https://github.com/HyperCells/HyperBloch", "Text",
 TaggingRules->{},
 CellID->779826165,ExpressionUUID->"2596bd73-784a-4436-a775-ac36e8b21149"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "License",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LicensingInformation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Choose a license to specify the terms and conditions regarding how \
your paclet can be used, modified, and distributed. If submitting to the \
Wolfram Resource System, this also includes the terms outlined by the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"publisher agreement\"", "Text", ShowStringCharacters -> 
                False], BaseStyle -> "Hyperlink", ButtonData -> {
                 URL[
                 "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], None}, ButtonNote -> 
               "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], 
              MouseAppearanceTag["LinkHand"]]]], ".\n\nSee the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"style guidelines\"", "Text", ShowStringCharacters -> False],
                BaseStyle -> "Hyperlink", ButtonFunction :> 
               Symbol["DefinitionNotebookClient`ViewStyleGuidelines"][
                "Tag" -> "ChoosingALicense"], Evaluator -> Automatic, Method -> 
               "Queued"], 
              MouseAppearanceTag["LinkHand"]]]], 
           " for additional information about choosing licenses."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLicensingInformation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "dafba8c6-a89f-48a4-89d4-91bc953185b8"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LicensingInformation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"License", "LicensingInformation", "TemplateCellGroup"},
 CellID->279656547,ExpressionUUID->"0c49ce75-a847-4c48-803d-2460a3bdbbd1"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "MIT"}], "\" \"", 
            TemplateBox[{"\"MIT License\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
MIT"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "Apache-2.0"}], "\" \"", 
            TemplateBox[{"\"Apache License 2.0\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
Apache-2.0"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "CC0-1.0"}], "\" \"", 
            
            TemplateBox[{
             "\"Creative Commons Zero v1.0 Universal\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
CC0-1.0"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "None"}], "\" \"", 
            
            TemplateBox[{
             "\"None\"", 
              "\"A license is not required for personal deployments\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "Other"}], "\" \"", 
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}, ""], (
              CurrentValue[
                 EvaluationCell[], {TaggingRules, "RadioButtonValue"}] = 
               "Other"; CurrentValue[
                 EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}] = 
               Replace[#, "" -> Null]; Null)& ], String, ContinuousAction -> 
             True, FieldHint -> "Other License Name or ID", 
             FieldHintStyle -> {FontSize -> 12}]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJylVE1PGzEQBfLBV4QAtVKPq6jXJLTqqSfCBkokCihOe+jN7M4SC6+99djA9tRrf1Nv/\
Sn9JR3vJpvQElUtl5V3bL958+Z5+lsd1mA2l8CaF85mznbYejiB6AbiZAXrZwIp0hhaSDFplP/\
JGtZHTkKyirWRvktqZZhtvx+\
OgzMRgUJgtZ9fv9HBzdM8AyOFumFrP76zw4m1Gb7t9QygdiYC7N5pmRieRlK7uBvptHfJIwl2BJlGY\
bXJe7KExB7hsxp9lhHY72c8msCMQ/\
C6e7CEx7sn8SjTdDz81ny9jNXL0AC34haCUKepVhh8AqOD21fdg+\
CDorhBLpfwHDyJZxgedCgLNbRcLDDcGPG7I30PSLHtMaSZ5BYo4I8UrJvtc62gzd60+\
8EUMBAYKG0DA5+dMBAHiTYBsUWtuAxiyKTOU1AW2+z5pQFr87HW0opshs/\
qHrNi0cCtoSLHnQiQMUXXB7niqYhIuVbojCGoj1w6IB/uHN/SilTUKgQpZyyxNebX10Jdezxk+\
yyDSCQC4qkDhgO24os9cSrydwl5n5qQaafi4/uMREUfXcMaA2/r/0u7O+\
Kx0EfOWq2Km6xxYSdgnor7SDleJeq05JFvYp1JbcPVmaCM3uu5k3L6bTJrCGu2i5uFzqdCWfai4Fe9\
k3OeQkC9LPDLwzvzw344+\
GSLT58k1bQlvkDYqmK7IcWEctphv5Ab62NTqdFhG5dGk11szp6VmYndUJGJ0kIJGjwXWXFt9nTm2Y5\
jYfkVrRonXCLMaxoAef+xnQdS/k7/UWnJdZVRSdcl8k/\
RB5BwJ8uGlnpXe3tDOmt8IZXtFi1Ytc0PWi1dqtCvd4bKgiFL2kIMttlXOXNXCH4gT7P9QXGPUfmR/\
SvDB1PzHwi2RtOxM6apxJrlpOmwevHbWrA9/gKDZjDH", "RadioButtonValue" -> "Other", 
   "SpecifiedLicenseID" -> "CC BY-SA 4.0 International"},
 CellTags->{"LicensingInformation-RadioButtons", "RadioButtonsCell"},
 CellID->42282576,ExpressionUUID->"d629a831-7e64-432a-86e2-8d31737c4a5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the paclet in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "9f1c149e-bc70-4c5e-93d6-73e8dc10c3e7"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->913860664,ExpressionUUID->"a46ccc5e-2ce7-4fbc-a280-a6a7a34cb44d"],

Cell["hyperbolic lattices", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.905414764342338*^9, 3.905414767225943*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->560424104,ExpressionUUID->"7de3ceaa-72a4-4a23-9cb5-0ceec6734fa3"],

Cell["triangle groups", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.905414764342338*^9, 3.905414769693028*^9}},
 CellID->231790826,ExpressionUUID->"827bd36b-5003-4901-acef-684a8639e550"],

Cell["hyperbolic band theory", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.905414764342338*^9, 3.9054147742546444`*^9}},
 CellID->82057034,ExpressionUUID->"4a4450d4-a304-406f-a989-3660eb3c1170"],

Cell["supercell method", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.905414764342338*^9, 3.905414778262293*^9}},
 CellID->13274016,ExpressionUUID->"91a39220-0c62-403d-8b38-6c26fd3c1a76"],

Cell["hyperbolic Bloch Hamiltonian", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.905414764342338*^9, 3.905414784884674*^9}},
 CellID->709876267,ExpressionUUID->"437eccc8-355f-4572-958e-288f449eb354"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose categories that best represent your paclet. These choices \
determine which pages your paclet will appear on when published to the \
repository.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "a4379be8-40b7-43c8-8d6d-11a10998d4e3"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->651640710,ExpressionUUID->"916b9ba2-b9a5-4646-9e69-9c14971de393"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Cloud & Deployment"}], "\" \"", 
           StyleBox[
           "\"Cloud & Deployment\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Data Manipulation & Analysis"}], 
           "\" \"", 
           StyleBox[
           "\"Data Manipulation & Analysis\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "External Interfaces & Connections"}], 
           "\" \"", 
           StyleBox[
           "\"External Interfaces & Connections\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Geographic Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Geographic Data & Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Graphs & Networks", {False, "Graphs & Networks"}], 
           "\" \"", 
           StyleBox[
           "\"Graphs & Networks\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Images"}], "\" \"", 
           StyleBox[
           "\"Images\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
           StyleBox[
           "\"Machine Learning\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           "Scientific and Medical Data & Computation", {
            False, "Scientific and Medical Data & Computation"}], "\" \"", 
           StyleBox[
           "\"Scientific and Medical Data & Computation\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Sound & Video"}], "\" \"", 
           StyleBox[
           "\"Sound & Video\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Symbolic & Numeric Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Symbolic & Numeric Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
           StyleBox[
           "\"Time-Related Computation\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           "Visualization & Graphics", {False, "Visualization & Graphics"}], 
           "\" \"", 
           StyleBox[
           "\"Visualization & Graphics\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Core Language & Structure"}], "\" \"", 
           StyleBox[
           "\"Core Language & Structure\"", FontSize -> 12, Editable -> False,
             StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Engineering Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Engineering Data & Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Financial Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Financial Data & Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Geometry"}], "\" \"", 
           StyleBox[
           "\"Geometry\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Higher Mathematical Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Higher Mathematical Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           False, {False, "Knowledge Representation & Natural Language"}], 
           "\" \"", 
           StyleBox[
           "\"Knowledge Representation & Natural Language\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Notebook Documents & Presentation"}], 
           "\" \"", 
           StyleBox[
           "\"Notebook Documents & Presentation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}], 
           "\" \"", 
           StyleBox[
           "\"Social, Cultural & Linguistic Data\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Strings & Text"}], "\" \"", 
           StyleBox[
           "\"Strings & Text\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "System Operation & Setup"}], "\" \"", 
           StyleBox[
           "\"System Operation & Setup\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "User Interface Construction"}], 
           "\" \"", 
           StyleBox[
           "\"User Interface Construction\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdUMFKAzEQPdi6torgzWNOgof9iCWiLGhbHPE+\
Zqc2NJuEzARZv95xEUSP896b995Mt25hCTIFgtNtlVylhcYeyB1p2J/w4tGzwNVDwXxgc2M2JB+\
pHBluwXmK4vfeGYyDeaLBOwzmDgVVZ9OoVig+Rbh+9Vwx+\
M95VHJ28441uRcamVddlTQq7Vo425WUqcgEa4tC76l4UmWzzd/bf7WNTaGO/\
8DLPgqVXOgnftXFCeobk152biursI9ajpf3GJh+wbnKYpOiYhfPxKkWRy9T1s/s0AWSLxMKadM="},
 CellTags->{"Categories", "Categories-Checkboxes", "CheckboxCell"},
 CellID->154720833,ExpressionUUID->"06ddfb4a-1940-49c5-b8a5-7e275c1f190d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "5348eb23-939c-4d45-8260-5a9ed660915a"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->280622473,ExpressionUUID->"e23e8dd8-9c80-4a44-b88e-62ddde70d184"],

Cell["Resource Name (resources from any Wolfram repository)", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->694609509,ExpressionUUID->"4b087518-e451-428c-8b6f-b9d46aff6afd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Original Source References and Attributions",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
paclet and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "7cd0736e-97d6-484b-b69a-9b7b8707573a"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Original Source References and Attributions", "Source/Reference Citation", 
   "TemplateCellGroup"},
 CellID->687116677,ExpressionUUID->"67d40446-0fc6-4e15-9260-3bd9f36257ad"],

Cell[TextData[{
 "P. M. Lenggenhager, J. Maciejko, and T. Bzdu\[SHacek]ek, ",
 StyleBox["Non-Abelian hyperbolic band theory from supercells",
  FontSlant->"Italic"],
 ", ",
 ButtonBox["Phys. Rev. Lett. 131, 226401 (2023)",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://doi.org/10.1103/PhysRevLett.131.226401"], None},
  ButtonNote->"https://doi.org/10.1103/PhysRevLett.131.226401"]
}], "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.905415630895503*^9, 3.9054156357605863`*^9}, {
  3.905415819257101*^9, 3.905415819257101*^9}, {3.918639421736479*^9, 
  3.91863943415924*^9}, {3.91863946987696*^9, 3.918639475612315*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->702019342,ExpressionUUID->"5585671b-46e3-4411-8210-75d315719526"],

Cell[TextData[{
 "P. M. Lenggenhager, ",
 StyleBox["Emerging avenues in band theory: multigap topology and hyperbolic \
lattices",
  FontSlant->"Italic"],
 ", ",
 ButtonBox["PhD thesis, ETH Z\[UDoubleDot]rich (2023)",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://doi.org/10.3929/ethz-b-000645370"], None},
  ButtonNote->"https://doi.org/10.3929/ethz-b-000645370"]
}], "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.905415630895503*^9, 3.9054156361885767`*^9}, {
  3.918639452328723*^9, 3.918639452329529*^9}},
 CellID->497217475,ExpressionUUID->"61404a6a-7660-4def-9669-9d4324e21de5"],

Cell[TextData[{
 "This paclet ships with L2Primitives.m by Srdjan Vukmirovic (",
 ButtonBox["https://library.wolfram.com/infocenter/MathSource/4260",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://library.wolfram.com/infocenter/MathSource/4260"], None},
  ButtonNote->"https://library.wolfram.com/infocenter/MathSource/4260"],
 ")"
}], "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.905415652829563*^9, 3.9054156620940647`*^9}, {
  3.905415714283566*^9, 3.905415744984009*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->253882475,ExpressionUUID->"07607153-a4ac-43a4-a80e-4339b4ea41c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "22dc1b08-050f-49c7-88b0-08e890230b8b"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->179193585,ExpressionUUID->"a2ca6b08-1fe2-4b2a-8fe9-8a526aec3f60"],

Cell[TextData[{
 "P. M. Lenggenhager, J. Maciejko, and T. Bzdu\[SHacek]ek, H",
 StyleBox["yperCells: A GAP package for constructing primitive cells and \
supercells of hyperbolic lattices",
  FontSlant->"Italic"],
 ", ",
 ButtonBox["https://github.com/HyperCells/HyperCells",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/HyperCells/HyperCells"], None},
  ButtonNote->"https://github.com/HyperCells/HyperCells"],
 " (2023)"
}], "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.905415767859997*^9, 3.905415799127454*^9}, {
  3.940560615339405*^9, 3.940560622128126*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->938599834,ExpressionUUID->"eccf122d-19d2-4cd1-a2f3-e0d7bcc8db54"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your paclet to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d909f244-5a42-4c4d-923c-7baa693525d5"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->31633819,ExpressionUUID->"56e85f68-3a7e-4268-b9ee-cffe74c3ba65"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8278f331-8bf8-4769-90d0-40400cb50d00"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->267876551,ExpressionUUID->"e892db6e-db67-4d1b-935b-5453a1177629"],

Cell["12.1+", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.9061068387485785`*^9, 3.906106839240323*^9}, {
   3.90610874882765*^9, 3.906108749191041*^9}, {3.906628472511512*^9, 
   3.906628477578879*^9}, {3.907083103091845*^9, 3.907083103224874*^9}, 
   3.91007248660162*^9, {3.918561670314377*^9, 3.918561670654557*^9}},
 CellID->53418160,ExpressionUUID->"a10f381c-fb56-4812-9790-f1f24bb2da6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your paclet is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "6b72eb27-1b7c-4e1d-8fee-213a8332bc57"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->54346056,ExpressionUUID->"331177fd-8b6e-4ddf-b4fb-634d72329b2f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Windows", {False, "Windows"}], "\" \"", 
           StyleBox[
           "\"Windows\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", 
           StyleBox[
           "\"Mac\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Unix", {False, "Unix"}], "\" \"", 
           StyleBox[
           "\"Linux\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFUNFOwzAMlGi7MUB8Ab/Qj6gqIVUadJpB8JplHkSkThQ7Yvl73IeWN/t8d/\
a5u2uhASkeYTNmiVla2PbfaH/\
wfKm43jsW2H44Oodfhs2LsSN8Qv1O7qrCQXDihXa54fqY1WilL8U6qVS/\
mKxgs3eUr4vn7SGFiEkKPPVhikbcyXknZVRQG/\
qCwrpVrxyjuEDMuy5LmHRm59ODzxNxX7XwOJBgignFzETYdVQgnxg14n2fWUUDaWBuno1n/AfnUFy/\
BlLs4YgccrL4VqK+6GCsR/kDqQVqcg=="},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->499696550,ExpressionUUID->"7977d4b9-0607-42ec-aa7a-bb30e9c9fb40"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your paclet is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "6de3f9b7-0e43-4305-96d8-f8707a49f8a1"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->701114648,ExpressionUUID->"55bb4f41-a390-4ace-bb12-1cb0eb3535fe"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Session", {False, "Session"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"Session\"", "\"Local or cloud interactive session\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["WebEvaluation", {False, "WebEvaluation"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"WebEvaluation\"", 
              "\"Cloud evaluation initiated by an HTTP request\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Script", {False, "Script"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["WebAPI", {False, "WebAPI"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"WebAPI\"", "\"API called through an HTTP request\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdUdtugzAMlbYWym4fsXc+gqJOYppWVE/aMwRXRA1JFDuV+PsFtYR2Tz4+\
jo99nOIphzXwqBCSvWfrOYe07FGcsDumtPqSxJACEkmj4fUX2925Ub7hKd1sGxb9p2khAeGkZUjCg6\
KuIAPfntBpVAGKHjuvsAuTKsaBZt3jA60OobDozyBWou4lRv5Of4ax+m/N+\
3TRvu56jTfa88I3MFYXzxHlsKmdseh4hPfSDDbMaaWSPC5Td/\
osndED6unAeztxRFnh2QzhgZiubpQfNJWPObxVmtFZh3xxkBV6DDYJQ/Nz6Sk0VTr8Fa0/\
GkW4kNN5afVtdOBeDkjGO4E/ow1u60Yo5D9Skaw8"},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->563753624,ExpressionUUID->"82bcfdcd-17c1-4340-9fc2-68defbbf34d0"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your paclet is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "54805b99-dcf2-45de-a834-d454e1fc22f7"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->677592290,ExpressionUUID->"dd6c1df6-928a-47aa-b6d1-fcbebb75aa84"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[True, {False, True}], "\" \"", 
           StyleBox[
           "\"Supported in cloud\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFj0FqwzAQRXGxmzQNWWSXXS7gQ7iCgKEkIeMLKPKEisoaoZlZ+\
PaVoSHbz3vMm27TQgMyB4T3i0pSaWFlftD94viouP72LFwPWbFwveDEz/\
XxxvVNi7cHTYmy4Hj08egC6fg01tdMCbPMcDA0JSv+\
7oOX2SzQv1buXZJ4iswfnQpNhXJLBAWdIpuqhV0fBXPKKHYBYfVFFNDGFj6NclH6WMK5OdnA+\
BqXWq7PFMu2vSGTZofDnMqrV+sCyh/5oliM"},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->402801867,ExpressionUUID->"a9e86907-3e3a-4725-b5f5-1aaa51cd5ee7"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your paclet."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "fe4156fa-c9d2-4a28-9fb1-c40d328c37cc"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->666988317,ExpressionUUID->"79e43ad5-ea6c-4d9c-b7c8-b2bd3f58c469"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Notebooks"}], "\" \"", 
           StyleBox[
           "\"Notebooks\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
           StyleBox[
           "\"Parallel Kernels\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
           StyleBox[
           "\"Cloud Access\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxlkMFqwzAMhsearM1Wxi679wXyEMFQCC1tqPcCjqswU8cylnTw289h0G3spv/\
Tp8Ov7rnVtebsQT+dhaNwq9fqE+wNrtMDVUdHhdQ9w0zT6jtPj1RdpFw0J2QYEW/\
0a7xv3waTjPfgdwdIATz9J3d3qzzKdddZC0R/U6s3Q8IIibN+\
VzhHw2503nHeg2FJUIz1ObLDQNR0wjgXwy410MscSK1a/doHhhQTsFlE3XQhaxkJSrkXJVSO+\
lDKU703nuAHLr2pOmEobHsBQkkWPnIs7xqM9cBfyEVv1Q=="},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->274649004,ExpressionUUID->"8c413753-bf75-44f0-a6ec-0797796306bf"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Disclosures",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Disclosures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Contributors to the Wolfram Language Paclet Repository can include \
a list of disclosures with their paclet. These disclosures tell users how to \
expect the paclet to interact with their environment.\n\nDisclosures should \
be selected if your paclet interacts with the environment in ways that are \
not otherwise obvious to the end user. For example, if your paclet needs to \
write information to local files somewhere to store persistent settings, you \
should choose the \"Local files\" disclosure so that users are not surprised \
to find files that they didn't expect.\n\nFor cases where the interaction is \
inherently part of the paclet behavior (and clearly documented as such), the \
disclosure is unnecessary. For example, an exporter function that's clearly \
meant to write files in a place specified by the user would not be necessary \
to disclose.\n\nFor each disclosure item, additional details can be added by \
starting a new cell under the cell containing the checkbox. Use this space to \
clarify how your paclet interacts with the environment for the corresponding \
item. For example:\n\n", 
           Cell[
            BoxData[
             FrameBox[
              StyleBox[
              "\"MyPublisherID/MyPaclet utilizes the local file system to \
cache data by writing files in the directory \
$UserBaseDirectory/ApplicationData/MyPublisherID/MyPaclet/Cache\"", "Text", 
               "DisclosureDetails", StripOnInput -> False, LineIndent -> 0], 
              Background -> GrayLevel[0.9], FrameStyle -> GrayLevel[0.8], 
              ImageSize -> {Full, Automatic}, StripOnInput -> False]]]}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDisclosures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "40ce300c-397b-485d-bc6b-8b276c1124c6"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Disclosures"},
 DefaultNewCellStyle->{"Text", "DisclosureDetails"},
 CellTags->{"Disclosures", "TemplateCellGroup"},
 CellID->376414000,ExpressionUUID->"c4cb01e3-421a-43e3-badb-50e5924b1a22"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "LocalFiles"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Local files\"", 
              TemplateBox[{"DisclosuresLocalFiles", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following during loading or normal usage:\n\[FilledSmallSquare] Creates, \
deletes or modifies local files\n\[FilledSmallSquare] Imports data from local \
files\nFile operations related to normal paclet installation and loading are \
excepted.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresLocalFiles"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQhpC0+VN7AQ6cLMSR8ABcqmbbwkotreK8gLs7m1j1elb+\
abpceQhehkeAl0AcEc/A2Mlu0qpI+GJ7PD/fzHzj4+GE97irFfC9S+\
8q7yZ8P1lCdgN58cR2z6UlSS91UNri6fpedGx35hXQ/dkMV+EaxHx0jplQrJAKgm5/\
JlZTvKNzx47mUFZKOCBB0d3ovziRNlNovQEbTc+iZc92E1CKPOyT9olwotiz/TMjymjdWT/\
zL51kiWiBuaW0DCsnUTNZsBq9YZXIFDiWSwOZUzXLESwTumZYkD6wApXCldQLlnsTNoUiDzsaptGUl\
Ia3YgHvhz+/\
fmOJAYJu37IcyCt5Iq0Sc1lIOqtt0lE5LSs0zrKcgLPCYHlPI6RIYMGIgNcyA6EqOXPYxN1Al9o6oV\
RUI+R5i1AYYHCXQUVm7/j4Ag2kusA53LWNscOpyG4WBr3OqYyDD0bU53ALyhRx/\
TlqNcexrhfCLChg8nzrIcojMe57+PE9rN9bDwezEIaQzQift0mvfRmkJZWQy8/QUIRc7XEqBuQbP7+\
O7ODYOywpz+wfyQxOQtXFNR27c+OhfegHHszFoiUmf8Op3VSwxs/jBGvsR8F+k3qLcLMn02Tang+\
TQwox/ogqT5B4TByg2Tg4vRXKxwZFQr5KlMxuiFqBHNQkSQBMGd/\
561QrqaHBdVmBBjP1zqFuJoMPtxAnvH9lAktczUc7SdBsXkai22aI/\
isZ6oRegpHEmJ1jm17vgXBd3NNcroveOxPKwmPtePDS9oO/3MW8m9Z+\
gsqX2u50fcIPUu3AVIa8xmINjnXN/bUF+nlGibekmGr6mTbxtsLwKdnuJ9QkG8/A0uRnMK8r+\
suu4hT9BTvOvf8="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-LocalFiles"},
 CellID->399849895,ExpressionUUID->"0bd0d035-4616-43e6-8597-c479da19f635"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "WolframAccount"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Wolfram account\"", 
              TemplateBox[{"DisclosuresWolframAccount", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Requires, uses, or records any \
information related to user\[CloseCurlyQuote]s Wolfram ID\n\
\[FilledSmallSquare] Interacts with the user\[CloseCurlyQuote]s Cloud account \
or Wolfram account\n\[FilledSmallSquare] Creates, deletes or modifies the \
user\[CloseCurlyQuote]s cloud objects\n\[FilledSmallSquare] Creates or \
executes cloud deployed scheduled tasks\n\[FilledSmallSquare] Uses cloud \
credits, service credits or Wolfram credits\n\[FilledSmallSquare] Makes \
WolframAlpha calls", "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWolframAccount"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQBpq0SRO1Fy70ZHHiQF6AS5VsWojU0ioO4ux6ZxMTZ7147KbLibdAnHgRHg\
FeouKIeAbGTnabRlRiD4k9nvnm75vp7/d4k7tSA9+98K7wrsf3khnIOaTZI2ycKSRJc+\
Rggdnj1T17go2x10D3nbFZhmsQ88P3RmdWLJiQ0vjc0XtrLJYDcwNISp0JLAotHJAga6xtng0VSm3Q\
W8C1eX9t3cRGAloTyh5ZDIUT2S62TkkjIjxZPfNvO8nMGATmZgqZKZwyOVMZK423rBBSg2OpsiCdLl\
lqAJnIS2Yy0geWGa3NUuXTV/u3X76zMXz0pIovmcfwaywjQ2PTlZHKM2MXInqwEFJJmTNB195+/\
oqsyn80jGij3IEV0iFbKjeL/mrVRBufVoUKfrZqFwESC+SD4kiBsqDISW9hUpUpOt+\
DkxHOXH2gNHHTNpjADUgfziutFAptSgod5QxS6iMlIXC+\
MnuHtZ60kCpH3snJtZJQCTajXYui6bmYQ12Dvi5mgkmhNfLuubEwotpN4KYmD+\
4PhJxPLSWbUovbr60oz+AatM3i9+e41uzGnp8LO1U5Jk/vEKI8kvc+\
ws8f4ft9h3AwDm6ozWORKo9Js35pjxZiClx9gorGBLXLKXBI1zi/jrHd986ExssHkmkPQ4fEFR0bE+\
uhfmgFjk7EtB4e/oJTj4hBFc7DA1BhdALGOv06yvV/\
MkgG9fkwOSQ33TdGp4mhWSPO0AwfnFwL7SNr48AcJVrJOVE/\
kMnCJqv581GuVQ5VbBcF5GAH3jmTV9PLD+6H2eOtS2sKsK7knY1kaI9cxGHEatj/\
KyHqSD4Dq2i2No51is0t4arIJ0TCWPzmqdAI/\
2rL1kvdF360GfN2anuJ0X6R4wYDevwgDnZhCTkWrd3PS+\
6vEMigk3gkxVFOm3Tt804Ylig23pqcZN0xIG0oCZOyoN17GRfVX7KLBoc="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-WolframAccount"},
 CellID->288928501,ExpressionUUID->"03dfcb0b-70be-4ead-a1fe-2a419e0034d4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "ExternalServices"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"External services\"", 
              TemplateBox[{"DisclosuresExternalServices", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Makes requests to external services \
(http, ftp, ssh, etc)\n\[FilledSmallSquare] Creates or uses service \
connection\n\[FilledSmallSquare] Send emails", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresExternalServices"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVE1uEzEUpiVpkyZKQWIFLCxWgJoLsKkaJ4VIDa3iXMCdeZNY8diDn910uAh3QRwBLo\
FYIs7Am0lmGsKP8GLGfj/f+/vss6O+aAqfaxAHl8FnwffFIV9AtIQ4uYeNC4UkaY49pJjsrc/\
JPjamQQOd70/\
tqjgWYvFwdOvBGakZgrtRERQeralcDewt7fexM4M009IDCZLGxuvJUGGkLQYHWAGIyr+JDQ5aE84h+\
Qyll8kBts6dTEuM/\
bVafNzjC2sRmF8oZDbzyhqmEpbb4FgmIw2excpB5HXOYgvIpMmZTcgeWGK1titl5q+\
Ovn74xCZySXoH7wKgR+\
Ytg92y2POF99kJS4oP4uKEgY9elN7cAdVHOTgWkP4bFxZZYyg85VWaCTAxg1QqjaI7sQ7GJrEzClT1\
Fo8GMlrOnQ0mpurbr53ML+AGtEvK9eO0tuyW7ZhIN1cG+aM7hFJezvZXhC+fi/\
X9DqE3LcJQB6YyVgF5s9a0x6mcg1DvoZoyQR2ISGqINzjfTrF9FrxNpVfRX4ppD4FGIK9p25i5ALWi\
VYxvJuc1t8RLsW5ThfMvdlQonQJl04A6z82fD/ig3h/\
zYwrUfWN1zC1RETwQyXujG6mDLKKWbHrMtYqWxAvHUsqCKUrDpaVePBsbrQxU2V1mYMANgvfWVOQWD\
3YT7YvWlbMZOJ+LzlZBdNUuS65idRv+\
qySailmAUx7irW1dZHNHuG70KFbrATTPpUb402h2NPVsxNPtnH8v7pBbHVKDWzzoi97YkF3mCLtsXP\
vM5CJcI9Bz0uEByXBs6LnZRL0TFi8NNt5aQ7LuFJCucASzPKMH6qq8yT8BVliw1g=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-ExternalServices"},
 CellID->78241186,ExpressionUUID->"5304713b-b0e6-4983-9ad8-eabd65d1eaa6"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "WLSystemConfiguration"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Wolfram Language system configuration\"", 
              TemplateBox[{"DisclosuresWLSystemConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Creates persistent local scheduled tasks\
\n\[FilledSmallSquare] Modifies WL system or environment settings\n\
\[FilledSmallSquare] Modifies ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "$Path", "SymbolsRefLink", ShowStringCharacters -> True, 
                    FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/$Path", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], ", ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "Directory", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Directory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    ", or similar\n\[FilledSmallSquare] Installs additional \
paclets or dependencies\n\[FilledSmallSquare] Creates or imports non-public ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ResourceObject", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ResourceObject", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    " content\n\[FilledSmallSquare] Makes FrontEnd \
modifications\n\[FilledSmallSquare] Internal handlers"}], "MoreInfoText"], 
                   Background -> GrayLevel[0.95], FrameMargins -> 20, 
                   FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJztVs1uI0UQJlk7sZPIQShIwKlBgDistbc97AErnsS7lhxiuSMixGHpzNTYjXu6R109yc\
4+BhceAIkLB16AE2d4AK6IGz/PQHXbM5lEu4JDDntYX9zTXfNV1ffVVNfhTp+3uSsV8K3TwuWF6/\
PtaAHxEpL0DWxNJNJOe+wgw3Rj9ZxuYmtWKKDnezNz5R/9Nv/\
o3KjUioxNhJ4XYg4MS6QXWWx0KueFFU7SagM7M3E1NM8A6dXdM8hyJRzQRtpaI7EjibEyWFjA8wkPK\
NENkDa2IlCKwLbpxSPhRLqFnRF5D0Cb9XHnDJ65cL69Bv9xI1oYg8DcQiIzucdjMmWlKSzLRazAsUR\
aiJ0qWWIAmdAlMynZA0uNUuZK6vmjnd+//\
YlFFih0ZDlYJGzQjikTC8UwXkBCHCXMCVxiMD4xiUwlWZ9PKmaMZaAvpTU68+\
8iOEfYt8w977eTvYedoNoq2a0zMV/\
x1x0Wzhm9eqhNePvDqXAL3uNldmEUziCdSL2shMQDvjBX3FnyHS2EFbGjfLB1ZguobXZGRruRyKQq+\
T4nrmJgXGhkU2tqo+5QIASvPtijUpN9TMHujY6nVl4SV1+\
NUzraiwprKePPhSqAd09MgXB6CbaupdaN+Lred2SUsT7x2eNhWNvnD3/49PzLPwf2E/H930+/+\
G1g3/mYt7/75udBVaq3cHZW7HgG+\
ZsrqR9ZSB8EdmqrHpWal3IqksSr0R4JhT6ht0Kch3kOxJGOgVjnHe/gidDJnZHJN+/\
fheTdo1DDxpavZW/IftCQvWbolZH+\
6X3fElDSqbChC4w1OqEUNSGKyLcqai6rFNCbJpCDTkDH1ChudCQ6k1luLJlpo/\
t5caFkfBd11ZsBhqhPL74m9l4XV6O43m0U102aXpkKG/\
jb2AewumPEkmplRPePO9YJy8KVE4crFtflRw58zS0oCkW++N6JsTDWqfEXa4MFES/\
n1hQU6wZ2H1tRTuASlE3D759BbbkXLukTYedSY3TQiNrvVzo3EH79xf/+\
ukbozbwbYmAmEllg1L7WdJzR2MHlc6hEJ6gtThcyJGucPwbYPSycySjJ+CXJdI+AVBQXtLzJbMd/\
OyRMPQrxB5zEJbYqnP8cXCqoXQ+\
1ZqEOdv0fDaNhvd6P9n1xPzEqiQyNSuCABrPe8SWVeYD0QPy9iD7vJY0nlkS0wCTFYrNwzj8YayU1V\
CGeUscAu6raavjib78w2j7vUM3QcONKvttIjWbE0zA3YTWy/a+8SB+\
9ACsdJI1lnWn71uaK8mNqe0GK9ZfyApFundQq8febMb8kw2367otMY6Ms+\
rwX6j635CBQ2D3UJS8uaD7r892oQDIcaxqW166vN/2cjK3PjKa9vaoFnJU5jdfT0Bv+BeV+FzU="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-WLSystemConfiguration"},
 CellID->461583526,ExpressionUUID->"3b3dec2d-a642-4ae8-bd1e-ff3536bcc21b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "WLSystemSymbols"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Wolfram Language built-in symbols\"", 
              TemplateBox[{"DisclosuresWLSystemSymbols", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly modifies \
definitions of built-in symbols such as those in System` or other internal \
contexts.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemSymbols"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1y0zAQpiW/\
TSa9cCoXwY1DeIVO4v6QmZR0osz0imKvEk1lyaOV2pon4OHgLTgyPANrJ3ZCCgy+\
eLUrffvzfdLoZMib3OcaeGsWfBb8kLejNcT3kMgX2JgqJE9z4iFFebRZy2NszIMGWr+\
c28diWbj5mzurpRMpmwqzCmIFbBmU9kNlGObp0uoCoTMXj2P7BEjHegtIMy08kEM2tihnFwpjbTE4w\
Lspz5FS8+3xJjYi0Jpg2nTkQnghW9i5opwlxPEmzL8cRWtrEZhfK2Q288oapiTLbXAsE7EGzxLlIPY\
6Z6lNlFSALAGpjCr20hn5rHaGIV4zgQRaQFNgU9snZh2zfg2OfB6cEZrFlqwnj+95/\
8Y6mBhpF7SuBocnYxHfr5wNJqFeutdO5FN4AO1k+f08r3f2y+ZuhFspg9GrHULpL4n7HeHb1+\
L7sUMYzIs0yqzmIlEBo2Yd6U5SIomrz1BRSFAtHgsNyRbn+zl2R8HbVHgV/\
6WZ7gXQQMWSzMbCBagDnYKMhVjVwuHvOM2cBlzh/IPqCqRXgGz7r8vc/qNxNK7t0+iU8vQ/\
WJ1ElmQFHkjAg8sHoYMokpbSOIu0iu+ZJM5SKoIoIzMt4/\
ztxGhloCpuloEBNw7eW1MJlZ8e1DnknVtnM3A+5729dugWzUrdYSXs/+\
qIODGkJOUh2TPrHpsHzs2YLxO1GX/zSmiEPxFzEKmZ4a/\
3a37WWzuyOqQG90Qw5INJIfPMEXQ5tu7I5DwsEeih6EUBaePE0EOyTbpzFm8INj5aQ77+\
HJBuYwyLPKOn57a8lL8AfK6hNQ=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-WLSystemSymbols"},
 CellID->537097839,ExpressionUUID->"c9c11e4b-2cc3-44c2-94a4-b067b764ed48"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "PacletDependencies"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Paclet dependencies\"", 
              TemplateBox[{"DisclosuresPacletDependencies", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly installs or \
updates any additional paclets. Paclets that are included with the Wolfram \
system do not require a disclosure.", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresPacletDependencies"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQpiVpkiZqJeCEBLI4k75ClWxaiNSSKo7E2V3PJla89uKxmy7vw9vAW3BEPA\
Ozm91NKAWxlx3PeL75+\
zyj4yFvc59r4Eez4LPgh7wTrSBeg0yeYOtKIWnaUw8pJgfbc3KIrXnQQOenc7spjoWaP78RsQbPJGR\
gJJhYQeHTnYvN2N6TfIj9BaSZFh5IkbQqv1cThbG2GBzgFmKyj9DGVgRaE1KHvCbCi+\
QIu5dOpCXK4dbMvxxEK2sRmF8pZDbzyhqmEpbb4FhWZaYcxF7nTBn0Qmu651jIJCWETJicCSlV4Sh0\
5YJnbJsSEq7wTDgg51gHCZJtlF+\
RGthHqxPKh2GO1CgmLTPWMwefAgVkguLWBZ7xwbV1MDWJXcB900o8Hot4vXQ2GEmF9t45kV/\
BHWiXlN/P8+bmoKz8WrglFRG92CGU+nKUvyN8+1p8P3YIJ/\
MijDLLuZAqYNRuLL1pKpbA1Weoh0pQRzwWGmSF8/\
0ce6PgbSq8iv9STG8C1DFxS2Jr4QI0hm4xqYVYNlTibzkNhBpe4/\
ybCjVOv8CpWtBkWv2jcTRu5NPolEIN3lstI0vMAw/\
E6pOLO6GDKOKW1HkZaRWvWUJkSG05YBLT0s7fTI1WBur8ZpQNuHHw3pqay/zZn6kOeffG2Qycz3l/\
ryh6XbOSmljT/7+KosmYFTjlQe6JTZntB8ptsy+Iy+\
UQ2pdCIzw2ngeWZj789X7Oj5XXiawOqcE9Ngz5ydR4cJkj9LJ5vZHJebhFoB3SjwLSxamhHVPF3SmL\
9YKtD9aQbjAHpDcbwyLPaCttg/8CfOuqyQ=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-PacletDependencies"},
 CellID->96664487,ExpressionUUID->"ef3cceca-b99e-4df2-b09a-7da0149d6125"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "OSConfiguration"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"OS configuration\"", 
              TemplateBox[{"DisclosuresOSConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Modifies OS settings\n\
\[FilledSmallSquare] Makes any use of ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "SystemCredential", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/SystemCredential", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]]}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresOSConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJytVb1uG0cQjmxSIiWCMgIXgd0cXARJQaRL4SKEeBJtAlIocIgEQYpkdTdHLri3e9jZk3\
x+DDd+AANu8gqpXNsP4DZw559nyOwd70QxP0gRNtydmZ355pufO9ofQBtcoRB2p7nLcjeAvXCJ0Qrj\
5DNqnUpiSXviMKVkp7ont6g1yxXy/\
fbMXPmrF8OdKQSR0Ylc5FY4yacd6szE1cg8QWKrgzmmmRIOWZC01o/\
uHUuKlKHcIk0hvPG8Ta0QlWI3e/\
zkWDiR7FJnbEVaurjVqDtzfOJKfY3FhUtjCAO3lBSYzLsLZBIUJrdBJiKFLoilxcipIogNUiB0EZiE\
7TFIjFLmSurFw/0/nv8enJlYJpJNOD1C51hBlUKs1g9zjsSPPUHbgG9Tp6S3Arw7F4sq++\
4od87o6tKYwB0oiLkOLcaonRQK+lCkF0bRDJNTqVc1+\
XQXluYKnGU44VJYETm0RK25zbGx2R8b7cYilaqAQ+DcIwxAaArOrWmMuiNBWALwuI8LzfYR4+\
6NT86tvOR6/TpJWNULc2sZ1A9C5QjdM8NZTy/RNpy3buDr+tihUcZ6DmaPRuXZPv32t+9+/\
Pn90H4lXn785ae3Q/vFl9B+8ezVsG6vLT/7FVGeTLhfle6hxeSbbaKaB31uIseycxHHvlbtsVDkc/\
u8hHyUZch06Qi5FtDxsR4LHf9vvELvzFic6MT4ptxIQ0SrhTU5h9qh7iMrilO8RGWT8vdp2Fj2ygY/\
E3YhNYV3N4J6eV2oDQ9vXvvfh2sP/ZkPwwnMRCxzCtvXRZmkYoEgn2JdNXa1C5FQGK/\
9vBtS9yh3JuUZjP4hme4xchnEBR9vEtPx7c+8NrsCvgYeMp6+2s+/jHvt5MA7WeffwFz/\
h6Nw1JwPw0Pfl4+\
NikPDqwUd8s7qn1xyh5YuvSO4FyoZrXiqbZAyiEAyCpuWengw0UpqrMFNM9Roq4arlxUcbuEcQIfLn\
KF1BRxspMOLc1ouGqqX23/KiGuil2ilw3jj2OTY3hJWNJ/EsqJ/3dx/U5gtTVMZuL+J+S+\
57fGY5qmmjSYYQH/\
CE2Uzy65L2rpHuoD8grfhAA7CnNhwovnbsQ56LfSfDWp9bzTLejOkclTmRcZfm/NylP8EK/RQTg==\
"},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-OSConfiguration"},
 CellID->16374571,ExpressionUUID->"5c745af5-a790-48fb-9a93-264b159498a8"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "LocalSystemInteractions"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Local system interactions\"", 
              TemplateBox[{"DisclosuresLocalSystemInteractions", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Executes Shell or RUN commands\n\
\[FilledSmallSquare] Uses external evaluators via ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ExternalEvaluate", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ExternalEvaluate", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    "\n\[FilledSmallSquare] Interacts with external libraries\
\n\[FilledSmallSquare] Reads or writes to streams or sockets\n\
\[FilledSmallSquare] Launches parallel kernels, subkernels or GPUs"}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresLocalSystemInteractions"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJytVU1vKzUUfX1N2qStUoSexNfGekiIBRViw+\
ItiJpp0hcpfY3GKQixAGfmTmLFY498PUnnLVmyZMMPQGLDX2DFGn4AW8SOj9/\
A9UwyTSOKWJBNPPb18bnnHl+fH53xJneFAn5wnbssd2f8MJhDtIA4eYSNkUSaaQ4dpJjsVd/\
JY2yEuQL63g/Nyn/\
6af7GyERCMSyQopnUDqyInDTa72yFYtUzt4AUfjyBNFPCAU0kjfXupxcSI2Uwt4AlEC9xhtswTWwEo\
BTBHdLWC+FEcoCtgRVpCfW4Xm5N4NaV6/tr+K/\
2grkxCMzNJTKTeUAmE1aY3LJMRAoci6WFyKmCxQaQCV0wk1A8sMQoZVZSz54d/frND6x/\
C1HuKITP6ThmLAtvXrDIpKnQMZYhN0jLxAGsJklgKVQunLHIllIwL+\
RuHvvYKstQ5XEwEbNKnHYvd87o6qMO4a/019j9Chp4hxfp1CgMIRlJvdgUCZ/\
wuVlxZ4l9MBdeSrCIjYnNoY45GhjtBiKVquCnnBSJgHGhkY2tqYPaPYFQEvC8LwpN8RHxPhn0x1Yui\
cMXw4SWToLcWtDuYyIGvH1lcoTrJdjaJ417/Nr+7MAoY70G4WWvHNuXH37/0Sef/d6174rv/vz801+\
69vV3ePPbr3/sbmy4g3NUCeXF5G9VBX1mIXl/\
V6h6Qyegg4nnWMQxiYPNgVDoc3u1pHyeZUBy6QioFrzlz3pO5f3fdOVf7pVO2Rgc2Uq6+\
Z1nlJxaYSVUfgpBxOidtrLSO88Zhs6CSMtJNHRfXRU5ErmO5hSSESmlQLEFAYLC9xjm0/\
XYb7oc3yA/uTIWhjox/sJsaSmixcyanPLdw/alFcUIlqBsUv7+6taRJ+XluxJ2JjUGT7Yy9/\
Mbt2wh/PyT//1xh9AJ/TGkYihimWPQvHPGMBUz4PIlbKxDUAecWgPEa5zfutg+\
z51JhZPRA8m0L4C8IKY0vF+dlr+DVNy6sfEPOJSdZoPzH1rSBuzYg611qOmu/\
4Ne0KvHp8GpvyTPjYoDQ20QyJKPsLO2J2F6IP5moGS0oMZjWUpkqJvSMC3X+\
dOhVlLDhuR1Bhps5f5NY+WvPcD3jLfIexlYV/DjrfSo619nVUaN+13+XzOjGuk5eEvGW8M61+\
bOZCV7P5ZVOdY37h8KtbNSV4q/\
vc35wRwPqYfkqcYtc5zxThmTWTqilLF9rgueTxHogTsOcqTAoaYHcH343aR/+\
7DxwmiaOwkBy3s8KTJ6Msdln/kb536d6A=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-LocalSystemInteractions"},
 CellID->101001972,ExpressionUUID->"a645ee4d-f099-4198-8667-41627bb04b88"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Other"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Other\"", 
              TemplateBox[{"DisclosuresOther", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Add additional text as needed in a new cell below to \
document any additional disclosures that are not listed above.", 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresOther"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVN1u0zAUhpH0Z606kLjiBov78gpTm24j0kanuC/gxietVceO/NMuPCO8BZeIZ+\
AkTdIyQMI3OT4/3/n7nNnllIbUlRJob+ld4d2U9qMtpDvg2Qsb3AuLmjB2kNvs5fGeXdgg8RLw/\
irRh+paqWm4dFswqB0k7DDXT2DRNFpBXkjmABVZ0Hi+\
XgibSm29AXsMCm0QgZQY3EfHBXMs69nBrWF5HXhxNFM745wwzoUTWjFJHDw5wixRABw4EYowlA8kRW\
eyBqkPxGnCdepzUOipyvNofqqCuC1DuwGitCMSi0Q4ttZ7+EjHD9pArDK9wmxt8/\
ZyztLdxmivOFY9vDOsvIc9SJPV5+\
d15zmu23hgZiOUjd6eEGp9PfzfEb59rc6PE8IkqdIItUkYF95GYWcZxjnbABVfoF0DQvVoyiTwBuf7\
tR3OvNM5cyL9RzPDBUhwbI1isDIeOsOgGvuKbbrl0/cU0mp+Lc4fq2xDR1Vo03VXXPON5tG8k6+\
iK0Qff9KSRxrJAg6QepObPZOeVanq1b+\
LpEh3JNOG5Jgad41iXtvph1hJoaAtaVmAAjP3zmnV0q9h55QOHo0uwLiSjs5KR9YviwrLtiT9rz5w/\
gpRBbLlTOw6C58pjyO9QQLWow5vmbTwtyU8s3RboG/Oa2466kda+\
lzZszVP6SRWDkxhELAe0XCmSurXFvA5jyJv0TFW+NybVCdl9dJt8Fkr1I0TsNqbFFZlgT+\
IR5Zigb8A9Fp9HQ=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-Other"},
 CellID->345873477,ExpressionUUID->"db9eb38a-6d9c-4852-bd9c-30dffa007570"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the paclet documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "5c6480a2-ba97-4d71-b187-57581b745523"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->951557313,ExpressionUUID->"1027339b-a3ce-49dc-adb6-52130e34c01e"],

Cell["Additional information about limitations, issues, etc.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->908162033,ExpressionUUID->"f1692767-1011-42f8-b93d-91993a0daf64"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1269, 647},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
   CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
   RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
   CacheGraphics -> False], 
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
   TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
   CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
   CacheGraphics -> False, CellOpen -> Dynamic[
     CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.91864580082166`16.345710999333516*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> 
                    "\"PatrickMLenggenhager__HyperBloch-0.9.1.paclet\"", True -> 
                    StyleBox[
                    "\"PatrickMLenggenhager__HyperBloch-0.9.1.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/build/"]], Appearance -> None, BaseStyle -> 
                    "Hyperlink", Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    "OEM6eJxFjrEKwjAQhokUEfQputvo6GgRcahQGp1EShovaTRtQi5F3X1w2\
yK43c/33X8nCc4K/\
kztC1ASnBZ2mGWEUaYxsGivDTBykROcn6BxhgcYOPnxD4npGcEjdQZapejOiq6BNiAtAIF7UdPD24G\
vrNEi4yFoAUhzb+8gemlkqbG9lnNhINCq0+bWh+C1eByzoRTamivwZfm3l6tkk6wTN+\
7EbDG8ufVqPM3I9QstUkuR"}, "ClickToCopyTemplate"], LineBreakWithin -> 
                   Automatic, LineIndent -> 0, StripOnInput -> False], 
                  ItemSize -> Fit, StripOnInput -> False], "", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "4ceda70b-ce1f-4a1a-aad7-f477a6038912"]]]]]], Appearance -> 
                   None, BoxID -> "4ceda70b-ce1f-4a1a-aad7-f477a6038912", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.91864580082166`16.345710999333516*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> 
                    "\"PatrickMLenggenhager__HyperBloch-0.9.1.paclet\"", True -> 
                    StyleBox[
                    "\"PatrickMLenggenhager__HyperBloch-0.9.1.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/build/"]], Appearance -> None, BaseStyle -> 
                    "Hyperlink", Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    "OEM6eJxFjrEKwjAQhokUEfQputvo6GgRcahQGp1EShovaTRtQi5F3X1w2\
yK43c/33X8nCc4K/\
kztC1ASnBZ2mGWEUaYxsGivDTBykROcn6BxhgcYOPnxD4npGcEjdQZapejOiq6BNiAtAIF7UdPD24G\
vrNEi4yFoAUhzb+8gemlkqbG9lnNhINCq0+bWh+C1eByzoRTamivwZfm3l6tkk6wTN+\
7EbDG8ufVqPM3I9QstUkuR"}, "ClickToCopyTemplate"], LineBreakWithin -> 
                   Automatic, LineIndent -> 0, StripOnInput -> False], 
                  ItemSize -> Fit, StripOnInput -> False], "", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "4ceda70b-ce1f-4a1a-aad7-f477a6038912"]]]]]], Appearance -> 
                   None, BoxID -> "4ceda70b-ce1f-4a1a-aad7-f477a6038912", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Build result: \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/build/PatrickMLenggenhager__HyperBloch-0.9.1.\
paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"7.504216`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/build/PatrickMLenggenhager__HyperBloch-0.9.1.\
paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"7.504216`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/build/PatrickMLenggenhager__HyperBloch\""}, 
                    "FileArgument"], "]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|"File" -> 
                    File["Kernel/HyperBloch.wl"], "Hash" -> 
                    "b7b36f3e806b761a9fe38326dcec21f09e5c48805e3995b5d5d20104d\
373ac81"|>, <|"File" -> File["Kernel/L2Primitives.m"], "Hash" -> 
                    "a06befb1e301fc8e705cf1e4393af3c281e7e47fcb27e1daa9f655b2a\
e228993"|>, <|"File" -> 
                    File["Documentation/English/Guides/HyperBlochPackage.nb"],
                     "Hash" -> 
                    "3a144e947874065af20dbcdbf725050e668b5dd2b801c87b5fbc26af0\
63a1683"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
AbelianBlochHamiltonianExpression.nb"], "Hash" -> 
                    "48ffbea86857eab09989e0e4d1efcbc54d6316658518018e9c8f5daba\
9848eea"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
AbelianBlochHamiltonian.nb"], "Hash" -> 
                    "ff762a33d4769692ea2362601b91b9cdb28c4a47c79083d81a0185e8f\
c9be569"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetCellBoundary.nb"], "Hash" -> 
                    "46a3b6b82114a1f4aff45378d49c936bc0389fbea9b9ecae6cc13f3db\
dd5b8ae"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetCellGraphEdge.nb"], "Hash" -> 
                    "93dbf1fe79760dc37ba93b1dedf13b7a0e018a0326316ce94655b062f\
1472001"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetCellGraphFace.nb"], "Hash" -> 
                    "2d2bdd87853fe1680de2ac98b3a7fab19638dddefc6d9502122c2f9d8\
a74cbe3"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetCellGraphVertex.nb"], "Hash" -> 
                    "020dda27db08103ee107c23445db645e6ba0e4110e435c84d8f08198d\
d17a1cc"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetEdge.nb"], "Hash" -> 
                    "292bb9e449c66912dbd05f8e5945bb58cd0f5a8c627bb618837e9109b\
f040c25"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetSchwarzTriangle.nb"], "Hash" -> 
                    "f63eba11fcdff14bf93873f30db2dee3a3bf8aebb10b5e8e579370a90\
49f613a"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetTranslatedCellGraphEdge.nb"], "Hash" -> 
                    "032423a665e5e4be8d59cc1ce9054737b36146985c9e10c0e386eb2ba\
abede4a"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetVertex.nb"], "Hash" -> 
                    
                    "b1d95594c759233ccec48a7b89a8835de6b9f14fb5c5bdd6a9987646c\
e29f758"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetWyckoffPosition.nb"], "Hash" -> 
                    "ab2cc2a28f7202364e87942dde0166ee883ccbbd82f8f25ad536dfc3e\
cdc4824"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
HCCellGraph.nb"], "Hash" -> 
                    "05230bc5edea2159585d1c564b336fb7ab5178b07ae9799807d48e8fa\
9318bad"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
HCModelGraph.nb"], "Hash" -> 
                    "4375a5fc963d83f13ae3a0cacdefb09dde3e13c68a77b43d38a94da39\
88bc664"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
HCSupercellModelGraph.nb"], "Hash" -> 
                    "addd384f2bf38ef75f98ff1eeafbcaf9a6369d47f6d5d9e9850ce0518\
99ef748"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ImportCellGraphString.nb"], "Hash" -> 
                    "18b613128ee063796f07b4587efabc8a8796ebdb37f9a2217ac27433e\
4caf529"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ImportModelGraphString.nb"], "Hash" -> 
                    "3d86cc24956bb21642d34be512ec8094d4af85c35190452d7fc14527f\
2111ecb"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ImportSupercellModelGraphString.nb"], "Hash" -> 
                    "7876c30ae2bebdc55d1f6fbdc5743cb8e01f651ca2568736f9f6f40a4\
5b3f60c"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ShowCellBoundary.nb"], "Hash" -> 
                    "816ea390c0bd2acc4b761303690eb5c474c75fb9b0348afdf85da7789\
bf39a54"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ShowCellGraphFlattened.nb"], "Hash" -> 
                    "90782b659baca12ac8ab894fbda5e38352d61f90efbcaa860aec81c8c\
81b2264"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ShowCellGraph.nb"], "Hash" -> 
                    "4b0aea2e94734f61ec50b479a49309234d66bb302fca1df641e7feb56\
df1b02a"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ShowCellSchwarzTriangles.nb"], "Hash" -> 
                    "a297dd7abcb31c6fb9117736deb5bd5bf30b9dcc528e0d8cd2cdd4907\
7b0f52d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ShowTriangles.nb"], "Hash" -> 
                    "2697a52843e67f9f811a951a03b2719a033f42597fafccea54f01f1aa\
1d14c79"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
VisualizeCellGraph.nb"], "Hash" -> 
                    "15655ed901dbc7a3d97df320acf8cb085b52895cb85930d7674b05b0a\
e2472c4"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
VisualizeModelGraph.nb"], "Hash" -> 
                    "3e98495295b49d23d622720312e284135d354e3a604513384181a1134\
9d2f189"|>, <|"File" -> File["Documentation/English/Tutorials/BasicUsage.nb"],
                     "Hash" -> 
                    "198ed18c7ec7cb3526022556aea24ae6471ef5caa612fb12a50cc7858\
f79ef78"|>, <|"File" -> File["Resources/.DS_Store"], "Hash" -> 
                    "31225be648d63c713b9d71b6c23888f9b485768051e3fe335952b32d1\
55319c8"|>, <|"File" -> File["Resources/ExampleData/(2,3,8)_T2.1_3.hcc"], 
                    "Hash" -> 
                    "815e396b3ed55e727d940cdee4365f31ebfae34d392203ff291372ad2\
8a01153"|>, <|"File" -> File["Resources/ExampleData/(2,8,8)_T2.6_3.hcc"], 
                    "Hash" -> 
                    "a43c1bf9c0b7a906e9889e18deff7ba607e350a9946d9d34daa5276d8\
b997ff6"|>, <|"File" -> File["Resources/ExampleData/{8,3}-tess_T2.1_3.hcm"], 
                    "Hash" -> 
                    "9447e89b65319527a9f6894fdc552e880caf6bdbcf5c7db04cd72d8ac\
89a0f45"|>, <|"File" -> 
                    File["Resources/ExampleData/{8,3}-tess_T2.1_3_sc-T5.1.\
hcs"], "Hash" -> 
                    "e44c57247643aef50a268f56274481d228c81f252cff5b08ddd83f6fc\
68b6ded"|>, <|"File" -> File["Resources/ExampleData/{8,8}-tess_T2.6_3.hcm"], 
                    "Hash" -> 
                    "abc6acebf293283097dfc08a303619554f8bc6f39c05e038865be16d6\
cd60f70"|>, <|"File" -> 
                    File["Resources/ExampleData/{8,8}-tess_T2.6_3_sc-T3.11.\
hcs"], "Hash" -> 
                    "96ae484afd2baf08e2fb80475bca3bcfc54064b2b2f9be50161cfa631\
96ffcfa"|>, <|"File" -> File["Resources/ExampleData/.DS_Store"], "Hash" -> 
                    "cc05ae7b546d9bdf5008617de947cb3e5082de8c404c961c92b4b0411\
0dce218"|>, <|"File" -> File["Resources/ExampleData/generate_example_data.g"],
                     "Hash" -> 
                    "4a9908c2cecebbf21747ff0b38a04fc527389bdf447401415314469f6\
c411f0d"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[2]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 37], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[2]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 37], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 
                    2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/HyperBloch.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "b7b36f3e806b761a9fe38326dcec21f09e5c48805e3995b5d5d20104d\
373ac81", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/L2Primitives.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a06befb1e301fc8e705cf1e4393af3c281e7e47fcb27e1daa9f655b2a\
e228993", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Documentation/English/Guides/HyperBlochPackage.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "3a144e947874065af20dbcdbf725050e668b5dd2b801c87b5fbc26af0\
63a1683", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
AbelianBlochHamiltonianExpression.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "48ffbea86857eab09989e0e4d1efcbc54d6316658518018e9c8f5daba\
9848eea", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
AbelianBlochHamiltonian.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "ff762a33d4769692ea2362601b91b9cdb28c4a47c79083d81a0185e8f\
c9be569", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetCellBoundary.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "46a3b6b82114a1f4aff45378d49c936bc0389fbea9b9ecae6cc13f3db\
dd5b8ae", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetCellGraphEdge.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "93dbf1fe79760dc37ba93b1dedf13b7a0e018a0326316ce94655b062f\
1472001", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetCellGraphFace.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2d2bdd87853fe1680de2ac98b3a7fab19638dddefc6d9502122c2f9d8\
a74cbe3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetCellGraphVertex.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "020dda27db08103ee107c23445db645e6ba0e4110e435c84d8f08198d\
d17a1cc", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/GetEdge.nb"]\
, 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "292bb9e449c66912dbd05f8e5945bb58cd0f5a8c627bb618837e9109b\
f040c25", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetSchwarzTriangle.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "f63eba11fcdff14bf93873f30db2dee3a3bf8aebb10b5e8e579370a90\
49f613a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetTranslatedCellGraphEdge.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "032423a665e5e4be8d59cc1ce9054737b36146985c9e10c0e386eb2ba\
abede4a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/GetVertex.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "b1d95594c759233ccec48a7b89a8835de6b9f14fb5c5bdd6a9987646c\
e29f758", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetWyckoffPosition.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "ab2cc2a28f7202364e87942dde0166ee883ccbbd82f8f25ad536dfc3e\
cdc4824", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/HCCellGraph.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "05230bc5edea2159585d1c564b336fb7ab5178b07ae9799807d48e8fa\
9318bad", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
HCModelGraph.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "4375a5fc963d83f13ae3a0cacdefb09dde3e13c68a77b43d38a94da39\
88bc664", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
HCSupercellModelGraph.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "addd384f2bf38ef75f98ff1eeafbcaf9a6369d47f6d5d9e9850ce0518\
99ef748", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ImportCellGraphString.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "18b613128ee063796f07b4587efabc8a8796ebdb37f9a2217ac27433e\
4caf529", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ImportModelGraphString.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "3d86cc24956bb21642d34be512ec8094d4af85c35190452d7fc14527f\
2111ecb", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ImportSupercellModelGraphString.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "7876c30ae2bebdc55d1f6fbdc5743cb8e01f651ca2568736f9f6f40a4\
5b3f60c", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["37 total \:203a ", ""], 
                    Style[
                    Superscript["37 total \:203a ", ""], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 2]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "Item", False], "Mouse"], 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                    Background -> GrayLevel[0.98]], SpanFromLeft}}, 
                    BaseStyle -> {ContextMenu -> Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> GrayLevel[
                    0.7490196078431373], Spacings -> {0, 0}, Alignment -> 
                    Left, BaseStyle -> {FontFamily -> "Source Sans Pro", 
                    FontSize -> 14, FontWeight -> Plain}], LineBreakWithin -> 
                    False, ContextMenu -> {}, NumberMarks -> False, 
                    ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.001987`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], ButtonFunction :> (
                    Typeset`open$$ = False), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.001987`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"Indeterminate", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"TargetWolframVersionNumber\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["13.`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztfctzHEeeHkE8SPAtiZrdGds7MEw5NDsCUJlZj6zZ2aDAJilyl\
pQoFiStvbtB5RPoYaMbruomiZmYiPHGHr3hsMfHPezf4Ysj7L9gT7tHe+bg8MVzcngjfBh/\
WVX9blBdDUhik+hgsNFVWZlf/t6/\
zKxMu5Cdfyye32q9MJldzt6632yb9CA1bdGut5q4bBeylcctV8AuZUsP6lnbns1WdsQuriTnko5SJs\
uSi0lnf1+kh/\
eM0MnCn9nF7Nrtw6bYr6uHLd1pGPf42d7ji4lpZ1d2Dg9MZtpftg5M88aNbPmuaGSme/\
d6967Zl0YngGNu3EiWH6P+Q5S5uGP2Dxq4WCAsKl7Mrj4STZOYhlHtVjrc5tJjwOg2spyd+yit6+\
GHu9/nXCXu1kq2eqvTbnfJcKHsUVHv9+7eeZTWnwHCl3fTVrN9p6kfm6zVSZVJVu/\
euVVv74uDLLlWEgYPfYJ+mtSBd1Bum4Y4NDq7UjRxt9NUjuJHUWdpJ+2YXjcubB8cGJGKJoi/\
9HGr2b+zektkJmkfNow9M9L31TvPRKMjQJlsdbvTbu2Dxap3d+Whae+\
1dHLhUWpA23b92UCl2436bnPfNNtdgmYrNeMkpfvdL3p/X+yapP4zA4qdKynWe2qo3eWd+\
r7J0jP559KHvSt48FKtk6ao+HMANsnlu6BvTRzcM/XdPQdh+\
VHrOdpcyK5vy6zV6LTNYPns8kOx26zbuspluPY7sPv83VTs50xdzM7n5HHiu7z+67/\
51ToqXL1dTyEzrs+4//ijW7VWo5Wmv5d//v5m+k7++c3N9E/zzz/crH231+\
NLSTutH3zSvN886LT7UlzcvFIDdAB7JLSuN3dHb1/IYeV4Rvh4Kb/\
zUKS79WY2KMbuu3amdmb076OxrPSFvVvPQu+7q9uLo7o9qmTlo8nV9UdCNUx7O1V7oNd6srT+\
o7X15ALquW2s6DTaybulzN9vm/3tZrNV2JJk8bd//\
bcDtuOvFta3PssgQlsHDdPc3d263VIdJ2PZFhQJ0q32tu5BCVLZatTVA9GG1Jhs61Ha+\
ilYlRX3bjVaKFYg2pKdekPjB2ignj584Co1zT2IY/rkSb/0hrcZb5LNg/\
yZ9Z7lcmCPQ5eL6zvoaMNJ8Mw0QWtDdZcGN1mNNgPPpyT8Mllcz9aTc5lRrabOktX1pPhrPTn/\
aUc02/X2YV+\
4ksNmW7y420r3s0WY4eGudktdK2VjTMW7JZJzUIbOfjMboE6hzUsPjO0XW0Jvx8tMsDQX3CWYP9M2o\
/pwtQTjEOY2ZGos4+1MD6jbagKZcEo6dau1s9UbGzDQSyMG+\
nqy13ruNLi5W9uDdVfOwI6S6OLHHXjEFJbh6di9K/\
BIsDUwZfXMWb7FPpfzqnN5KKzN6KNfsxgs7rQOXl0BuOZ40qg3zaNWVi+9cMHghdpCr1Thgr+\
V0KHWaGUzhw6jPuc0djiNHWaIHVZOY4fT2OHYXf3O+i1H6YLqhea00sPZez2WnSZLd+uw/\
chBJ2eJyfNvR3TWk0sO2Ha6m7eWLPzFidH0WqlWDwUsl8nas1NzeUCaun+tTEjlV4dT+\
Q3ncZLDDHV/+TEAGO2MxpdA9RRk6Pq6G1mRxW+/vZFcvN+EoxWN26Itthc2kmVHm8y+\
V9S7fXajYKOjSs7O639i0qZpDFB/83kDhe6JbC/\
5UEaShZYZ7oUyComIrWGc0VAroyixXmwC5XPuBYbFcSADHWjqEc/XLGJCcTLe3rtlew8o0O/\
XnXXPNvd7DQo0ZKwkhnnEKm4iL1CWGJ/\
FTFimKCcmMn5klaSRIVoAURgEkgpDKY9jNt4g6YphzpetO83dRj3b2/\
qoU9dmUOhKmm42ZQ8ME8T3TexHPPK9MBCWeloqLW1EAy/wTBhydFlTyT2ieCQDKxUNhfVCPBnyCWA+\
nQzmsbEGnlKZR0CQbSWH+\
9CRbGtbInYSzRzePchJAzEJft95cZAizkQFg2B9bq00goc8iIyQXhzz2HjG18SAWirwdchIGAY8IID\
LTay4DbSQIuY+N0aMg/3oJMAOQrQ2CqlgTPtRGIcxNYKykIYekTH+gbCUK1/\
4kYpijzPNiQDQwHCrYmmCMB6HeLMSxI9Mu2YajVutTlNDY4eoFwomQ8kpIb4g1hfW+\
gGLuPZjFbNQKo/\
x2NE3lrFRwoRKEWaZlloHkgszDu3DWaB9lIqDvTt6WAxjNGOJNVEchZ5WLALPmCTaaEuYjIRnQCbhQ\
S3BYAV5dRrhhdQSP6KeN0EJZ8d2V6ghbBTSrzWPeMCsgcx72lChYi6ZiKyQJA4Z11pDBEMdBx4llCp\
qY81F5CtpJqjIrZmxfW7StnkxiM6DwmpBIy09TjxmDPEiRZnvB1qGfmBCCeL5hOA/\
Fijua25RMAZiEgmi1Di6qCq6UWbSmEqIkA+\
5CsOYUEiQF1hugtgPpAy40p4NBFchjaQMCecsMjHxYmk931M0OAGCJWrvuUh/tpNCPXcbQ+\
hsyIwUBKZXW4iPtDHjEeQcdo9qYxiUxELapSSehGKaIIpZ5InY82GHCZtgRH5SFd0OEqjMOWJ9pEJA\
1H3KBIyZCYwvDddBDH2E6HuBHzHns4gfxjxQMTiuPPis0EgqhZBGG38CyrgqynFZg0LGAbiooiCmjC\
l4SB9SLnkswMRAQ9hikNTKQAVQmVDAQEehD4WlsY0CfgKM/\
eJQPW1Z2821B9EJSZWignL4Lg9W1zc8in0KzfTgFIwBRKWk1JxabmkgdMBCbRUzSqMb1B9H90eV0N2\
r9bg5xMmAMg/OCWwRlAQxvJMmKgh9yRB3wLbJgERcepEwcQSCeZGGs+\
IWBpBwKfQ4rB9XhIXQy4zj8lkUiAB+\
J4QbYjCzArLvKaFgyeBaQTZmCFMhGBxJn2nGRexrwWLOJfR6ArnuVMSVdBCYKNBsMkBkrmjUt1Raxg\
3kx8bw/wR+HDGIsLEIWRjDz9oQIVlsoAueMh5cfxyjtD9B2qoBvL9/\
0Er7prcYWxsECPbAIBCK0ALhUBSH1gOlAh4hbJaKC4gfdFJLFgEspbC3ikY+Y8YH/\
IBO8PV3ZwDYJ944QnAWXpz6cRBKiTQO2sBgTAJCjeIe2IkgACaEBQTmLaAaQSfBd2QRIxCj5DjCT2Z\
AOIHP41ARgIaKeQhyJWimAiiJhXrgL5BMSQ4lRhhMlKBBCHsdWlhj63sCLoXZ0Jvgx6pFAG6M86jIi\
ZPQQPBhZqWG61e+SxSYB/\
HzDGydHzmLaGUsPQZ7aDVoqqE1HB6NxSKYoCrVGN3FVoQncBxt0zR6KH7yIk5lGMRSKEGAkQtYZVhi\
LQKXzoC3IbGA61QHATTojNRFcfwnKZ2kzH88O8IhKyPRlKAuw2A+/KdRgSf9KBZ+\
zDw4EYTsEE3mUQvc2oY+kh8LosIyE+\
nRCX7s3kzARgKCbMjQ0DjSGoZYSUYUhC4mJIKIaeCQiH0RG8hYKxVA0z2N8IUqjaDZg11EIEMnWOjq\
xJsIjIZxJNCqz0wIG2I5QXoaIGVgSA1JjG9mfRrECEMtnDEkzUJLiAAlCURygoGp5m8/r2cd0aj/\
zExkLQkQhBsdewQZYySYBhUto55QlitEo8iVka8G0N0AvNZRGEEYAicPFEG7miBztdnQTXYfDB4Bho\
8iZ/djTZkOKUVgAHttQFGCcIUFPlxeCMtHGBwNQTJGCHOFLZzIOLyNyfB2Ou0WuAdEt0RWV59lIyk2\
gm2jCVeRUREkLEA2SGkQhE4vfKRZfoT0NYBahoRaCeWFH1PINhDHOEc2wY+90x3xz7Y2bydPErRv+\
v1G/hFIVMuRDasI6VOsIyJDJAWccxtLH9kzspiAGOQzjCEioZJRTYKAEWTM482932/\
uzguxf9AwbuRl6336AfuA/+DJDt0kT9jmnlIDBtONloSSGQ0RiZCdxIjsEV37LAwsI0ZaRBu+\
ZjEFR6ylMWERFZoixyMkmJAyHY2BlxjCEQwCboMguofRjhC9hxAHjliZI7yxSC9DLzIsQFyPXFLHcI\
taQNWiUHMZQ6FsOI7hh5Mx/Jx/\
wH6x0TZZ1idFf7Qn9v3IwBOEjrpowI3mOMvsXBxFTIqIy4YIEhREwCVxvtIRRe6oEFR7SNDHYbApYT\
zJ1MZOsEkAJ+vBQVYGjwoFDH0EfBYEoCG3AVIx3+dEU+\
pcAqJjqqyFrrrEFsFhiNwWwQ7S8SpU4X044QhVYGtDpNkSnGeUwxPAdCiPC+\
dUQSYYMhdkwnsqLzAeBDeESJNQh0qHno28cRj+\
lDByqrBNMkyWGNroc0RDyPUFEmQDTeSeHwVwlwy8UYHvIWKnEok94ickFERZBKBI/q3FX+\
N4vj8Zz7i+\
KnRRmEgGTg6lBks8HpJIO5cJc4HGOPJSrnyIRoxmkVzDjrqMXiOvIhP0dWNy07tuBRGSziemuPhE4+\
rmbt9VQxc8riiyOmS/\
CAEjxNbWkwj8PR8UoBHjDiAE2veIDzUlPlJQGyqAsZ7eSK5sNxqt53fcoqt80imf9NxILpXjtcmeOH\
ATTf9iYMS3HJJMVOvAfOkWgJk0L7a9uNEdw84WUW3+H3q4dtSzf2IOb3f29w9ri7WFCY8WJDrilut/\
bcEuZd8/qvYHbhzXaAA4Enwxt9zt43svwVlMLuYFF7J/flTB7XZrPy+ULuQTlQ8+\
PEGAU9V0JK0ft54XTBoQva/uR+3HpahN1+u807/8tx+i9LVirsfo+\
01bhywd1haK1RPDjKxdn1y2v5DAFVo4olA5a92fXnAQ3VrEAajbWdZSeP7q4DUgzlaKhAaY3hq49Xk\
+QTVyESU7qjejWs44FXTpr7Aaa6BL5qNarr0H2U6WHpq22D6zkayCRTsi3TXt2nUoYMH68sKFjWT5V\
BVPVXEOVHFpHnXwkWjv9bvw1u16dpAvuQGraq1Os+\
0KXe9dLUShuAEeXnKuerDkVXdhpNBq0krbrpms384Vd61cTdJqDt64V9faNN3cbfZQHGRLH3cajY3k\
wmcH8P/GdaW2kHnTTcK2Ou2DTvv+7Rs3urO3H0z34AHA4qEzw1O/\
Uz787FEru3EjX0xV5bG92R7bxUVAXcwuD81cDyyFyWsjU9WGtBVmtLjnZudvm4NG69AuZ8vFUqlz2V\
J+6ztjq8GW8ol9fLtVYfi+0J94d+uGHrY6mWk9M6lbN5TnvnWVja+\
86i2Kqq28ZMEagCVKNIxOWf75b/9lqNa+Sqzi2uED88w0ypK/uelWWz1qNQ53Uc/\
AmsTyu1gwlVuI849z8KJR+13+u1hzVfvdy0tNU9EUT0/\
V1slVNF3XjssiXJxOCm8kjbpya7qe5ovXNqd6qNFCe/daDT2DcRhz7NkSnG2WnO+\
GBkVqkCznYjxpDd/owjOX28BuTVpAeCl/6qgVa8vFQtb876Xacn+R0i3A303daO+\
wYNv8879vvmwRYr5qNTvf5dJXquulO8/w+D3R1I18yeLVvN/\
9tZRDGl368bOljej9LNHkaxLdKsGhFYP/8T+4z9/dTEn++R8303+Vf/7XzeT8g3rzqWt7ZAloz/\
1dypuuQUaewh85e3n2vgVRoqn4rvaMepq/+SPcQkZ48IpLeuxZuzKljHVyn5W/\
0FOxkWqOqppnquaQKvqhyur67Sh4N6ifK6tUBn5lelSkPKeW6WWWqQyRu5apGzGfWqZTy/\
TqWqZyTGG+LFM+JvuaW6apUp1qFqpcC9wzUb3fpzbq1Ea9Kjaqv1x/EQlRKaOvtoWaCDkfZi6NU/\
HOz/TWqTeU+kobqbMvNU4vfcHgVebm4hECWP4ux0PzIcOqfK39+KQZen70fc6JDRzNpuO/\
4jHPrMzjiNlY2Rv3/xY42o2ILicHonk3be1vy9azafVx8gs488fFs6+\
rQh73Fah5ZuWbqJDVX1CbPw4vvq7KetxXBOeZlW+isp78C5zzJwFLr6syH/\
cV2nlm5ZuozCf1gvP88X35dVXh475iPs+sfBNV+LgbAMwfv1deV9U97hYM88zKN1F1j71Bxvwx/\
NzrqrvH3aJknll5qrszbCAzfww//7rq7nG38JlnVr6JunsCGyzNH8tXX1ftPe4WV/\
PMyjdRe2fdgGz++HzhdVXZ424BN8+sfBNV9gQ26Js/ll98XbX3uFskzjMr30TtPcENLOeP9ZdeVy0+\
7hai88zKN1GLZ9/gdf44ffl1VdrjbrE7z6x8E5X2BDZAnj+\
WX3ldtfe4W1DPMyvfRO09zgbh88frq6+r2h53i/Z5ZuWbqLbH2kB//ph97XXV2+\
MeYTDPrHwT9fZkDpiYP66/9boq8HGP+JhnVp4q8KwHsMwf199+XRX4uEfgzDMr30QFPqEDiuaP7e+\
8rhp83COi5pmVb6IGn/QBXvPH/+\
uvqyof9wi1eWbl66XKSyWjz57Ennj4cTHX4Eyl9YN2cplFa213ZPzar3/\
5n9eSM7a7Wd4UBU930TvdRW8KBf9GTMLkXfTOvspWbPIuei8zW7NZnlW3gV1Xp4ceGVLYR/nnv98c/\
6N2vlfXxRqU3bxoPzTNjl3u1+J+5wbun7nzC9fI2sNWatYe40/RXtvZq2dr+bZ76OvlYjuuOy+\
M6rSdcZuOO0L/tJO18zNQMmhnYShPNe6khDFZAq8ytHT+\
bqepSsdCq3Lm1qET6qTRatcWRo536UnQZScqd56JRke0W+mw++uL0R/\
kYhT0xCg7laM3VY6WK8pRtopwIj8rKZ0gUmTtrnlu0lPT9CaL1O+OY5q+X5qmnhyd2qY3VpD+\
X1VB6sVkU+02nBc9cgvjP//3//X/vP/nv72ZXermi66GSWHfwFFM41HcQnauPNsK99+\
utfYPXFP9LdsyPh2hVb/OnbS+uwvzu5Itf7FXV+\
5UiHOfNTOxbz6dkuA3GiJrf1Ky7huJxvunZS0nOdCZu539ePou1safDmZ6ujgPYDIHbXlK2fFwzS4G\
ZfOzdcwxxG1B9rSXL1WrbrfRkqKRqLTVaMAw9dTtazR9ro0v6u09uzqMeEohRv/dcX43pix/o/\
tAt5npNKz7lCt8o4pWdh+\
q1lw9e2CELbaHv5H9qFpz9wcertbsXv5Mcehhfkzhdj7qtPJQtNVeJWM00O1L2w0El02RbyU9sO398\
AkdUzuXQYyfVmV65aGtgnpb07m9RqNPuoqPvGI9aR5W7kn3kW+\
qJ2yqp7LBkz3dUPh0dlkVh8wOHQta1b4sVOzY4NGklZ8dPcK0kg3dE8/\
yY85dXLn4caudB32i3uik5tOpx5HdieiZaZcHQLvqZmTsdMFIPeueh9hDDdd3NzWmugDmByy6+\
YSftOrN3nTJYj6Mjv8/ScsWZiRnZaWrToLsHNrZcyf4DuReIMiFYq7R9StZzjMxe74fZS7f+\
Tcd0ZjFAxbjrsX8x+\
yVDPiCRfx5vMqGvEmyUvwqz306M55lukmLsMKkxcBJwKdJ5rc4dVE1LExWUrNfTvF/5bCFU/\
il4yj8tN7S8frO/kH78Ov2ljNY0yLsqxzzzBJiTmW2UNacmq1Ts/\
Vmma1FoXXV0fvCfOXaW91wVUvyhoR4LMkbFur+ydUzJL8VY6h+\
CrY0FMYNDKnNkjgkq9uZMk09YqqSJRd2T9bS6QCXKyJQy6l6fnvKNsDdr1a5AZ91EpJ14baZKFqXHp\
tnJs3M2qmIvQ4iNsjmb1rGsqWPW/lKuL50raC+\
U7maf7kqWTu9RA1GDN1JnEkrk75Xax0crnW3ylhrt9ZqjfqBbIlUjwvNwpQxabtV66Spaba79U4pOQ\
pYXPPTJnGVw5/Bnn8n77m7/hW9nnbEutfrGQbFTpxAEwVhiPGPIFumz/l6c+\
1j83zNvUp2koyfjkNu4XyO55vhfNH1nPUv7fY3wvkTp1Dfq/\
Qmy91i5LvusKLD5GrS6qQK4YZoZmuP0lZ/KbYr5JZi164MP/iFqe/utbPlRw1Rb/aL364/\
q7tTjYcn+S/cTeG/ign2oXn5f/y/7vM/+0cLn08OhHIC2lueeaY2sH66txSgWAIwaQJ/cWQC/+\
vo5tUH9aa5lRrx1M1d1pvlGtTJiwbOjK4o+LizL03qVs9mow9eccO0jmd5XwZu54Pj08lQvRiE/\
7Q3zT2wZmE6yc1Mu3Pwed08z8ecKjlsuJPJs+rFqvQ8m6vWjTw7benO0JLcCuRo7x+\
4yzeyczfctEa+dL7a493h/\
On8eTkVMsscyOLLViRU620ZOw7M5VTs75TrsGDfoO7FPbswdfhYPObunIaPJxc+\
VpToQaWcTVIKUSsFtLrAVNXgpY87uVOZxRgWlvRrXcoyrnKz6FD27sBD8IZpZsoblwZu3Et+/\
31nadaarbVGq7lr0jVnMOAZfzBLq8MvF2VXdlLh3icq32b8hhYCDUF4p3Rahen/\
HAGNyQZcaYUJ7hvt1sEtkeZN9FzhwpSucF88NXnwolEFKviXA0+VRRPE3+\
bLpCO7HlOCZ9Wc5ukrVN+m3fwq6V+\
oJv0lTytZxRuy1Uag3hXT8rXClWylkL3hIO7cY3PQEMpMmX7t56849t6CvHFjdI2rPfvKvvhVmvwzb\
l2jaD7NJ++GXoN8hd9ZA6NgDdzESPaHU88L3+j1dfD56cAe9KZkJtUxy/\
RLr56ViZEpUrn7TZWaPCE79prXqnPhVYhaaSHk0BrGyrQvmzrGss2ZWFW9h9/okvFpU0/\
nb3PSp4ihqrB4yjXO3frvNAqpHbX9hb1ZyFbcOIRJaxdGDU5PJY4uc6QDmdVeTxhGGRn6HXrbdWDA5\
FL+xPj1gYGUxZ1Wf+Rw/GX/gSGk2tUJ4yXTDgJO6tVbpU/7IhUHBya91Xrhln+UF4tf53Za+\
AOh32r2ndtFZv1l+Z2PsTTbtbNdVMlSufRyKRfSqu66rKMMtivVUcYq3TqW8witV0nllZAlks/\
dGvyKSJ71VtUXddyboY694TpWdvL4uVdL9ai7qGf1VjfG6VU1U3BU1HZ+wHwtfWMLOS6Bs+\
54aH23le5PmzV9PZF6T+Zyuz+rEp7pboExuEvGcK/KRb31n3VvV1ioO/zW0IVaanD1s8/\
AtWrp3tgo78LIraNHZIeaueZmUp8Z/blI60LiuZ5tri4LK7cRhrcOexCu3TZWdBrtHsikW2Ih+/\
2u7cr32kAA1e4asYW+dU9Mw6h2DmtkWPj8HV2feOPt4hnX59IcZuXysYtJZ39fpIf5orr+\
9gkrj1vPnWXtj5Kv7IjdwtZe3DH7B+5wmuJnsb/IP1kf2vfoVqfe0I9Nhn5m68nS+o/W1pMLqLPse/\
LuQLMDW+ws/vav/3agrTEcycLP7XL2Vo86RVtDJZdGESfnko5CFpT1+\
upioWThz1DptSFxGuhPV3yv5LEdGILcHXowMtB+vXvX7Evoc7nMfvkx6j8cJdRCb/\
70qttypmBIKx1us+BW2chyds7J1vDD3e9zrhJ3awXi3oHdK8kw7Ba/d/\
dOVyTvpmD8naZjSj65kazevXOr3t4XB1lyrSQMHvoE/Sy2tBlS7qKJgZc8J1KnO5NQCmp/\
v5yRMGRAQcd096XveK48NO29lk4uPEoNaOsWkk2IVXoWdaVmnKR0vyeFL0Ovao5GMi7F3qnvm6zYwu\
jMpQ97V9w4Wzlvl1uh5HK+Z484uJfPBLlyj1rP8xTy+rbMWo1O2wyWzy4/FLvNuq2rXIZrvwO7z+\
dRWCHu53PyOPFdXv/13/xqHRWulos1npmhTUZ+L//8/c30nfzzm5vpn+aff7hZ+24/wHOLZQ8+\
ad5vwiyNzSaVNuGR0G7pyejtl4STg2HjoBgPzsiNzc5NxLLSF/\
azPSs0szVaXX8IhQePZ7Y9ycawQVuTzqKtKWS3DQOrv5YVRsUiDzjcXD8xO3pxfcftCOVkbHa7uThc\
91KXKt6m55GYR18mi+swy+cygzRbZyBXUvy1npz/\
tCOa7Xq7768uJIegwQsXyWSLMJTDXe15tZJ7Y0rYi8TOlcuWB6gz8JZ2PxQt3ygfLjPBFlxwl2CgwI\
1Rib1aghndH+yrsYy3Mz2gbqujU9Nf2epgajJtYy95Ff26mxwuFsfX9oTbsctNtI9OPb9sdhk+\
A9YAxqbuxm+KPZAKLudV5/\
IwOvP8jYjBUBL6ygnAte5GA90FLD3ztzAQvxVO8ltx7rVGK5vZuY96hVPvfurdZ/DuF0+9+/\
x492N09a31h+JFfb+z7/bgO16H+613K1/87V/9yv33n04M7rX1R2nLsdzofNPAVxvt2+\
vFGqViS8ZWp9meXRUWvBOE9cjtY9xs5xm30UafuJRfvt/U0NB0v950U9yL6+9B0g/\
KVle77a8nV7uSDl/ctvUXX7/AvzsiQa8OW76znvTM2SsG7Z315GkdgcSrRrJ/\
ur4Dv2faX7QaFl7wc4QZaLCImWcHuETY5pcnhnEZGHdnB3N9wojd+\
mlyd5rcnSZ31ZO7fqIxmjdNSEsGqk8ulfrmMr7GaGb2stmOZOEvULw3tv32uDJvX9hIVnvxJgr3or/\
0X//lv/vlhY++\
vJmcK0PDjeTqSLi2fWYjuTLs0dyla6OBR81dHHX7g41lIy77XFl4I3lngsN01V2f5K7cjbfGnIW7er\
XMBro2Mvlhhdh+I/ne0Za+TAz/8MOB6OEkJ18WfvGqOIPL64+\
EAnlOvcCpFzj1AnPrBS4OaPH28kZyufi9naq9+jOT/OXC1mcZJGULlrC5u7vVtZPZ1mNgFSi1dQ+\
wU9lq1NUD0QY0k23BSv8U9isr7rmNI/e2inq3ctOKH5BE9fThA1epae6hg+mTJ/3SG95mvEk2D/\
JnjvRJf/ezf6SfLv3BhwM+6XrekaKtYnisleZ7xeYHy3S+nc7AK+\
blH4pm3ZpivLacpd9e2CjPHLDvFfzZPrtRHIPTQ329eEtwoP3N542N8oCVD2UkWWiZ4V4oo5CI2BrG\
GQ21MooS68UmUD7nXmBYHAcy0IGmHvF8zSImFCfj7b1btveAQuX36/\
neG5v7vQYFGjJWEsM8YhU3kRcoS4zPYiYsU5QTExk/skrSyBAtgCgMAkmFoZTHMRtvkEw+\
AOmjTl2bQbKXSyY2m7IHhgni+yb2Ix75XhgISz0tlZY2ooEXeCYMObqsqeQeUTySgZWKhsJ6IZ4M+\
QQwn1Y6jWlbQrdFM4d3z70K2G418bu/lHUQrM+tlUbwkAeREdKLYx4bz/\
iaGFBLBb4OGQnDgAcEcLmJFbeBFlLE3OfGiHGwH50E2EGI1kYhFYxpPwrjMKZGUBbS0CMyxj8QlnLl\
Cz9SUexxpjkRABoYblUsTRDG4xBvVoL4kclPl7zl1gPDug1RLxRMhpJTQnxBrC+\
s9QMWce3HKmahVB7jsaNvLGOjhAmVIswyLbUOJBdmHNqHs0DLz9q6o4fFMEYzllgTxVHoacUi8IxJ4\
uJawmQkPAMyCQ9qCQYryKvTCC+\
klvgR9bwJSjg7trtCDWGjkH6tecQDZg1k3tOGChVzyURkhSRxyLjWGiIY6jjwKKFUURtrLiJfSTNBR\
W7NjA2xctu8GETnQWG1oJGWHiceM4Z4kaLM9wMtQz8woQTxfELwHwsU9zW3KBgDMYkEUWocXVQV3Sg\
zaUwlRMiHXIVhTCgkyAssN0HsB1IGXGnPBoKrkEZShoRzFpmYeLG0nu8pGpwAwRK191ykP9tJoZ67j\
SF0NmRGCgLTqy3ER9qY8QhyDrtHtTEMSmIh7VIST0IxTRDFLPJE7Pmww4RNMCI/qYpuJxXNzKUT+\
kiFgKj7lAkYMxMYXxqugxj6CNH3Aj9izmcRP4x5oGJwXHnwWaGRVAohkQ36E1DGVVGOyxoUMg7ARRU\
FMWUMARA8o4gkjwWYGGgIWwySWhmoACoTChjoKPShsDS2UcBPgLFfHKqnLWu7seAgOiGpUlRQDt/\
lwer6hkexT6GZHpyCMYColJSaU8stDYQOWKitYkZpdIP64+j+qOLh3D1uDnEyoMyDcwJbBCVBDO+\
kiQpCXzLEHbBtMiARl14kTByBYF6k4ay4hQEkXAo9DuvHFWENHRXedwfHPGl+HNfJnGXe5+cxT9I+\
LsCjzmruATzuScHjAE/oLNp+dHfMk1DHEZ70WZs9qMc96fG4EYDLwY+\
KnDgJDQQfZlZquH7lu0SBeRA/z8DW+ZGziFbG0mOwh1aDphpaw+\
HRWCyCCapSjdFdbEV40nCvjTWNHoqfvIhTGQaxFEoQYOQCVhmWWIvApTPgbUgs4DrVQQANOiN1URz/\
SUonKfMfz45wyMpINCWoyzCYD/9pVOBJP4qFHzMPTgQhO0STedQCt7ahj+\
THgqiwzER6dIIfuzcTsJGAIBsyNDSOtIYhVpIRBaGLCYkgYho4JGJfxAYy1koF0HRPI3yhSiNo9mAX\
EcjQCRa6OvEmAqNhHAm06jMTwoZYTpCeBkgZGFJDEuObWZ8GMcJQC2cMSbPQEiJASQKRnGBgqvnbz+\
tZx71eYCaylgQIwo2OPYKMMRJMg4qWUU8oyxWiUeTKyFcD6G4AXusojCAMgZMHiqBdTZC52mzoJrsP\
Bo8Aw0eRs/\
uxpkyHlCIwgL02oChBuMICHy4vhOUjDI6GIBkjhLnCFk5kHN7GZHg7nXYL3AOiWyKrq8+\
ykRQbwbbRhKvIqAgSFiAbpDQIQqcXPtIsP0L6GkAtQ0KthPLCjylkG4hjnCOb4Mfe6S46y7Y2bydPE\
rRv+v1G/hFIVMuRDasI6VOsIyJDJAWccxtLH9kzspiAGOQzjCEioZJRTYKAEWTM482932/\
uzgvhxvTd4MvW+/QD9gH/\
wZMdukmesM09pQYMphstCSUzGiISITuJEdkjuvZZGFhGjLSINnzNYgqOWEtjwiIqNEWOR0gwIWU6Gg\
MvMYQjGATcBkF0D6MdIXoPIQ4csTJHeGORXoZeZFiAuB65pI7hFrWAqkWh5jKGQtlwHMMPJ2P4Of+\
A/WKjbbKsT4r+aE/s+5GBJwgdddGAG81xltm5OIqYFBGXDREkKIiAS+J8pSOK3FEhqPaQoI/\
DYFPCeJKpjZ1gkwBO1oODrAweFQoY+gj4LAhAQ24DpGK+\
z4mm1LkERMdUWQtddYktgsMQuS2CHaTjVajC+\
3DCEarA1oZIsyU4zyiHJ4DpUB4XzqmCTDBkLsiE91ReYDwIbgiRJqEOlQ49G3njMPwpYeRUYZtkmCw\
xtNHniIaQ6wskyAaayD0/CuAuGXijAt9DxE4lEnvET0goiLIIQJH8W4u/\
xvF8fzKecX1V6KIwkQycHEoNlng8JJF2LhPmAo1x5KVc+\
RCNGM0iuYYddRm9Rl5FJujrxuSmd91rJkg6n5ji4hO3S8nmbt9VQxc8riiyOmS/\
CAEjxNbWkwj8PR8UoBHjDiAE2veIDzUlPlJQGyqAsZ52L/cMvKq1nWUtt5vH1cFr7dZ+tlIEf/\
Zs9tbArc/zoeaRiyjZUb3Zju7p5g5ub+5hQgNdahzVcu292oKbWP3uke9P9eYlTqd753q69/8DAE+\
Jlw=="}, "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         TrueQ[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]], 
        Alignment -> Automatic, ImageSize -> Automatic, ImageMargins -> 0, 
        BaseStyle -> {}, DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
        Baseline], Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.91864580082166`16.345710999333516*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           Item[
            Style[
             
             Grid[{{"Paclet build completed successfully.", ""}}, Spacings -> 
              0.25, Alignment -> {Automatic, Baseline}], LineBreakWithin -> 
             Automatic, LineIndent -> 0], ItemSize -> Fit], 
           Item[
            Style[
             RawBoxes[
              TemplateBox[{
                ButtonBox[
                 TagBox[
                  
                  PaneSelectorBox[{
                   False -> 
                    "\"PatrickMLenggenhager__HyperBloch-0.9.1.paclet\"", True -> 
                    StyleBox[
                    "\"PatrickMLenggenhager__HyperBloch-0.9.1.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], 
                  MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                 SystemOpen[
                   File[
                   "/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/build/"]], Appearance -> None, BaseStyle -> 
                 "Hyperlink", Evaluator -> Automatic, Method -> "Preemptive"],
                 "OEM6eJxFjrEKwjAQhokUEfQputvo6GgRcahQGp1EShovaTRtQi5F3X1w2yK4\
3c/33X8nCc4K/\
kztC1ASnBZ2mGWEUaYxsGivDTBykROcn6BxhgcYOPnxD4npGcEjdQZapejOiq6BNiAtAIF7UdPD24G\
vrNEi4yFoAUhzb+8gemlkqbG9lnNhINCq0+bWh+C1eByzoRTamivwZfm3l6tkk6wTN+\
7EbDG8ufVqPM3I9QstUkuR"}, "ClickToCopyTemplate"]], LineBreakWithin -> 
             Automatic, LineIndent -> 0], ItemSize -> Fit], "", 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "4ceda70b-ce1f-4a1a-aad7-f477a6038912"]]]]]], Appearance -> 
             None, BoxID -> "4ceda70b-ce1f-4a1a-aad7-f477a6038912"], 
            "LinkHand"]}}, Alignment -> {Left, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Build result: ", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/build/PatrickMLenggenhager__HyperBloch-0.9.1.\
paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"7.504216`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/build/PatrickMLenggenhager__HyperBloch-0.9.1.\
paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"7.504216`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/build/PatrickMLenggenhager__HyperBloch\""}, 
                    "FileArgument"], "]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|
                    "File" -> File["Kernel/HyperBloch.wl"], "Hash" -> 
                    "b7b36f3e806b761a9fe38326dcec21f09e5c48805e3995b5d5d20104d\
373ac81"|>, <|"File" -> File["Kernel/L2Primitives.m"], "Hash" -> 
                    "a06befb1e301fc8e705cf1e4393af3c281e7e47fcb27e1daa9f655b2a\
e228993"|>, <|"File" -> 
                    File["Documentation/English/Guides/HyperBlochPackage.nb"],
                     "Hash" -> 
                    "3a144e947874065af20dbcdbf725050e668b5dd2b801c87b5fbc26af0\
63a1683"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
AbelianBlochHamiltonianExpression.nb"], "Hash" -> 
                    "48ffbea86857eab09989e0e4d1efcbc54d6316658518018e9c8f5daba\
9848eea"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
AbelianBlochHamiltonian.nb"], "Hash" -> 
                    "ff762a33d4769692ea2362601b91b9cdb28c4a47c79083d81a0185e8f\
c9be569"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetCellBoundary.nb"], "Hash" -> 
                    "46a3b6b82114a1f4aff45378d49c936bc0389fbea9b9ecae6cc13f3db\
dd5b8ae"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetCellGraphEdge.nb"], "Hash" -> 
                    "93dbf1fe79760dc37ba93b1dedf13b7a0e018a0326316ce94655b062f\
1472001"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetCellGraphFace.nb"], "Hash" -> 
                    "2d2bdd87853fe1680de2ac98b3a7fab19638dddefc6d9502122c2f9d8\
a74cbe3"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetCellGraphVertex.nb"], "Hash" -> 
                    "020dda27db08103ee107c23445db645e6ba0e4110e435c84d8f08198d\
d17a1cc"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetEdge.nb"], "Hash" -> 
                    "292bb9e449c66912dbd05f8e5945bb58cd0f5a8c627bb618837e9109b\
f040c25"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetSchwarzTriangle.nb"], "Hash" -> 
                    "f63eba11fcdff14bf93873f30db2dee3a3bf8aebb10b5e8e579370a90\
49f613a"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetTranslatedCellGraphEdge.nb"], "Hash" -> 
                    "032423a665e5e4be8d59cc1ce9054737b36146985c9e10c0e386eb2ba\
abede4a"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetVertex.nb"], "Hash" -> 
                    "b1d95594c759233ccec48a7b89a8835de6b9f14fb5c5bdd6a9987646c\
e29f758"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetWyckoffPosition.nb"], "Hash" -> 
                    "ab2cc2a28f7202364e87942dde0166ee883ccbbd82f8f25ad536dfc3e\
cdc4824"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
HCCellGraph.nb"], "Hash" -> 
                    "05230bc5edea2159585d1c564b336fb7ab5178b07ae9799807d48e8fa\
9318bad"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
HCModelGraph.nb"], "Hash" -> 
                    "4375a5fc963d83f13ae3a0cacdefb09dde3e13c68a77b43d38a94da39\
88bc664"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
HCSupercellModelGraph.nb"], "Hash" -> 
                    "addd384f2bf38ef75f98ff1eeafbcaf9a6369d47f6d5d9e9850ce0518\
99ef748"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ImportCellGraphString.nb"], "Hash" -> 
                    "18b613128ee063796f07b4587efabc8a8796ebdb37f9a2217ac27433e\
4caf529"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ImportModelGraphString.nb"], "Hash" -> 
                    "3d86cc24956bb21642d34be512ec8094d4af85c35190452d7fc14527f\
2111ecb"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ImportSupercellModelGraphString.nb"], "Hash" -> 
                    "7876c30ae2bebdc55d1f6fbdc5743cb8e01f651ca2568736f9f6f40a4\
5b3f60c"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ShowCellBoundary.nb"], "Hash" -> 
                    "816ea390c0bd2acc4b761303690eb5c474c75fb9b0348afdf85da7789\
bf39a54"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ShowCellGraphFlattened.nb"], "Hash" -> 
                    "90782b659baca12ac8ab894fbda5e38352d61f90efbcaa860aec81c8c\
81b2264"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ShowCellGraph.nb"], "Hash" -> 
                    "4b0aea2e94734f61ec50b479a49309234d66bb302fca1df641e7feb56\
df1b02a"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ShowCellSchwarzTriangles.nb"], "Hash" -> 
                    "a297dd7abcb31c6fb9117736deb5bd5bf30b9dcc528e0d8cd2cdd4907\
7b0f52d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ShowTriangles.nb"], "Hash" -> 
                    "2697a52843e67f9f811a951a03b2719a033f42597fafccea54f01f1aa\
1d14c79"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
VisualizeCellGraph.nb"], "Hash" -> 
                    "15655ed901dbc7a3d97df320acf8cb085b52895cb85930d7674b05b0a\
e2472c4"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
VisualizeModelGraph.nb"], "Hash" -> 
                    "3e98495295b49d23d622720312e284135d354e3a604513384181a1134\
9d2f189"|>, <|"File" -> File["Documentation/English/Tutorials/BasicUsage.nb"],
                     "Hash" -> 
                    "198ed18c7ec7cb3526022556aea24ae6471ef5caa612fb12a50cc7858\
f79ef78"|>, <|"File" -> File["Resources/.DS_Store"], "Hash" -> 
                    "31225be648d63c713b9d71b6c23888f9b485768051e3fe335952b32d1\
55319c8"|>, <|"File" -> File["Resources/ExampleData/(2,3,8)_T2.1_3.hcc"], 
                    "Hash" -> 
                    "815e396b3ed55e727d940cdee4365f31ebfae34d392203ff291372ad2\
8a01153"|>, <|"File" -> File["Resources/ExampleData/(2,8,8)_T2.6_3.hcc"], 
                    "Hash" -> 
                    "a43c1bf9c0b7a906e9889e18deff7ba607e350a9946d9d34daa5276d8\
b997ff6"|>, <|"File" -> File["Resources/ExampleData/{8,3}-tess_T2.1_3.hcm"], 
                    "Hash" -> 
                    "9447e89b65319527a9f6894fdc552e880caf6bdbcf5c7db04cd72d8ac\
89a0f45"|>, <|"File" -> 
                    File["Resources/ExampleData/{8,3}-tess_T2.1_3_sc-T5.1.\
hcs"], "Hash" -> 
                    "e44c57247643aef50a268f56274481d228c81f252cff5b08ddd83f6fc\
68b6ded"|>, <|"File" -> File["Resources/ExampleData/{8,8}-tess_T2.6_3.hcm"], 
                    "Hash" -> 
                    "abc6acebf293283097dfc08a303619554f8bc6f39c05e038865be16d6\
cd60f70"|>, <|"File" -> 
                    File["Resources/ExampleData/{8,8}-tess_T2.6_3_sc-T3.11.\
hcs"], "Hash" -> 
                    "96ae484afd2baf08e2fb80475bca3bcfc54064b2b2f9be50161cfa631\
96ffcfa"|>, <|"File" -> File["Resources/ExampleData/.DS_Store"], "Hash" -> 
                    "cc05ae7b546d9bdf5008617de947cb3e5082de8c404c961c92b4b0411\
0dce218"|>, <|"File" -> File["Resources/ExampleData/generate_example_data.g"],
                     "Hash" -> 
                    "4a9908c2cecebbf21747ff0b38a04fc527389bdf447401415314469f6\
c411f0d"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[2]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 37], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[2]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 37], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}]}, ImageSize -> 6, 
                    BaselinePosition -> Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/HyperBloch.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "b7b36f3e806b761a9fe38326dcec21f09e5c48805e3995b5d5d20104d\
373ac81", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/L2Primitives.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a06befb1e301fc8e705cf1e4393af3c281e7e47fcb27e1daa9f655b2a\
e228993", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Documentation/English/Guides/HyperBlochPackage.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "3a144e947874065af20dbcdbf725050e668b5dd2b801c87b5fbc26af0\
63a1683", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
AbelianBlochHamiltonianExpression.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "48ffbea86857eab09989e0e4d1efcbc54d6316658518018e9c8f5daba\
9848eea", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
AbelianBlochHamiltonian.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "ff762a33d4769692ea2362601b91b9cdb28c4a47c79083d81a0185e8f\
c9be569", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetCellBoundary.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "46a3b6b82114a1f4aff45378d49c936bc0389fbea9b9ecae6cc13f3db\
dd5b8ae", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetCellGraphEdge.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "93dbf1fe79760dc37ba93b1dedf13b7a0e018a0326316ce94655b062f\
1472001", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetCellGraphFace.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2d2bdd87853fe1680de2ac98b3a7fab19638dddefc6d9502122c2f9d8\
a74cbe3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetCellGraphVertex.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "020dda27db08103ee107c23445db645e6ba0e4110e435c84d8f08198d\
d17a1cc", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/GetEdge.nb"]\
, 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "292bb9e449c66912dbd05f8e5945bb58cd0f5a8c627bb618837e9109b\
f040c25", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetSchwarzTriangle.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "f63eba11fcdff14bf93873f30db2dee3a3bf8aebb10b5e8e579370a90\
49f613a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetTranslatedCellGraphEdge.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "032423a665e5e4be8d59cc1ce9054737b36146985c9e10c0e386eb2ba\
abede4a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/GetVertex.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "b1d95594c759233ccec48a7b89a8835de6b9f14fb5c5bdd6a9987646c\
e29f758", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetWyckoffPosition.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "ab2cc2a28f7202364e87942dde0166ee883ccbbd82f8f25ad536dfc3e\
cdc4824", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/HCCellGraph.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "05230bc5edea2159585d1c564b336fb7ab5178b07ae9799807d48e8fa\
9318bad", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
HCModelGraph.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "4375a5fc963d83f13ae3a0cacdefb09dde3e13c68a77b43d38a94da39\
88bc664", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
HCSupercellModelGraph.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "addd384f2bf38ef75f98ff1eeafbcaf9a6369d47f6d5d9e9850ce0518\
99ef748", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ImportCellGraphString.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "18b613128ee063796f07b4587efabc8a8796ebdb37f9a2217ac27433e\
4caf529", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ImportModelGraphString.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "3d86cc24956bb21642d34be512ec8094d4af85c35190452d7fc14527f\
2111ecb", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ImportSupercellModelGraphString.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "7876c30ae2bebdc55d1f6fbdc5743cb8e01f651ca2568736f9f6f40a4\
5b3f60c", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["37 total \:203a ", ""], 
                    Style[
                    Superscript["37 total \:203a ", ""], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 2]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "Item", False], "Mouse"], 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                    Background -> GrayLevel[0.98]], SpanFromLeft}}, 
                    BaseStyle -> {ContextMenu -> Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.001987`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    "0.001987`", "\"s\"", "seconds", "\"Seconds\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"Indeterminate", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"TargetWolframVersionNumber\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["13.`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJztfctzHEeeHkE8SPAtiZrdGds7MEw5NDsCUJlZj6zZ2aDAJilylpQ\
oFiStvbtB5RPoYaMbruomiZmYiPHGHr3hsMfHPezf4Ysj7L9gT7tHe+bg8MVzcngjfBh/\
WVX9blBdDUhik+hgsNFVWZlf/t6/\
zKxMu5Cdfyye32q9MJldzt6632yb9CA1bdGut5q4bBeylcctV8AuZUsP6lnbns1WdsQuriTnko5SJs\
uSi0lnf1+kh/\
eM0MnCn9nF7Nrtw6bYr6uHLd1pGPf42d7ji4lpZ1d2Dg9MZtpftg5M88aNbPmuaGSme/\
d6967Zl0YngGNu3EiWH6P+Q5S5uGP2Dxq4WCAsKl7Mrj4STZOYhlHtVjrc5tJjwOg2spyd+yit6+\
GHu9/nXCXu1kq2eqvTbnfJcKHsUVHv9+7eeZTWnwHCl3fTVrN9p6kfm6zVSZVJVu/\
euVVv74uDLLlWEgYPfYJ+mtSBd1Bum4Y4NDq7UjRxt9NUjuJHUWdpJ+2YXjcubB8cGJGKJoi/\
9HGr2b+zektkJmkfNow9M9L31TvPRKMjQJlsdbvTbu2Dxap3d+Whae+\
1dHLhUWpA23b92UCl2436bnPfNNtdgmYrNeMkpfvdL3p/X+yapP4zA4qdKynWe2qo3eWd+\
r7J0jP559KHvSt48FKtk6ao+HMANsnlu6BvTRzcM/XdPQdh+\
VHrOdpcyK5vy6zV6LTNYPns8kOx26zbuspluPY7sPv83VTs50xdzM7n5HHiu7z+67/\
51ToqXL1dTyEzrs+4//ijW7VWo5Wmv5d//v5m+k7++c3N9E/zzz/crH231+\
NLSTutH3zSvN886LT7UlzcvFIDdAB7JLSuN3dHb1/IYeV4Rvh4Kb/\
zUKS79WY2KMbuu3amdmb076OxrPSFvVvPQu+7q9uLo7o9qmTlo8nV9UdCNUx7O1V7oNd6srT+\
o7X15ALquW2s6DTaybulzN9vm/3tZrNV2JJk8bd//\
bcDtuOvFta3PssgQlsHDdPc3d263VIdJ2PZFhQJ0q32tu5BCVLZatTVA9GG1Jhs61Ha+\
ilYlRX3bjVaKFYg2pKdekPjB2ignj584Co1zT2IY/rkSb/0hrcZb5LNg/\
yZ9Z7lcmCPQ5eL6zvoaMNJ8Mw0QWtDdZcGN1mNNgPPpyT8Mllcz9aTc5lRrabOktX1pPhrPTn/\
aUc02/X2YV+\
4ksNmW7y420r3s0WY4eGudktdK2VjTMW7JZJzUIbOfjMboE6hzUsPjO0XW0Jvx8tMsDQX3CWYP9M2o\
/pwtQTjEOY2ZGos4+1MD6jbagKZcEo6dau1s9UbGzDQSyMG+\
nqy13ruNLi5W9uDdVfOwI6S6OLHHXjEFJbh6di9K/\
BIsDUwZfXMWb7FPpfzqnN5KKzN6KNfsxgs7rQOXl0BuOZ40qg3zaNWVi+9cMHghdpCr1Thgr+\
V0KHWaGUzhw6jPuc0djiNHWaIHVZOY4fT2OHYXf3O+i1H6YLqhea00sPZez2WnSZLd+uw/\
chBJ2eJyfNvR3TWk0sO2Ha6m7eWLPzFidH0WqlWDwUsl8nas1NzeUCaun+tTEjlV4dT+\
Q3ncZLDDHV/+TEAGO2MxpdA9RRk6Pq6G1mRxW+/vZFcvN+EoxWN26Itthc2kmVHm8y+\
V9S7fXajYKOjSs7O639i0qZpDFB/83kDhe6JbC/\
5UEaShZYZ7oUyComIrWGc0VAroyixXmwC5XPuBYbFcSADHWjqEc/XLGJCcTLe3rtlew8o0O/\
XnXXPNvd7DQo0ZKwkhnnEKm4iL1CWGJ/\
FTFimKCcmMn5klaSRIVoAURgEkgpDKY9jNt4g6YphzpetO83dRj3b2/\
qoU9dmUOhKmm42ZQ8ME8T3TexHPPK9MBCWeloqLW1EAy/wTBhydFlTyT2ieCQDKxUNhfVCPBnyCWA+\
nQzmsbEGnlKZR0CQbSWH+\
9CRbGtbInYSzRzePchJAzEJft95cZAizkQFg2B9bq00goc8iIyQXhzz2HjG18SAWirwdchIGAY8IID\
LTay4DbSQIuY+N0aMg/3oJMAOQrQ2CqlgTPtRGIcxNYKykIYekTH+gbCUK1/\
4kYpijzPNiQDQwHCrYmmCMB6HeLMSxI9Mu2YajVutTlNDY4eoFwomQ8kpIb4g1hfW+\
gGLuPZjFbNQKo/\
x2NE3lrFRwoRKEWaZlloHkgszDu3DWaB9lIqDvTt6WAxjNGOJNVEchZ5WLALPmCTaaEuYjIRnQCbhQ\
S3BYAV5dRrhhdQSP6KeN0EJZ8d2V6ghbBTSrzWPeMCsgcx72lChYi6ZiKyQJA4Z11pDBEMdBx4llCp\
qY81F5CtpJqjIrZmxfW7StnkxiM6DwmpBIy09TjxmDPEiRZnvB1qGfmBCCeL5hOA/\
Fijua25RMAZiEgmi1Di6qCq6UWbSmEqIkA+\
5CsOYUEiQF1hugtgPpAy40p4NBFchjaQMCecsMjHxYmk931M0OAGCJWrvuUh/tpNCPXcbQ+\
hsyIwUBKZXW4iPtDHjEeQcdo9qYxiUxELapSSehGKaIIpZ5InY82GHCZtgRH5SFd0OEqjMOWJ9pEJA\
1H3KBIyZCYwvDddBDH2E6HuBHzHns4gfxjxQMTiuPPis0EgqhZBGG38CyrgqynFZg0LGAbiooiCmjC\
l4SB9SLnkswMRAQ9hikNTKQAVQmVDAQEehD4WlsY0CfgKM/\
eJQPW1Z2821B9EJSZWignL4Lg9W1zc8in0KzfTgFIwBRKWk1JxabmkgdMBCbRUzSqMb1B9H90eV0N2\
r9bg5xMmAMg/OCWwRlAQxvJMmKgh9yRB3wLbJgERcepEwcQSCeZGGs+\
IWBpBwKfQ4rB9XhIXQy4zj8lkUiAB+\
J4QbYjCzArLvKaFgyeBaQTZmCFMhGBxJn2nGRexrwWLOJfR6ArnuVMSVdBCYKNBsMkBkrmjUt1Raxg\
3kx8bw/wR+HDGIsLEIWRjDz9oQIVlsoAueMh5cfxyjtD9B2qoBvL9/\
0Er7prcYWxsECPbAIBCK0ALhUBSH1gOlAh4hbJaKC4gfdFJLFgEspbC3ikY+Y8YH/\
IBO8PV3ZwDYJ944QnAWXpz6cRBKiTQO2sBgTAJCjeIe2IkgACaEBQTmLaAaQSfBd2QRIxCj5DjCT2Z\
AOIHP41ARgIaKeQhyJWimAiiJhXrgL5BMSQ4lRhhMlKBBCHsdWlhj63sCLoXZ0Jvgx6pFAG6M86jIi\
ZPQQPBhZqWG61e+SxSYB/\
HzDGydHzmLaGUsPQZ7aDVoqqE1HB6NxSKYoCrVGN3FVoQncBxt0zR6KH7yIk5lGMRSKEGAkQtYZVhi\
LQKXzoC3IbGA61QHATTojNRFcfwnKZ2kzH88O8IhKyPRlKAuw2A+/KdRgSf9KBZ+\
zDw4EYTsEE3mUQvc2oY+kh8LosIyE+\
nRCX7s3kzARgKCbMjQ0DjSGoZYSUYUhC4mJIKIaeCQiH0RG8hYKxVA0z2N8IUqjaDZg11EIEMnWOjq\
xJsIjIZxJNCqz0wIG2I5QXoaIGVgSA1JjG9mfRrECEMtnDEkzUJLiAAlCURygoGp5m8/r2cd0aj/\
zExkLQkQhBsdewQZYySYBhUto55QlitEo8iVka8G0N0AvNZRGEEYAicPFEG7miBztdnQTXYfDB4Bho\
8iZ/djTZkOKUVgAHttQFGCcIUFPlxeCMtHGBwNQTJGCHOFLZzIOLyNyfB2Ou0WuAdEt0RWV59lIyk2\
gm2jCVeRUREkLEA2SGkQhE4vfKRZfoT0NYBahoRaCeWFH1PINhDHOEc2wY+90x3xz7Y2bydPErRv+\
v1G/hFIVMuRDasI6VOsIyJDJAWccxtLH9kzspiAGOQzjCEioZJRTYKAEWTM482932/\
uzguxf9AwbuRl6336AfuA/+DJDt0kT9jmnlIDBtONloSSGQ0RiZCdxIjsEV37LAwsI0ZaRBu+\
ZjEFR6ylMWERFZoixyMkmJAyHY2BlxjCEQwCboMguofRjhC9hxAHjliZI7yxSC9DLzIsQFyPXFLHcI\
taQNWiUHMZQ6FsOI7hh5Mx/Jx/\
wH6x0TZZ1idFf7Qn9v3IwBOEjrpowI3mOMvsXBxFTIqIy4YIEhREwCVxvtIRRe6oEFR7SNDHYbApYT\
zJ1MZOsEkAJ+vBQVYGjwoFDH0EfBYEoCG3AVIx3+dEU+\
pcAqJjqqyFrrrEFsFhiNwWwQ7S8SpU4X044QhVYGtDpNkSnGeUwxPAdCiPC+\
dUQSYYMhdkwnsqLzAeBDeESJNQh0qHno28cRj+\
lDByqrBNMkyWGNroc0RDyPUFEmQDTeSeHwVwlwy8UYHvIWKnEok94ickFERZBKBI/q3FX+\
N4vj8Zz7i+\
KnRRmEgGTg6lBks8HpJIO5cJc4HGOPJSrnyIRoxmkVzDjrqMXiOvIhP0dWNy07tuBRGSziemuPhE4+\
rmbt9VQxc8riiyOmS/\
CAEjxNbWkwj8PR8UoBHjDiAE2veIDzUlPlJQGyqAsZ7eSK5sNxqt53fcoqt80imf9NxILpXjtcmeOH\
ATTf9iYMS3HJJMVOvAfOkWgJk0L7a9uNEdw84WUW3+H3q4dtSzf2IOb3f29w9ri7WFCY8WJDrilut/\
bcEuZd8/qvYHbhzXaAA4Enwxt9zt43svwVlMLuYFF7J/flTB7XZrPy+ULuQTlQ8+\
PEGAU9V0JK0ft54XTBoQva/uR+3HpahN1+u807/8tx+i9LVirsfo+\
01bhywd1haK1RPDjKxdn1y2v5DAFVo4olA5a92fXnAQ3VrEAajbWdZSeP7q4DUgzlaKhAaY3hq49Xk\
+QTVyESU7qjejWs44FXTpr7Aaa6BL5qNarr0H2U6WHpq22D6zkayCRTsi3TXt2nUoYMH68sKFjWT5V\
BVPVXEOVHFpHnXwkWjv9bvw1u16dpAvuQGraq1Os+\
0KXe9dLUShuAEeXnKuerDkVXdhpNBq0krbrpms384Vd61cTdJqDt64V9faNN3cbfZQHGRLH3cajY3k\
wmcH8P/GdaW2kHnTTcK2Ou2DTvv+7Rs3urO3H0z34AHA4qEzw1O/\
Uz787FEru3EjX0xV5bG92R7bxUVAXcwuD81cDyyFyWsjU9WGtBVmtLjnZudvm4NG69AuZ8vFUqlz2V\
J+6ztjq8GW8ol9fLtVYfi+0J94d+uGHrY6mWk9M6lbN5TnvnWVja+\
86i2Kqq28ZMEagCVKNIxOWf75b/9lqNa+Sqzi2uED88w0ypK/uelWWz1qNQ53Uc/\
AmsTyu1gwlVuI849z8KJR+13+u1hzVfvdy0tNU9EUT0/\
V1slVNF3XjssiXJxOCm8kjbpya7qe5ovXNqd6qNFCe/daDT2DcRhz7NkSnG2WnO+\
GBkVqkCznYjxpDd/owjOX28BuTVpAeCl/6qgVa8vFQtb876Xacn+R0i3A303daO+\
wYNv8879vvmwRYr5qNTvf5dJXquulO8/w+D3R1I18yeLVvN/\
9tZRDGl368bOljej9LNHkaxLdKsGhFYP/8T+4z9/dTEn++R8303+Vf/7XzeT8g3rzqWt7ZAloz/\
1dypuuQUaewh85e3n2vgVRoqn4rvaMepq/+SPcQkZ48IpLeuxZuzKljHVyn5W/\
0FOxkWqOqppnquaQKvqhyur67Sh4N6ifK6tUBn5lelSkPKeW6WWWqQyRu5apGzGfWqZTy/\
TqWqZyTGG+LFM+JvuaW6apUp1qFqpcC9wzUb3fpzbq1Ea9Kjaqv1x/EQlRKaOvtoWaCDkfZi6NU/\
HOz/TWqTeU+kobqbMvNU4vfcHgVebm4hECWP4ux0PzIcOqfK39+KQZen70fc6JDRzNpuO/\
4jHPrMzjiNlY2Rv3/xY42o2ILicHonk3be1vy9azafVx8gs488fFs6+\
rQh73Fah5ZuWbqJDVX1CbPw4vvq7KetxXBOeZlW+isp78C5zzJwFLr6syH/\
cV2nlm5ZuozCf1gvP88X35dVXh475iPs+sfBNV+LgbAMwfv1deV9U97hYM88zKN1F1j71Bxvwx/\
NzrqrvH3aJknll5qrszbCAzfww//7rq7nG38JlnVr6JunsCGyzNH8tXX1ftPe4WV/\
PMyjdRe2fdgGz++HzhdVXZ424BN8+sfBNV9gQ26Js/ll98XbX3uFskzjMr30TtPcENLOeP9ZdeVy0+\
7hai88zKN1GLZ9/gdf44ffl1VdrjbrE7z6x8E5X2BDZAnj+\
WX3ldtfe4W1DPMyvfRO09zgbh88frq6+r2h53i/Z5ZuWbqLbH2kB//ph97XXV2+\
MeYTDPrHwT9fZkDpiYP66/9boq8HGP+JhnVp4q8KwHsMwf199+XRX4uEfgzDMr30QFPqEDiuaP7e+\
8rhp83COi5pmVb6IGn/QBXvPH/+\
uvqyof9wi1eWbl66XKSyWjz57Ennj4cTHX4Eyl9YN2cplFa213ZPzar3/\
5n9eSM7a7Wd4UBU930TvdRW8KBf9GTMLkXfTOvspWbPIuei8zW7NZnlW3gV1Xp4ceGVLYR/nnv98c/\
6N2vlfXxRqU3bxoPzTNjl3u1+J+5wbun7nzC9fI2sNWatYe40/RXtvZq2dr+bZ76OvlYjuuOy+\
M6rSdcZuOO0L/tJO18zNQMmhnYShPNe6khDFZAq8ytHT+\
bqepSsdCq3Lm1qET6qTRatcWRo536UnQZScqd56JRke0W+mw++uL0R/\
kYhT0xCg7laM3VY6WK8pRtopwIj8rKZ0gUmTtrnlu0lPT9CaL1O+OY5q+X5qmnhyd2qY3VpD+\
X1VB6sVkU+02nBc9cgvjP//3//X/vP/nv72ZXermi66GSWHfwFFM41HcQnauPNsK99+\
utfYPXFP9LdsyPh2hVb/OnbS+uwvzu5Itf7FXV+\
5UiHOfNTOxbz6dkuA3GiJrf1Ky7huJxvunZS0nOdCZu539ePou1safDmZ6ujgPYDIHbXlK2fFwzS4G\
ZfOzdcwxxG1B9rSXL1WrbrfRkqKRqLTVaMAw9dTtazR9ro0v6u09uzqMeEohRv/dcX43pix/o/\
tAt5npNKz7lCt8o4pWdh+\
q1lw9e2CELbaHv5H9qFpz9wcertbsXv5Mcehhfkzhdj7qtPJQtNVeJWM00O1L2w0El02RbyU9sO398\
AkdUzuXQYyfVmV65aGtgnpb07m9RqNPuoqPvGI9aR5W7kn3kW+\
qJ2yqp7LBkz3dUPh0dlkVh8wOHQta1b4sVOzY4NGklZ8dPcK0kg3dE8/\
yY85dXLn4caudB32i3uik5tOpx5HdieiZaZcHQLvqZmTsdMFIPeueh9hDDdd3NzWmugDmByy6+\
YSftOrN3nTJYj6Mjv8/ScsWZiRnZaWrToLsHNrZcyf4DuReIMiFYq7R9StZzjMxe74fZS7f+\
Tcd0ZjFAxbjrsX8x+\
yVDPiCRfx5vMqGvEmyUvwqz306M55lukmLsMKkxcBJwKdJ5rc4dVE1LExWUrNfTvF/5bCFU/\
il4yj8tN7S8frO/kH78Ov2ljNY0yLsqxzzzBJiTmW2UNacmq1Ts/\
Vmma1FoXXV0fvCfOXaW91wVUvyhoR4LMkbFur+ydUzJL8VY6h+\
CrY0FMYNDKnNkjgkq9uZMk09YqqSJRd2T9bS6QCXKyJQy6l6fnvKNsDdr1a5AZ91EpJ14baZKFqXHp\
tnJs3M2qmIvQ4iNsjmb1rGsqWPW/lKuL50raC+\
U7maf7kqWTu9RA1GDN1JnEkrk75Xax0crnW3ylhrt9ZqjfqBbIlUjwvNwpQxabtV66Spaba79U4pOQ\
pYXPPTJnGVw5/Bnn8n77m7/hW9nnbEutfrGQbFTpxAEwVhiPGPIFumz/l6c+\
1j83zNvUp2koyfjkNu4XyO55vhfNH1nPUv7fY3wvkTp1Dfq/\
Qmy91i5LvusKLD5GrS6qQK4YZoZmuP0lZ/KbYr5JZi164MP/iFqe/utbPlRw1Rb/aL364/\
q7tTjYcn+S/cTeG/ign2oXn5f/y/7vM/+0cLn08OhHIC2lueeaY2sH66txSgWAIwaQJ/cWQC/+\
vo5tUH9aa5lRrx1M1d1pvlGtTJiwbOjK4o+LizL03qVs9mow9eccO0jmd5XwZu54Pj08lQvRiE/\
7Q3zT2wZmE6yc1Mu3Pwed08z8ecKjlsuJPJs+rFqvQ8m6vWjTw7benO0JLcCuRo7x+\
4yzeyczfctEa+dL7a493h/\
On8eTkVMsscyOLLViRU620ZOw7M5VTs75TrsGDfoO7FPbswdfhYPObunIaPJxc+\
VpToQaWcTVIKUSsFtLrAVNXgpY87uVOZxRgWlvRrXcoyrnKz6FD27sBD8IZpZsoblwZu3Et+/\
31nadaarbVGq7lr0jVnMOAZfzBLq8MvF2VXdlLh3icq32b8hhYCDUF4p3Rahen/\
HAGNyQZcaYUJ7hvt1sEtkeZN9FzhwpSucF88NXnwolEFKviXA0+VRRPE3+\
bLpCO7HlOCZ9Wc5ukrVN+m3fwq6V+\
oJv0lTytZxRuy1Uag3hXT8rXClWylkL3hIO7cY3PQEMpMmX7t56849t6CvHFjdI2rPfvKvvhVmvwzb\
l2jaD7NJ++GXoN8hd9ZA6NgDdzESPaHU88L3+j1dfD56cAe9KZkJtUxy/\
RLr56ViZEpUrn7TZWaPCE79prXqnPhVYhaaSHk0BrGyrQvmzrGss2ZWFW9h9/okvFpU0/\
nb3PSp4ihqrB4yjXO3frvNAqpHbX9hb1ZyFbcOIRJaxdGDU5PJY4uc6QDmdVeTxhGGRn6HXrbdWDA5\
FL+xPj1gYGUxZ1Wf+Rw/GX/gSGk2tUJ4yXTDgJO6tVbpU/7IhUHBya91Xrhln+UF4tf53Za+\
AOh32r2ndtFZv1l+Z2PsTTbtbNdVMlSufRyKRfSqu66rKMMtivVUcYq3TqW8witV0nllZAlks/\
dGvyKSJ71VtUXddyboY694TpWdvL4uVdL9ai7qGf1VjfG6VU1U3BU1HZ+wHwtfWMLOS6Bs+\
54aH23le5PmzV9PZF6T+Zyuz+rEp7pboExuEvGcK/KRb31n3VvV1ioO/zW0IVaanD1s8/\
AtWrp3tgo78LIraNHZIeaueZmUp8Z/blI60LiuZ5tri4LK7cRhrcOexCu3TZWdBrtHsikW2Ih+/\
2u7cr32kAA1e4asYW+dU9Mw6h2DmtkWPj8HV2feOPt4hnX59IcZuXysYtJZ39fpIf5orr+\
9gkrj1vPnWXtj5Kv7IjdwtZe3DH7B+5wmuJnsb/IP1kf2vfoVqfe0I9Nhn5m68nS+o/W1pMLqLPse/\
LuQLMDW+ws/vav/3agrTEcycLP7XL2Vo86RVtDJZdGESfnko5CFpT1+\
upioWThz1DptSFxGuhPV3yv5LEdGILcHXowMtB+vXvX7Evoc7nMfvkx6j8cJdRCb/\
70qttypmBIKx1us+BW2chyds7J1vDD3e9zrhJ3awXi3oHdK8kw7Ba/d/\
dOVyTvpmD8naZjSj65kazevXOr3t4XB1lyrSQMHvoE/Sy2tBlS7qKJgZc8J1KnO5NQCmp/\
v5yRMGRAQcd096XveK48NO29lk4uPEoNaOsWkk2IVXoWdaVmnKR0vyeFL0Ovao5GMi7F3qnvm6zYwu\
jMpQ97V9w4Wzlvl1uh5HK+Z484uJfPBLlyj1rP8xTy+rbMWo1O2wyWzy4/FLvNuq2rXIZrvwO7z+\
dRWCHu53PyOPFdXv/13/xqHRWulos1npmhTUZ+L//8/c30nfzzm5vpn+aff7hZ+24/wHOLZQ8+\
ad5vwiyNzSaVNuGR0G7pyejtl4STg2HjoBgPzsiNzc5NxLLSF/\
azPSs0szVaXX8IhQePZ7Y9ycawQVuTzqKtKWS3DQOrv5YVRsUiDzjcXD8xO3pxfcftCOVkbHa7uThc\
91KXKt6m55GYR18mi+swy+cygzRbZyBXUvy1npz/\
tCOa7Xq7768uJIegwQsXyWSLMJTDXe15tZJ7Y0rYi8TOlcuWB6gz8JZ2PxQt3ygfLjPBFlxwl2CgwI\
1Rib1aghndH+yrsYy3Mz2gbqujU9Nf2epgajJtYy95Ff26mxwuFsfX9oTbsctNtI9OPb9sdhk+\
A9YAxqbuxm+KPZAKLudV5/\
IwOvP8jYjBUBL6ygnAte5GA90FLD3ztzAQvxVO8ltx7rVGK5vZuY96hVPvfurdZ/DuF0+9+/\
x492N09a31h+JFfb+z7/bgO16H+613K1/87V/9yv33n04M7rX1R2nLsdzofNPAVxvt2+\
vFGqViS8ZWp9meXRUWvBOE9cjtY9xs5xm30UafuJRfvt/U0NB0v950U9yL6+9B0g/\
KVle77a8nV7uSDl/ctvUXX7/AvzsiQa8OW76znvTM2SsG7Z315GkdgcSrRrJ/\
ur4Dv2faX7QaFl7wc4QZaLCImWcHuETY5pcnhnEZGHdnB3N9wojd+\
mlyd5rcnSZ31ZO7fqIxmjdNSEsGqk8ulfrmMr7GaGb2stmOZOEvULw3tv32uDJvX9hIVnvxJgr3or/\
0X//lv/vlhY++\
vJmcK0PDjeTqSLi2fWYjuTLs0dyla6OBR81dHHX7g41lIy77XFl4I3lngsN01V2f5K7cjbfGnIW7er\
XMBro2Mvlhhdh+I/ne0Za+TAz/8MOB6OEkJ18WfvGqOIPL64+\
EAnlOvcCpFzj1AnPrBS4OaPH28kZyufi9naq9+jOT/OXC1mcZJGULlrC5u7vVtZPZ1mNgFSi1dQ+\
wU9lq1NUD0QY0k23BSv8U9isr7rmNI/e2inq3ctOKH5BE9fThA1epae6hg+mTJ/3SG95mvEk2D/\
JnjvRJf/ezf6SfLv3BhwM+6XrekaKtYnisleZ7xeYHy3S+nc7AK+\
blH4pm3ZpivLacpd9e2CjPHLDvFfzZPrtRHIPTQ329eEtwoP3N542N8oCVD2UkWWiZ4V4oo5CI2BrG\
GQ21MooS68UmUD7nXmBYHAcy0IGmHvF8zSImFCfj7b1btveAQuX36/\
neG5v7vQYFGjJWEsM8YhU3kRcoS4zPYiYsU5QTExk/skrSyBAtgCgMAkmFoZTHMRtvkEw+\
AOmjTl2bQbKXSyY2m7IHhgni+yb2Ix75XhgISz0tlZY2ooEXeCYMObqsqeQeUTySgZWKhsJ6IZ4M+\
QQwn1Y6jWlbQrdFM4d3z70K2G418bu/lHUQrM+tlUbwkAeREdKLYx4bz/\
iaGFBLBb4OGQnDgAcEcLmJFbeBFlLE3OfGiHGwH50E2EGI1kYhFYxpPwrjMKZGUBbS0CMyxj8QlnLl\
Cz9SUexxpjkRABoYblUsTRDG4xBvVoL4kclPl7zl1gPDug1RLxRMhpJTQnxBrC+\
s9QMWce3HKmahVB7jsaNvLGOjhAmVIswyLbUOJBdmHNqHs0DLz9q6o4fFMEYzllgTxVHoacUi8IxJ4\
uJawmQkPAMyCQ9qCQYryKvTCC+\
klvgR9bwJSjg7trtCDWGjkH6tecQDZg1k3tOGChVzyURkhSRxyLjWGiIY6jjwKKFUURtrLiJfSTNBR\
W7NjA2xctu8GETnQWG1oJGWHiceM4Z4kaLM9wMtQz8woQTxfELwHwsU9zW3KBgDMYkEUWocXVQV3Sg\
zaUwlRMiHXIVhTCgkyAssN0HsB1IGXGnPBoKrkEZShoRzFpmYeLG0nu8pGpwAwRK191ykP9tJoZ67j\
SF0NmRGCgLTqy3ER9qY8QhyDrtHtTEMSmIh7VIST0IxTRDFLPJE7Pmww4RNMCI/qYpuJxXNzKUT+\
kiFgKj7lAkYMxMYXxqugxj6CNH3Aj9izmcRP4x5oGJwXHnwWaGRVAohkQ36E1DGVVGOyxoUMg7ARRU\
FMWUMARA8o4gkjwWYGGgIWwySWhmoACoTChjoKPShsDS2UcBPgLFfHKqnLWu7seAgOiGpUlRQDt/\
lwer6hkexT6GZHpyCMYColJSaU8stDYQOWKitYkZpdIP64+j+qOLh3D1uDnEyoMyDcwJbBCVBDO+\
kiQpCXzLEHbBtMiARl14kTByBYF6k4ay4hQEkXAo9DuvHFWENHRXedwfHPGl+HNfJnGXe5+cxT9I+\
LsCjzmruATzuScHjAE/oLNp+dHfMk1DHEZ70WZs9qMc96fG4EYDLwY+\
KnDgJDQQfZlZquH7lu0SBeRA/z8DW+ZGziFbG0mOwh1aDphpaw+\
HRWCyCCapSjdFdbEV40nCvjTWNHoqfvIhTGQaxFEoQYOQCVhmWWIvApTPgbUgs4DrVQQANOiN1URz/\
SUonKfMfz45wyMpINCWoyzCYD/9pVOBJP4qFHzMPTgQhO0STedQCt7ahj+\
THgqiwzER6dIIfuzcTsJGAIBsyNDSOtIYhVpIRBaGLCYkgYho4JGJfxAYy1koF0HRPI3yhSiNo9mAX\
EcjQCRa6OvEmAqNhHAm06jMTwoZYTpCeBkgZGFJDEuObWZ8GMcJQC2cMSbPQEiJASQKRnGBgqvnbz+\
tZx71eYCaylgQIwo2OPYKMMRJMg4qWUU8oyxWiUeTKyFcD6G4AXusojCAMgZMHiqBdTZC52mzoJrsP\
Bo8Aw0eRs/\
uxpkyHlCIwgL02oChBuMICHy4vhOUjDI6GIBkjhLnCFk5kHN7GZHg7nXYL3AOiWyKrq8+\
ykRQbwbbRhKvIqAgSFiAbpDQIQqcXPtIsP0L6GkAtQ0KthPLCjylkG4hjnCOb4Mfe6S46y7Y2bydPE\
rRv+v1G/hFIVMuRDasI6VOsIyJDJAWccxtLH9kzspiAGOQzjCEioZJRTYKAEWTM482932/\
uzgvhxvTd4MvW+/QD9gH/\
wZMdukmesM09pQYMphstCSUzGiISITuJEdkjuvZZGFhGjLSINnzNYgqOWEtjwiIqNEWOR0gwIWU6Gg\
MvMYQjGATcBkF0D6MdIXoPIQ4csTJHeGORXoZeZFiAuB65pI7hFrWAqkWh5jKGQtlwHMMPJ2P4Of+\
A/WKjbbKsT4r+aE/s+5GBJwgdddGAG81xltm5OIqYFBGXDREkKIiAS+J8pSOK3FEhqPaQoI/\
DYFPCeJKpjZ1gkwBO1oODrAweFQoY+gj4LAhAQ24DpGK+\
z4mm1LkERMdUWQtddYktgsMQuS2CHaTjVajC+\
3DCEarA1oZIsyU4zyiHJ4DpUB4XzqmCTDBkLsiE91ReYDwIbgiRJqEOlQ49G3njMPwpYeRUYZtkmCw\
xtNHniIaQ6wskyAaayD0/CuAuGXijAt9DxE4lEnvET0goiLIIQJH8W4u/\
xvF8fzKecX1V6KIwkQycHEoNlng8JJF2LhPmAo1x5KVc+\
RCNGM0iuYYddRm9Rl5FJujrxuSmd91rJkg6n5ji4hO3S8nmbt9VQxc8riiyOmS/\
CAEjxNbWkwj8PR8UoBHjDiAE2veIDzUlPlJQGyqAsZ52L/cMvKq1nWUtt5vH1cFr7dZ+tlIEf/\
Zs9tbArc/zoeaRiyjZUb3Zju7p5g5ub+5hQgNdahzVcu292oKbWP3uke9P9eYlTqd753q69/8DAE+\
Jlw=="}, "ClickToCopyTemplate"]]}}, Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         OverlayBox[{
           StyleBox[
            TagBox[
             DynamicModuleBox[{Typeset`var$$ = False}, 
              InterpretationBox[
               StyleBox[
                PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.940560719046106`16.348133012980767*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.940560719046106`16.348133012980767*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[
                  TrueQ[Typeset`var$$]], Alignment -> Automatic, ImageSize -> 
                 Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                 DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                 Baseline], Deployed -> False, StripOnInput -> False], 
               OpenerView[{
                 Style[
                  Dynamic[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.940560719046106`16.348133012980767*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   SingleEvaluation -> True, Evaluator -> "System"], 
                  FontSlant -> Italic, FontColor -> GrayLevel[0.5], FontSize -> 
                  0.9 Inherited], ""}, False]], DynamicModuleValues -> 
              Automatic], Setting[#, {0}]& ], ShowContents -> False, 
            StripOnInput -> False], 
           StyleBox[
            DynamicBox[
             ToBoxes[
              DateString[
               TimeZoneConvert[
                DateObject[
                3.940560719046106`16.348133012980767*^9, TimeZone -> 0]], {
               "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short",
                 ":", "Minute", " ", "AMPMLowerCase"}], StandardForm], 
             SingleEvaluation -> True, Evaluator -> "System"], FontSlant -> 
            Italic, FontColor -> GrayLevel[0.5], FontSize -> 0.9 Inherited, 
            StripOnInput -> False]}, Alignment -> {Right, Baseline}], 
         "\"   \"", 
         ItemBox[
          StyleBox[
          "\"Found 2 potential issues and 5 suggestions\"", LineBreakWithin -> 
           Automatic, LineIndent -> 0, StripOnInput -> False], ItemSize -> 
          Fit, StripOnInput -> False], "", 
         TagBox[
          ButtonBox[
           TagBox[
            PaneSelectorBox[{False -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[64, 85], 0.7529411764705882]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], True -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[128, 255], 0.5019607843137255]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]}, 
             Dynamic[
              CurrentValue["MouseOver"]], ImageSize -> Automatic, 
             FrameMargins -> 0], 
            MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
           With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
              EvaluationNotebook[]}, 
             CurrentValue[
              DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
               DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "96e8e793-4edd-47e2-8a43-1cbc2b0455f4"]]]]]], Appearance -> 
           None, BoxID -> "96e8e793-4edd-47e2-8a43-1cbc2b0455f4", Evaluator -> 
           Automatic, Method -> "Preemptive"], 
          MouseAppearanceTag["LinkHand"]]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         OverlayBox[{
           StyleBox[
            TagBox[
             DynamicModuleBox[{Typeset`var$$ = False}, 
              InterpretationBox[
               StyleBox[
                PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.940560867068715`16.348133029294537*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.940560867068715`16.348133029294537*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[
                  TrueQ[Typeset`var$$]], Alignment -> Automatic, ImageSize -> 
                 Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                 DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                 Baseline], Deployed -> False, StripOnInput -> False], 
               OpenerView[{
                 Style[
                  Dynamic[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.940560867068715`16.348133029294537*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   SingleEvaluation -> True, Evaluator -> "System"], 
                  FontSlant -> Italic, FontColor -> GrayLevel[0.5], FontSize -> 
                  0.9 Inherited], ""}, False]], DynamicModuleValues -> 
              Automatic], Setting[#, {0}]& ], ShowContents -> False, 
            StripOnInput -> False], 
           StyleBox[
            DynamicBox[
             ToBoxes[
              DateString[
               TimeZoneConvert[
                DateObject[
                3.940560867068715`16.348133029294537*^9, TimeZone -> 0]], {
               "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short",
                 ":", "Minute", " ", "AMPMLowerCase"}], StandardForm], 
             SingleEvaluation -> True, Evaluator -> "System"], FontSlant -> 
            Italic, FontColor -> GrayLevel[0.5], FontSize -> 0.9 Inherited, 
            StripOnInput -> False]}, Alignment -> {Right, Baseline}], 
         "\"   \"", 
         ItemBox[
          StyleBox[
          "\"Found 3 suggestions\"", LineBreakWithin -> Automatic, LineIndent -> 
           0, StripOnInput -> False], ItemSize -> Fit, StripOnInput -> False],
          "", 
         TagBox[
          ButtonBox[
           TagBox[
            PaneSelectorBox[{False -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[64, 85], 0.7529411764705882]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], True -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[128, 255], 0.5019607843137255]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]}, 
             Dynamic[
              CurrentValue["MouseOver"]], ImageSize -> Automatic, 
             FrameMargins -> 0], 
            MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
           With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
              EvaluationNotebook[]}, 
             CurrentValue[
              DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
               DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "23bb417c-2ac6-4963-9f90-c181ac03f7ef"]]]]]], Appearance -> 
           None, BoxID -> "23bb417c-2ac6-4963-9f90-c181ac03f7ef", Evaluator -> 
           Automatic, Method -> "Preemptive"], 
          MouseAppearanceTag["LinkHand"]]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.940560972550489`16.348133040919826*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> 
                    "\"PatrickMLenggenhager__HyperBloch-0.9.1.paclet\"", True -> 
                    StyleBox[
                    "\"PatrickMLenggenhager__HyperBloch-0.9.1.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/build/"]], Appearance -> None, BaseStyle -> 
                    "Hyperlink", Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    "OEM6eJxFjrEKwjAQhokUEfQputvo6GgRcahQGp1EShovaTRtQi5F3X1w2\
yK43c/33X8nCc4K/\
kztC1ASnBZ2mGWEUaYxsGivDTBykROcn6BxhgcYOPnxD4npGcEjdQZapejOiq6BNiAtAIF7UdPD24G\
vrNEi4yFoAUhzb+8gemlkqbG9lnNhINCq0+bWh+C1eByzoRTamivwZfm3l6tkk6wTN+\
7EbDG8ufVqPM3I9QstUkuR"}, "ClickToCopyTemplate"], LineBreakWithin -> 
                   Automatic, LineIndent -> 0, StripOnInput -> False], 
                  ItemSize -> Fit, StripOnInput -> False], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "6e539cb2-d55b-4bef-80bf-bce022b7d195"]]]]]], Appearance -> 
                   None, BoxID -> "6e539cb2-d55b-4bef-80bf-bce022b7d195", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.940560972550489`16.348133040919826*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> 
                    "\"PatrickMLenggenhager__HyperBloch-0.9.1.paclet\"", True -> 
                    StyleBox[
                    "\"PatrickMLenggenhager__HyperBloch-0.9.1.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/build/"]], Appearance -> None, BaseStyle -> 
                    "Hyperlink", Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    "OEM6eJxFjrEKwjAQhokUEfQputvo6GgRcahQGp1EShovaTRtQi5F3X1w2\
yK43c/33X8nCc4K/\
kztC1ASnBZ2mGWEUaYxsGivDTBykROcn6BxhgcYOPnxD4npGcEjdQZapejOiq6BNiAtAIF7UdPD24G\
vrNEi4yFoAUhzb+8gemlkqbG9lnNhINCq0+bWh+C1eByzoRTamivwZfm3l6tkk6wTN+\
7EbDG8ufVqPM3I9QstUkuR"}, "ClickToCopyTemplate"], LineBreakWithin -> 
                   Automatic, LineIndent -> 0, StripOnInput -> False], 
                  ItemSize -> Fit, StripOnInput -> False], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "6e539cb2-d55b-4bef-80bf-bce022b7d195"]]]]]], Appearance -> 
                   None, BoxID -> "6e539cb2-d55b-4bef-80bf-bce022b7d195", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Build result: \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/build/PatrickMLenggenhager__HyperBloch-0.9.1.\
paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"52.306685`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/build/PatrickMLenggenhager__HyperBloch-0.9.1.\
paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"52.306685`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/build/PatrickMLenggenhager__HyperBloch\""}, 
                    "FileArgument"], "]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|"File" -> 
                    File["Kernel/HyperBloch.wl"], "Hash" -> 
                    "a319e2419ce92afe2708482254d0f2fd907fa772faf7f6f8dba71e9e3\
a0c6919"|>, <|"File" -> File["Kernel/L2Primitives.m"], "Hash" -> 
                    "a06befb1e301fc8e705cf1e4393af3c281e7e47fcb27e1daa9f655b2a\
e228993"|>, <|"File" -> 
                    File["Documentation/English/Guides/HyperBlochPackage.nb"],
                     "Hash" -> 
                    "1265252762962ab9535c4552f467442cc136446662c1676cc1bdf6bb8\
e9f94bc"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
AbelianBlochHamiltonianExpression.nb"], "Hash" -> 
                    "1110d4b3f966176232de8132dceef0cb06293cc8dbdb20076db088d9c\
2edbe7f"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
AbelianBlochHamiltonian.nb"], "Hash" -> 
                    "85826ea1c5879d7ddb68631465b68bded7e3ec19c38f56f93c9b28774\
a614efc"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetCellBoundary.nb"], "Hash" -> 
                    "46a3b6b82114a1f4aff45378d49c936bc0389fbea9b9ecae6cc13f3db\
dd5b8ae"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetCellGraphEdge.nb"], "Hash" -> 
                    "493b36eb5b719498019e0b9f671d0cbf194c378d0f427e1e15fa66ad5\
b1100e8"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetCellGraphFace.nb"], "Hash" -> 
                    "586e06a703e3c23aee44fcb8e100bba0080a2ef742ce42b2cf7a771cd\
a9cb229"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetCellGraphVertex.nb"], "Hash" -> 
                    "9d6fd76fad3df14d4053b5ed6b1b5aaedd3c2149cf2e7f0763872e2bf\
e9f2591"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetEdge.nb"], "Hash" -> 
                    "292bb9e449c66912dbd05f8e5945bb58cd0f5a8c627bb618837e9109b\
f040c25"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetSchwarzTriangle.nb"], "Hash" -> 
                    "f63eba11fcdff14bf93873f30db2dee3a3bf8aebb10b5e8e579370a90\
49f613a"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetTranslatedCellGraphEdge.nb"], "Hash" -> 
                    "0db22b34e90fdfe17fba05321fb8caaf63510d99e3a1705b463a90ede\
2713c0d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetVertex.nb"], "Hash" -> 
                    "b1d95594c759233ccec48a7b89a8835de6b9f14fb5c5bdd6a9987646c\
e29f758"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetWyckoffPosition.nb"], "Hash" -> 
                    "ab2cc2a28f7202364e87942dde0166ee883ccbbd82f8f25ad536dfc3e\
cdc4824"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
HBDisclinationModelGraph.nb"], "Hash" -> 
                    "fa9a545fb339c444b92dfb09387f19fbb7198a4d1a35d1e861255bc69\
7ed9cf9"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
HBDisclinationSupercellModelGraph.nb"], "Hash" -> 
                    "41ed987b6dc5df3e9786891cd17e92b5fe36b36c3ce249a03895cd67e\
5548c4e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
HCCellGraph.nb"], "Hash" -> 
                    "586aa74c5835a9ca1417c998f6ebe9e00dcecd191610759849ebe7cba\
53ed6b5"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
HCModelGraph.nb"], "Hash" -> 
                    "40ae6c8e6c0f5999ba9fa8a67a4decc405ba7e05198eb0c64259e02aa\
da6cfd3"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
HCSupercellModelGraph.nb"], "Hash" -> 
                    "526d62fcf9b3e419a619c554a719006e8f34fe4d2572a288c89582656\
98c4c1e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ImportCellGraphString.nb"], "Hash" -> 
                    "18b613128ee063796f07b4587efabc8a8796ebdb37f9a2217ac27433e\
4caf529"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ImportModelGraphString.nb"], "Hash" -> 
                    "3d86cc24956bb21642d34be512ec8094d4af85c35190452d7fc14527f\
2111ecb"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ImportSupercellModelGraphString.nb"], "Hash" -> 
                    "7876c30ae2bebdc55d1f6fbdc5743cb8e01f651ca2568736f9f6f40a4\
5b3f60c"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
IntroduceDisclination.nb"], "Hash" -> 
                    "36518e65e6f474b4458aa83d01f1908506b5c2e705a80ebb2af757ea8\
309ff64"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
NonReciprocalAbelianBlochHamiltonianExpression.nb"], "Hash" -> 
                    "16b54f1f0b24fc7aeb42cb3e58ecf4f9bea4e079adbfbdf931a1d880e\
22478bf"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
NonReciprocalAbelianBlochHamiltonian.nb"], "Hash" -> 
                    "d4c2fac9c36833783e0a826119bcb61f0d978d4cc60721baad1474364\
8caf45b"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
NonReciprocalTBHamiltonian.nb"], "Hash" -> 
                    "01538be5e8986a4644e2b0e05f4db43498b82c5043fdb7c8e989aab7e\
fb8e051"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ShowCellBoundary.nb"], "Hash" -> 
                    "5bc24349e70d79f67ee6e8d05faa8f4eb6c7c7c688d354403bf721570\
4ddeebd"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ShowCellGraphFlattened.nb"], "Hash" -> 
                    "eceb5d52b804abf60f854b1cee6a38c1847a35272ea7bf6ee0c729733\
402fc39"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ShowCellGraph.nb"], "Hash" -> 
                    "e1244653b433c2770cf79f3414da51ec97a37e79d3244e5a9cd6aad3a\
917d11a"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ShowCellSchwarzTriangles.nb"], "Hash" -> 
                    "a297dd7abcb31c6fb9117736deb5bd5bf30b9dcc528e0d8cd2cdd4907\
7b0f52d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ShowTriangles.nb"], "Hash" -> 
                    "2697a52843e67f9f811a951a03b2719a033f42597fafccea54f01f1aa\
1d14c79"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
TBHamiltonian.nb"], "Hash" -> 
                    "06a0b65fbf6a65ff7b22c00c77de34018727c97b6362779fd98f9fd13\
4e05804"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
VisualizeCellGraph.nb"], "Hash" -> 
                    "15655ed901dbc7a3d97df320acf8cb085b52895cb85930d7674b05b0a\
e2472c4"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
VisualizeModelGraph.nb"], "Hash" -> 
                    "cecd3b359d735603bcd32005386891216e61a8f9baec657cdf3222553\
9d3110f"|>, <|"File" -> File["Documentation/English/Tutorials/BasicUsage.nb"],
                     "Hash" -> 
                    "198ed18c7ec7cb3526022556aea24ae6471ef5caa612fb12a50cc7858\
f79ef78"|>, <|"File" -> File["Resources/.DS_Store"], "Hash" -> 
                    "31225be648d63c713b9d71b6c23888f9b485768051e3fe335952b32d1\
55319c8"|>, <|"File" -> File["Resources/ExampleData/(2,3,8)_T2.1_3.hcc"], 
                    "Hash" -> 
                    "815e396b3ed55e727d940cdee4365f31ebfae34d392203ff291372ad2\
8a01153"|>, <|"File" -> File["Resources/ExampleData/(2,8,8)_T2.6_3.hcc"], 
                    "Hash" -> 
                    "a43c1bf9c0b7a906e9889e18deff7ba607e350a9946d9d34daa5276d8\
b997ff6"|>, <|"File" -> File["Resources/ExampleData/{8,3}-tess_T2.1_3.hcm"], 
                    "Hash" -> 
                    "9447e89b65319527a9f6894fdc552e880caf6bdbcf5c7db04cd72d8ac\
89a0f45"|>, <|"File" -> 
                    File["Resources/ExampleData/{8,3}-tess_T2.1_3_sc-T5.1.\
hcs"], "Hash" -> 
                    "e44c57247643aef50a268f56274481d228c81f252cff5b08ddd83f6fc\
68b6ded"|>, <|"File" -> File["Resources/ExampleData/{8,8}-tess_T2.6_3.hcm"], 
                    "Hash" -> 
                    "abc6acebf293283097dfc08a303619554f8bc6f39c05e038865be16d6\
cd60f70"|>, <|"File" -> 
                    File["Resources/ExampleData/{8,8}-tess_T2.6_3_sc-T3.11.\
hcs"], "Hash" -> 
                    "96ae484afd2baf08e2fb80475bca3bcfc54064b2b2f9be50161cfa631\
96ffcfa"|>, <|"File" -> File["Resources/ExampleData/.DS_Store"], "Hash" -> 
                    "cc05ae7b546d9bdf5008617de947cb3e5082de8c404c961c92b4b0411\
0dce218"|>, <|"File" -> File["Resources/ExampleData/generate_example_data.g"],
                     "Hash" -> 
                    "4a9908c2cecebbf21747ff0b38a04fc527389bdf447401415314469f6\
c411f0d"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 44], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 44], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 
                    2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/HyperBloch.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a319e2419ce92afe2708482254d0f2fd907fa772faf7f6f8dba71e9e3\
a0c6919", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/L2Primitives.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a06befb1e301fc8e705cf1e4393af3c281e7e47fcb27e1daa9f655b2a\
e228993", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Documentation/English/Guides/HyperBlochPackage.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "1265252762962ab9535c4552f467442cc136446662c1676cc1bdf6bb8\
e9f94bc", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
AbelianBlochHamiltonianExpression.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "1110d4b3f966176232de8132dceef0cb06293cc8dbdb20076db088d9c\
2edbe7f", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
AbelianBlochHamiltonian.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "85826ea1c5879d7ddb68631465b68bded7e3ec19c38f56f93c9b28774\
a614efc", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetCellBoundary.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "46a3b6b82114a1f4aff45378d49c936bc0389fbea9b9ecae6cc13f3db\
dd5b8ae", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetCellGraphEdge.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "493b36eb5b719498019e0b9f671d0cbf194c378d0f427e1e15fa66ad5\
b1100e8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetCellGraphFace.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "586e06a703e3c23aee44fcb8e100bba0080a2ef742ce42b2cf7a771cd\
a9cb229", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetCellGraphVertex.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "9d6fd76fad3df14d4053b5ed6b1b5aaedd3c2149cf2e7f0763872e2bf\
e9f2591", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/GetEdge.nb"]\
, 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "292bb9e449c66912dbd05f8e5945bb58cd0f5a8c627bb618837e9109b\
f040c25", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetSchwarzTriangle.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "f63eba11fcdff14bf93873f30db2dee3a3bf8aebb10b5e8e579370a90\
49f613a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetTranslatedCellGraphEdge.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "0db22b34e90fdfe17fba05321fb8caaf63510d99e3a1705b463a90ede\
2713c0d", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/GetVertex.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "b1d95594c759233ccec48a7b89a8835de6b9f14fb5c5bdd6a9987646c\
e29f758", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetWyckoffPosition.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "ab2cc2a28f7202364e87942dde0166ee883ccbbd82f8f25ad536dfc3e\
cdc4824", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
HBDisclinationModelGraph.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "fa9a545fb339c444b92dfb09387f19fbb7198a4d1a35d1e861255bc69\
7ed9cf9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
HBDisclinationSupercellModelGraph.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "41ed987b6dc5df3e9786891cd17e92b5fe36b36c3ce249a03895cd67e\
5548c4e", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/HCCellGraph.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "586aa74c5835a9ca1417c998f6ebe9e00dcecd191610759849ebe7cba\
53ed6b5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
HCModelGraph.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "40ae6c8e6c0f5999ba9fa8a67a4decc405ba7e05198eb0c64259e02aa\
da6cfd3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
HCSupercellModelGraph.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "526d62fcf9b3e419a619c554a719006e8f34fe4d2572a288c89582656\
98c4c1e", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ImportCellGraphString.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "18b613128ee063796f07b4587efabc8a8796ebdb37f9a2217ac27433e\
4caf529", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["44 total \:203a ", ""], 
                    Style[
                    Superscript["44 total \:203a ", ""], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 2]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "Item", False], "Mouse"], 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                    Background -> GrayLevel[0.98]], SpanFromLeft}}, 
                    BaseStyle -> {ContextMenu -> Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> GrayLevel[
                    0.7490196078431373], Spacings -> {0, 0}, Alignment -> 
                    Left, BaseStyle -> {FontFamily -> "Source Sans Pro", 
                    FontSize -> 14, FontWeight -> Plain}], LineBreakWithin -> 
                    False, ContextMenu -> {}, NumberMarks -> False, 
                    ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Dynamic[
                    Replace[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
                    Except[
                    Alternatives[
                    Blank[Spacer], ""]]] :> 
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`bar]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"37.579719`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], ButtonFunction :> (
                    Typeset`open$$ = False), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"37.579719`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"2.513888`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
HCSupercellModelGraph.nb\""}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/Guides/HyperBlochPackage.nb\"\
", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.696725`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.696725`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> 
                    False}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
AbelianBlochHamiltonianExpression.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.558906`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.558906`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
AbelianBlochHamiltonian.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.220374`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource["FEBitmaps", 
                    "SummaryBoxCloser"]], ButtonFunction :> (Typeset`open$$ = 
                    False), Appearance -> None, BaseStyle -> {}, Evaluator -> 
                    Automatic, Method -> "Preemptive"], Alignment -> {Center, 
                    Center}, ImageSize -> Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.220374`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
GetCellGraphEdge.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.764585`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.764585`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
GetCellGraphFace.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.274006`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.274006`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
GetCellGraphVertex.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.607635`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"1.607635`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
GetTranslatedCellGraphEdge.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.47675`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.47675`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
HBDisclinationModelGraph.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.346311`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.346311`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
HBDisclinationSupercellModelGraph.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.188008`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.188008`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
HCCellGraph.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.544617`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.544617`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
HCModelGraph.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.010397`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.010397`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
HCSupercellModelGraph.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.513888`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.513888`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
IntroduceDisclination.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.073566`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.073566`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
NonReciprocalAbelianBlochHamiltonianExpression.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.112386`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.112386`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
NonReciprocalAbelianBlochHamiltonian.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.397696`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.397696`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
NonReciprocalTBHamiltonian.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.345538`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.345538`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
ShowCellBoundary.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.941302`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.941302`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
ShowCellGraphFlattened.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.220222`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.220222`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
ShowCellGraph.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.513317`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.513317`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
TBHamiltonian.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.356924`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.356924`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
VisualizeModelGraph.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.381363`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.381363`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}]}], 
                    "\[RightAssociation]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["21", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["21", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"TargetWolframVersionNumber\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["13.`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztfVuMHNl5Hodz4WW5JFfLlWxZiSZjOlnJO8M6p+\
6SLO6wSS6pJblc1izXhmVxz3WmxZ7ucVc3ydmFAttQbCCxY+\
gS2Yr0IDiwAT8ERmLYMgIosWMLAgLDQp5s5MWKF1CQlyiCIVlGDCjfqb5P93C7epqcafaZxXKmu6rO\
+c9//f7/XErPpEdvsfsXKg9UqufTZ66Wa6q6VVU1VitWyvhaz6QLtyrmBj2Xzl0rpjV9OF1YY+\
v4JjmS1IVQaZo8ldQ3N1l1+4piMpn5WT2bnr64XWabRXG9IuslZR4/\
3H58NlG19OTa9pZKVe2NypYqnz2bzl9mpVS1rp5pXVWbXMkE5KizZ5P5W2h/G/c8taY2t0r4skFho+\
HZ9NRNVlaJKilRq1R7+5y7BTJancynR16qFmXvw63fR0wj5tJCeuxCvVZrseF4c0SNdt97+\
dLNavEeSHjjcrVSrl0qy1sqrdSrQiXHLl+\
6UKxtsq00Od1kDB56BeNUVUO8IeWiKrFtJdOTjS4u18vCcHw37sytVeuqPYzjq1tbilVZGcyfu1Epd\
64cu8BSldS2S0of2jH2Y5fusVKdgTPpsdV6rbIJEYv21YXrqrZRkcnxm1UF3taK97oaXS0V18ubqlx\
rMTRdKCijKa3fnVuvbrJ1lRTfVODYkSbH2k/19Du/\
VtxUafVQ9nPixfY3ePBEoV6touHbIFglT18Gfwts64oqrm8YEuZvVu6jz5n0zCpPK6V6TXXfnz59na\
2Xi7ooMh0u/BDiPnq5yjYzoc6mRzP2GPWdX/qbL39uCQ0eu1isQmfMmHH91ksXCpVSpVp9T/bzl+\
erz2Y/b5+v/nT281fnCz/aHvGJpFYtbr1Svlreqtc6Wty4eLIA0kHYTSZlsby+8/\
LxjKyMnh1yPJFduc6q68Vy2q3G5nfhUOHQzr93p2Who+\
ytdmbav1u2PbvTtncaWfPR5NTSTSZKqrZaFRvg11Iyt/\
ShxaXkONq5qDSrl2rJc02dv1pTm6vlcqXhS5LZ7/zaV7p8x6dnls69lkKFzm2VVHl9/\
dzFiqgbHUvPwZCg3WLj3BUYQZVXSkVxjdWgNSo9d7Na+\
SRElTauXShVcFuDonO8XixJfAAPxN3r10yjqrwBdazeudO5e9lZiVfIylb2zFLbcxli98KXp5bWMNC\
S0eCReYLeetpuOtzkuE9XXCcIIv+NZHYpXUqOpEpUyjJNji0ljb+\
WkqOv1lm5Vqxtd7Qr2S7X2IPLlepmOgs/3DvW1l2nm8rRZ+OtO5IjsIb6ZjntYk/\
DnOeuKd25bQ7D7b9ngKs5br6C/1M1tdMgTjWJMRRmTmRoWvr7GZ6gVq8JlMJY6dC9Fg7n76zLQ8/\
t8NBnko3KfWPC5fXCBty7MB52J4ueulFHSKzCNdztu3YSIQnOBr6smBrXN9uRctZ0pg8Nd7Pz0UesB\
rNrla2DqwCnjUxKxbK6WUmLzTDcEPBMYaZ9VyMG7wt2KJQq6cjYYWfQseDBgocRwMOCBQ8WPOx9rO9\
eumBY3WB7w3Qq1e3Rh92XnyZzl4tw/shCB+\
eJyf390Z2l5IQhbLW6nvWWzPzc2Hh6umlX1xlcl0pro3NzvkudWn8tDEjmj/Um88sm5CTbKdp+\
4wYIUNJ4jTdA1V2woRXszqaNPH71XcvJU1fLiLSsdJHV2OrMcjJveJPqFxrtrh5ebojRcCUT55mXVb\
WsSl3cX7lfwk1XWLqRvMhcEivqkViomDKtaOhEXkSp70lHUy1jJ9QsDKlmOtSBjiRnIVGxcpkjgpjE\
/f091+zvGgX1m0Xj3tOVzU6HTsCV5kS5DtEiUqHjC02U58Yu066gEVGh8kItOA0VkYzFOvB9TpmiNI\
pjt79D0lLDTC7nLpXXS8V049xL9aJU3UrX5OlKmbeJITTwqU/DgMYBZTz2XV94vk+\
1F4SeR4UgbuB5QRBQQYIwwGcudcB5pGIde1z0E/\
PqYGJuKa0QKoW6CQrSc8n2JmwkPbfKAZ5YOSPvCvSkBFCCz5cebFUBNNFAD7GEONLjro6DgIBkl0oV\
EfwrlNKO4A5G4QoBEUlOHScMJHeiSMaCKslVqPuJfWkcxHaTGPkRDRQjwo/\
CWIZS8iAKXOIFPv7gUslQuUpA2dxI+4EGuTGnURh6LCCe0gP4eT4XiS+\
pWkGVShcq9bKExXaT5gXM5QGPKCEeI9pjWnu+\
G0bSi0XsBlw4bhRrrljMYyWYMsJ2tQtmSp9HTPWT9uIopL1UZVsbl2SvGnqxy91AcZ+\
HJPbiyIFNOhyKHxIJwWp8KQypjvaMUSjiaxYEDIRBJRwVjZO2y0z00OZHgXICFjqugnW6TCnPg3FGC\
j1zzhwnchhVOoS1KI9yKnQIf0GEZDFMmA5wEBdGpu22qtbUg27qYhloGQaaSVdq4knP8V3uKxlwwn3\
GlJQgmkDEmsICYBNuFFJFuYYBUz8m/\
dSFeanbKUwaUw4V8tBpAA9JoUGOryPlx57PuR8JiNFnkQhoyHlAosgNVUycmGvHcwT1x8CwRGzcZ9U\
316owz/VSD3U6cBVnBK5XajCMwwajEHruwGdIBbfucg1t55w44COoDmM3dFjseFBH4rJ+\
6j6Wl7o1ZFCpCcRyV4Mw1FDueip2tNSKhBqa5ruUaB4JxjAIH74wNmGIIIBwL3BBopIIX8QVjuynMs\
5LZb+ucSJjH1IUoR9TF55WCS9iIY9iBiH6UgUwWeJp7gsfXiNgcRyFgRcIRWMd+\
gOsNLdgX98Wdytat5LtbuoYTE9QRiMdUocibCm4YI9KqRwSBEqBRCE4lxHVEVQfzsMNpBZwxxLDoF4\
/dVdyUXflwsViKkrFcnY38I5qiLZH+VjMfM/X3HVj4Xkej6nU3DEqCB+nuXF/EfMkYWAnUVFAKEI/\
cEaoEMb0AF+\
SL9z20pjUgQwEVHAwsR5Bp1HIAyl8qV0Vh1EQxXBsBPZKua8VooYbCBfy9WJmwocvZBAq3/\
ci4Q0IGB/OR2yhbR47/DFjoYcI6/pwsYx4JBTQNI34AVzmOIADoDEmAXGgqJEX4/\
tQcOa7xi0OcC8fyUnWLuxyTMyM8D/cWxzHHMCNRSwIIU8lBBwzkKNyfEhYcWBHD+\
5XOZQxyQKh5QBcdyknXe8gT58GMqAaasRdBcALyBELyAp4NnacQEXa9bTyJPVDY0aRgDyBZvwghjQF\
GSDPfARe3dyqVDuxrFGt7MF3EcKBS2ikEHDdMA4Qr7gHJIU8hIuIwZ4hY8ndUMeMUhIyQUPPxWAE0/\
6gSHt5BAI7zOun0JURYBG03QcGpgQylK7HlU+oEpETI/wyHfkCzhnxwqcSKJ7gd6gBuogSvJ/\
CV0agcICc+0kN4XqFC52kHDyDnCVB+mL+\
AssMfEH2EfhEMOoHCIDAorgMHUaMdnXgDECiOaVdrlWR8wnV7XF6eIneYS2+\
Qrehxz0ImrHIlaAL3It8pEk+kDuiG4scxGMkZ6EfKtzixFoHA/\
z1J3IReKNSvqVEcataEayULw8BZZ4m2uEUSDAEWAD2g035kRLag3kp5iknjJnkYDgABmFERhgEpV4Y\
8QF5yNrYKe+mV3oC6atA0hFELmC0qxwGwyYk5gIWpwEkTBogROCElHB4JAKJIIICaiBHGKC1+\
SBPD71rF3ah0iG+\
G8GWVBTDw3tIO6G6Dhym9iT3XGQFyF2E73iuljyEo42BOxiHczDK7A9AsvlyADPNsVvuhBhMDQnQRh\
matEQp+EsDa6Gy2lM8ECH+\
C5Btur7nOcCQ4KQfOh7gB8xvr56pRVsjQQF0rKmykt0UKoHsSfqUR47HOAwYfsjjBJkx0r5IkMgLgS\
kosD8AG0KlckRI49B1PQchwR3gO39qdAp7CCPUQ/rrQoTIRMLQQX4UI9IgV2E+\
fGIMukKFZNnFfcpEdABHZDMsJqEkZADezgfLWoTtSAnSHugITkgZIshwlwh4yZiQED5RmowUSSayAx\
5LIXyEJkcigaFCIm12wpAj1tMB4s3PvIGEUSA/\
hl49VwUIejoCQ2KfAGtxAH2DuVxtcESomQYcB7bUxn0y+\
BsCmL5nqe5urAFzeAAgqwOGXzpEuiIc6FQoFVSKIMkEKAN2dJHlQd4AkiBfEmQ0jg8V3WsqcLuY1lm\
p+KYaqHPED3zkwLFDJId/duHfAGCpw4SOBEds4eApwCqP/BiJXxgg/\
gCemWDphVQMoK4wGnWDgZjBpy53/\
ViGrh9AlvhIHaR3Gb4GrFABgVsBglQi8ENhaKdIBFwYCSHOgPixPJi8tXqtArUCRRdYWhSvpTurf4C\
ikkQiVHBeIIgGjuknYIpRD2jWC4nSPvJN5CGaE8p8R4gw8pFixUqHAxK6Z1uzkem5lYvJnQT9q07EJ\
2ido9lIBq5AogqjCgl8J3WjyIzXi/\
wwiODLlYvkAgyCP3OpJBg6oOqA7p7vdHfpAdvcKilTFD73PH3BfSH6wJ01ukLuuCsbQnQKdMRXboy8\
RUmoCLRUxp4j4KQR73ztEsU1gwZLN6bUcbWmMXEBhyWNmEMQofLQEDVpCHbQwADACNexcHiIrD1AJI\
tiRSKpjCExRGHl+g6yZy+\
QEDkcJTMlWhnxGJaug34afnIwDW9FL7ifWq4BwXRY0SlEx54XItjCjMFddGAKzVHsaQMWKdJlB9E/\
ANwWUIFQcscTMqQyYsgLmANc0E+\
GOyQZd1KxvOavEJCTdgKFh5wuhAEGnsugdg6jgSmSAuJ7EZGUIiEhSNyp0Bq2GkkpIyBVjaiLFFUNc\
MK7cyXqkBPs4AqCQMAQTCF5lxqsCdchnIi5jot8CemSjnCHRv7u+\
Ao5bxRApQkyK8QtR4dOPxnekGRkXHFXSC9bYlijFyGvkJQz7UQKlggHGgKSMHgOLXzPCTxOOTXA03e\
Q9grNAog00Mj1BsTP9w+\
mp99eBYbIVAiwCz0EkPUdJwoQlVXshRnedSJTgUdq64kY3caUw496pkovFCUD7HV5cNfrZnkjq6k7q\
vHlHYlvV9Y7qTVswYkEFQblQDIk9GAHDndhlEDg0F03MgRCoRF7PJgpAeaAOgsQA3i7nJxcLZUq9y+\
ZFaHZhHi2IGM5OdGcSko22JaZBP/xrsmo5mxJIipb6g2zOlVVs9tWZ5db02vpLJrN/\
sEIF3d79mW1fbG+ubltVoQMeLTBol0umfEXZvRc+\
v7dWr9mppiUBAG7Et9Y99Ia4088hM7Gwofsxpn0n+\
x242qtspndVJ3JFlFce3GMBA7V0q68vlW53xBSl+q98zgKH2mq2nCjzgb9C7/4Iu4+\
3ZiGVvJqWRehS0bIh9vrTtqCLJwZfG9nkZO5aWaXm5orajozn4ZEs1C6i9TVNK0IPH+q+\
ztQnC40SgOg6ZmuS7ezufMdX+LOumiv9mhOhjf40ln+\
2ddBi8279Vx4AbqdzF1XNbZ6aDk5BhGtseq6qhXOwAAbom9+\
cXw5mbemaE1xAkxxbhJt8CarbXSG8MzFYrqVLQeEqAqVerlmbjrT/\
rahCo0LkOEJE6q77zxlvthx07GkUq2ZbtJOPyfNd82VbpVy94UrRSlV2SwrSa+\
zrXTuRr1UWk6Ov7aF+K/MUAozqTPc+\
pBKvbZVr129ePZsa2HJC8M9uAVi8dCh3lUpQz5872YlPXs2W+\
iZ57GN0R5bx5cgdTZ9umdRTdcyvaw1MlRrSFvhRhvXzMKhi2qrVNnW8+l8YxnnkXQuu/\
TuvpWqc9maI/w2K1bx+3hnTZBZ03i9Uk9V5Z6qmjWNWe5bFGn/qtD2gs3CwkMW04KwRLCSklU3+/\
nT/9LTasckjuG77Wvqnio173z7vFkJerNS2l5HO13rpZu/\
G4s5Mw9x9FZGPCsVfph9bqwHLfzw4XcN09AQTw/V1/\
gaGm5oexURvhxOC88mpaIw603vZgtrV4Z6qGTqyFcqJTmCc+\
gL7Okcgm2aHG1Bg0ZqkMxnajxoffHORbEmt4HfGrS4+UT21G6raecbi+yzv+cK8531kxdA/\
nrVlKF7FVtnP//n/\
MMWSGcr6tOjLSm9o7meuHQPj19hZVnKllOfysbdWefdY9HNOH646SPaH5vUZOulzQrmntXMn/2M+\
fnv56sk+/mf56s/k/387/\
PJ0WvF8l3T947l6e3wdyLrugAduYt4ZPzl4asaTAmHkrvYUOJuti2RmUXWiOA5Vxvqw3phSB2rZzEr\
222Ys5N8gSpfZMoXkHLGodzmuj8G3gL1E+\
WVmsCvmR41Uh7rmR7mmZoQueWZWojZeibrmQ6uZ2rWFCbLM2U12SfcMw2V6uTzUM1tCm0X1f5sfZT1\
UQfFR3V2Es0iIWrq6MH2UANJzsrMTefU2I84vHdql1IPtJM6/\
FDn9NC9TwdZmrO7KGDzc7MempUM88q18JFxC/Tozr3mAzvYXUx73302yaLMcMRoomzX/\
fdBoi1E9HSyxcqXq5XNVV65N6w9Dt4bOHlSPPzEGuQed2dOsiin0SDz752dPAnPPqnGutfdy5Msymk\
01vHvLZ88DZh7Yo15j7v7J1mU02jM4zp7YfLkPv+kmvBeT7+\
YZFFOownv9WySyZP3wpNquns9HWaSRTmNprvns3smT+BHnljb3ePpSZMsSmu7I5xtNXkCP/\
qk2u5eTxebZFFOo+2O4ey3yRP5sSfVevd6+\
t4ki3IarXfUsxEnT87Hn1ST3evplJMsymk02TGcHTp5In/qSbXevZ7eOsminEbrHePZupMn+\
hNPqhXv9XTjSRblNFrx6GdPT56kn35SjXavp39Psiin0WjHcDb75In85JNqvXs9HX+\
SRTmN1ju2dxdMnuBPPak2vNe3R0yyKKfRhsf/bo/J04DTT6ox7/XtKpMsymk05r28+\
2byZP3Mk2q2e3370CSLchrNdk/vhpo8Yb/rSbXbvb6da5JFOY12O553p02e1J99Ug14r2+\
vm2RRWgMe9d2Ckyf1M0+qAe/17Y6TLMony4DnmoI+PI5z8fDhqSz4pqJa3KolT3veYg1tlRb/5hf+\
02JySLcOzBviRnuSnj1JbwgDfywuYfBJeocPshcbfJLew9zWaJ7nmDnErmXTPY/0GOzN7Odb5/v/\
KBxtt/VUAcauHtSuq3Jdz3daMZ8zB/ePzMsVF8ni9UpVLd7Cn6y2uLZRTBezo/\
cw1qcbR3JdeqBEvWac23DSYfKT9bSWvQclhXU2HKW1uHEpYzIHWaXo6ejlelk0AwvNK5kL20apk1Kl\
Zt74o7tf8dLWoKeNqly6x0p1VqtUe8NfR43+\
caZGfluNUqtH06pH8zn1KD0GOJG9L6k6QKXI4mV1X1Wta5pmlfrhXlzT+\
5uuqa1H1jdNrSL9v7yK1MZkQ504nN266zHGH//1//q95z/+nfPpiVa+aFoYBPu6XsfUj+\
Jm0iPN91vh+\
rsKlc0t01Xn2LY0Go7RotPmWrW4vg73u5DOv75RFObNEEdeK6dsU706JMPPllhae6UpuseCxjtvzJp\
PMkJHHnb6keGHWOh/2h/p6cY7AQZLUDffVLY3ukZXg2b3ow3MCMQcQ3a3nS/\
la269VOGslIhqpVSCY2qb2yN0faaP14u1DX2sl+IhlRjjN6/0Ozvk/WdbD7S6Gc7CWk+Zm8/\
mscrWQ/m6K6bXFNONI+LPph/K193VrofzdbuRPdN48WH2qsLVrOq0cJ3VxEYuZ9Q17BOrJYBLs/\
DrXs/R971v6Rg6uHTT+GpeoecubTW4d264sFcqdViX85EDNpLydu6RtB55XCNxh3oq7X67pymFD+\
eXReNFsz2vBs3rX2ZyDqz79aS5n935GtNcPnSD3ctedW5w5eyNSi0DfaxYqlfVq0PXkc1b0VNVa74E\
2jQ3omCHAyPFtPVOxDbVCH2Xq0rlV8DsJYtmPuFjlWK5PV0ym5XR8e8r1WYPI7Izt9HlZ0F6BP1smL\
f4duVeYMjxxlyjGVcyn2Vi+mgHZc5f+vk6K40SARt118b8x+\
iNdMWCWfy5t8Z6okmy0PjUfPfTof4s00xaBDkmLbreBmyTzH2cusgLC5OFqtpsTuy/Y9nCGPzcXgx+\
2GhpZH1pc6u2/\
aij5QjetAH7cmOeUSDmUG4L9yrrtqzbmi63NcukzFu9b7ivzHrzO658SV6PEvcleb1K3Xl79QjJb04\
M1UnB5npgXFdJbZTEITm2mgpVljtcVTJnYPdgKx2O4OaKCLRizXP/\
jK1Luu9scl0xaxyadfyiGqhaJ26pe6qaqkWrYk+CinWL+XHrWDp3o5KthOto1wLas3o1+\
XrVFO3wGtWNGFqTOINWJr23UNnaXmwdl7FYqywWSsUtXmFV2a80M0Ni0lqlUK9WVbnWandIzRGgxXQ\
/bBKXG/50j/zd2cjN9+8w6mEr1u1Rj1AUGzuDBipCj+BvQrdUR/LF8uINdX/RrF4fp+\
CHk5DZ85LR83gk3xh6JvqHDvuxSH7sHOpElfZkuVmMfNm8sGg7OZVU6lUBuMHK6eLNaqWzFNvcZJZi\
F072Pvi6Kq5v1NL5myVWLHduv1i8VzRvNu6d5D9+uYr41Zhg75mX/8HfmZ//\
1Xm98NFkiwmjoO3lmYcKXeun20sBGksABk3gz+\
6YwH8Uwzx1rVhWF6qK3TVzl8Vycw3q4EUDh3auKLhR3+\
SqalbPpjsfPGnKtEZm2Vi6LmfF8eF0qNgowr/\
anubuWrMwnOamqlbful1U97OaU66AjXAyeFa9sSo9y+\
byDSPLTiuy3rMkNwc7aptb5uuz6ZGzZlojWzqf7/FWOX+\
4eN6cChllDmT2YSsS8o22iR275nJyjnfIdVjwbzD3xjU9MzR8bDxmrlj4OD74mFOju41yNE1pqFpTQ\
fMrTF4LnrtRz4LKKM6w4Ukf6VKWfpMbxYbS57oeQjSspqp54UTXhSvJjzxvPM1iubJYqpTXVXXROAx\
Exg+M0mvv5qL05FqVmf1EzT2Mj2khUA8JzzaDVsP13wagUWlXKM0xwX22Vtm6wKpZF+\
1QODNkKNxkd1UGXiSaQAP/tOup5q0J8Ld6I6nzVsTkkFm+oGm3UO2n33wn7Z/Jp/\
1Nmebyimd5pQag3qem+POW2iqxbGdi688h067NbGtje/fj2bM717bqwwd2w1fT1R8y6xlZ+\
W42adez/fEA71WDoOAFzIRI+sGh54PPtsfa/\
fxwxG61p2IGtTHKtEu7nYWBiBQp3NWyqKosEdvzWte8c+B5mJprAWTP2sXcvG92tYflmiOJKv8IH+\
tS8WFTThNnM9ZXgZ3yiHjItc2t9i+VGlq70+c3/\
M1MumDqD6paOL7T4bRN4iH3dFnd80NRBaRg2rv0QKit2s6JVFxpdNnqMFsSMKTvb8OWFiAZnqAho+\
GIQWjk4HU4faYZFV+vsq0tVb1QeWBWizS/bHw6slbBH+DdsfTdFxuJ+\
BvN31lJplwrHG6Fv2SuuVJzLtPtvNG92UYTm+\
dqowltWm3MZ4Cu3UjuhZNNSm6bJfs5KbnXXoTfaOPKCG1s9LaxsJbB7XYr+\
UF6o51jF1qQqN3USFiq0drRLq8399jWfZyAZM0bpeXlSnVz2CTr0QD7ts5l4WJUIzzUOjGj+\
1CN3lE11wAX32xdzrGut3eT0fFCVeHb116D1PJlh31F4Zkdl3Yv4PZ0c9pMvN5T8jarFhkvqY73y68\
LCxeB3ivbbRJOX1Sa1Uu1NpFJ646Z9Edavis7mgO4q9ZyYjOd8nSiSkrUMrJ2VJGPXpLFgRfe1XjGj\
LnpDtPmarOnkvrmJqtuZ2vwOqctLNyq3DeetVNUX1hj6w1f+9Sa2twy77NpfGwcR/\
JjSz2HI12oF0vylkoxznQpmVv60OJSchxtNseePNfVbdeJPLPf+bWvdPXVR0cy85aeT59pc6fRV8+\
dczspTo4kdYHkKW2P1UCoZOZn0ejpHnXqGk9LfU9mkBACQapvglhvXf5M66ra5LDn5qr8+\
Vtof3sno2ba062nzAk1DYFUqr19NqTV7GQ+PWJ0q/fh1u8jphFzaQHqXoffa7KhNyy+9/\
KllkperkLwl8pGKNlcSHLs8qULxdom20qT003G4KFXME7VjwUaXXTtCR3IndbEQ1NRO8fr7Jiw7jLQ\
Ptt96JbQheuqtlGRyfGbVQXeGrg0YI6o7VEXCspoSut359bO0UY9OzsbT/\
X0O79W3FRp48SjQydebH9jynLNab7MCyVPZ0f8sK0r2cSRue9m5X6WeZ5Z5WmlVK+p7vvTp6+\
z9XJRF0Wmw4UfQtxHM+TWUPejGXuM+s4v/c2XP7eEBo8113bcUz1nkrwn+/nL89Vns5+3z1d/\
Ovv5q/OFH22P+IRZW7v1SvlqGW6pb/\
Kp6RNuMmlWquy83DWJt0OOJ7Iru5210pzA65vMG0jLQkfZD7e90Mje6NjSdRg8ZDyy70mWex3aIjce\
bVEgKS4peP3FtOFUNNKH7ZWlsfnRp5bWzAFSRsdG95uzvW03XWJy3A1X/\
DAOSfxGMrsEv3wkVUjPZQp+JY2/lpKjr9ZZuVasdQLW8WQbTHhgoEw6C0/\
ZO9Z2WGuKr88K21DsSHOZcxd7unZ1d7Bocwd67z0DnMFx8xU8FMSxU2VPNYnZeZ7YO9PS38/\
wBLV63TmV/Y69ducmw3b2kK3rZ8xkcmMxfWGDmRO+\
zMT8zqnqh81GI2jAHcDbFE3dp3FmUkPKWdOZPuycqX4sajCLJOPgKsDp1sEErQUvbf830wXgGlFyX6\
J7oVRJR47uO8OCDe82vI8Q3p+\
y4X2CwvsexvrM0nX2oLhZ3zSH9u1txAMTwX6SdmHMMbriEzeKor3xZeaF5AszS+\
degwdNz0FNyuvr51pKlJ6D54U3FBvnrsBrVnmlVBTXWA1eRqXnblYrn4Rpp41r5qSOjXM3mYCmnRvL\
meBLycynxia200sg1+i+ktlpi+OU2ux3Pv25rq8/sBuVyS89Jka/VC9K1X17s5CTMXX2O5//\
LVtusOUGi0eeZDwyhnLD0aXVTFFHhyNHlrKK6fiAxsLSI8EYx5yVIA5C6tsKgq0g2AqCrSDYCoKN2I\
87Ys/22pGN2I87Yu9hlPNLuD4615/tJKc3KjXFK5W7SxZNWDRh0UR+\
NNGJbDsD9YA42NV8cqJpbwZilHZCgYet0Elmfg63twskz/TZ8urh5WSh4ZmT+cy/\
Lidzxi3isbaTqr75jQ986LMvf/\
t8cqTpwbrc1jjXxsy8MKAy9Vv7WwJc5RAoK2cNXDGbWwG78LmzSNtWrmzlyuLgqcDBtnKVBweTFd+\
PYiewlSuLNS3WtJUrW7myEdtWrqYsYtvKlUUTFk1MOpqY2MrVJ778g0++9N0f7E/\
l6jcPZOXK1qtsvcqi36lAv7ZelQ/\
9Uuq4oWfrVRZhWoRp61W2XmUjtq1XTVnEtvUqiyYsmph0NDGx9aqlaOXt3/\
nlv92fetVn9rde9ZKqmfdAZHssL0m7JdAWqizsnRLYawtV+WBvGHh+\
ZLcEWmhpoaUtVNlClY3YtlA1bRHbFqosmrBoYtLRxMQWqr5JFt/62of/\
YeoLVZeZsIUqW6iysHc6YK8tVOWBvXSFhp5jdwBaaGmhpS1U2UKVjdi2UDV1EdsWqiyasGhi0tHExB\
aqFgvfOPlBcvjFfSlUfe7gFKpuq2pNPbClKluqssB3KoCvLVXlm6ENnDBw7ZoqCy4tuLSlKluqshHb\
lqqmLWLbUpVFExZNTDqamNhS1VffvPHmX//R3+/Pmqov7Xupag2IKTV+\
VdptgLZkZQHw9AFgW7LKAYCPkhUvDEJbsbIY02JMW7GyFSsbsG3FasoCti1YWTBhwcSkg4mJLVitvf\
3bX/qzr/zd/hSsvri/\
BasrFy4WUwGZZneDyapRsrLlKluusuh3KtCvLVfl21rgeoFLiK1XWYhpIaatV9l6lY3Ytl41ZRHbFq\
wsmrBoYtLRxMQWrL71vS/+/ke/vk+bAX/\
rIBWskjoaE6pUspUrW7myOHjKcLCtXOXDwSSKHCeylSuLNS3WtJUrW7myEdtWrqYsYtvKlUUTFk1MO\
pqY2MrVlfd86fbxX5zZn8rVr+\
5z5arQ3hBoa1S2RmUR71QgXlujyncahu95AQltjcqiSosqbY3K1qhsxLY1qimL2LZGZdGERROTjiYm\
tkb1B7/ytZt//Ic/2J/tgL+\
23zUqu5DKFqks5J0yyGuLVPmmZR3iuLEtUllYaWGlLVLZIpWN2LZINW0R2xapLJqwaGLS0cTEFqm+/\
c2vzr/83KH9WUj1hf0uUtltf7ZaZbHvtGJfW63Kh3194kaR3fZn8aXFl7ZaZatVNmLbatW0RWxbrbJ\
owqKJSUcTE1ut2qz9xSs//\
765qaxWXS3XquCsUN3nVtlqla1WWew7FdjXVqtyztSGrh8Etlpl8aXFl7ZaZatVNmLbatWURWxbrbJ\
owqKJSUcTE1ut+pNvvPH13/3CPq2t+\
r39rVYhvN6CGWyBc6y0yiFdVs5auwKml4DB8PnSg60q2GrLWLaMZUHxtIBiW8bKdyoGIdSNbBnLAk8\
LPG0Zy5axbMS2Zaxpi9i2jGXRhEUTk44mJraM9bX0+cJrf/7d/\
TnH6rcPfhnLFq9s8cpC4amAwrZ4lQ8Ku3EYxLZ4ZeGmhZu2eGWLVzZi2+\
LVtEVsW7yyaMKiiUlHExNbvHrm0Pve+v7Hv78/xasvHaDi1doFW7KyJSsLgKcNANuSVU4A7Pm+aw+\
5siDTgkxbsrIlKxuxbclq2iK2LVlZNGHRxKSjiYktWX1y/Tf/x61f+d7+lKw+\
s78lK6PvBVUqXajUyxIysIUqW6iysHcqYK8tVOWDvbFHXIfaQpWFlhZa2kKVLVTZiG0LVVMWsW2hyq\
IJiyYmHU1MbKHqr3/13/7eZ0/9cH8KVb9xMApV2TsDL8O7gmAlbbnKlqss+\
J0K8GvLVfkOd6XUodSWqyzAtADTlqtsucpGbFuumraIbctVFk1YNDHpaGJiy1X/4Vv//I9n/\
3Rmf45j/9cHqFxlq1S2SmUx71RgXlulyv3CbJeEtkplcaXFlbZKZatUNmLbKtWURWxbpbJowqKJSUc\
TE1ul+s9/9dZ3L/\
3Y3FRWqewZVbZKZTHv9GFeW6XKeeKFH8TUs1UqiystrrRVKlulshHbVqmmLGLbKpVFExZNTDqamNgq\
1Y//i//4f7/3B/t0RtXn97dKdbuY1lkJAgF/\
lV1RZWtVFvlOEfK1tap887NuRNzAtbUqiy4turS1KlurshHb1qqmLGLbWpVFExZNTDqamNha1SsfWX\
/q6NOzj3xF1ex3Pv35sTm+\
dy1dZsWSkpfxT1qo1Mu10b3gjDNGsm4qoL1yLROKkkqOPQLNE8dZMdHnJxB9tpq9HWv1u5ScagkWWl\
rTxQePPgg914ki4xDHYUrGRtq7l5rWoeulg0bbs0vJ3SIg+\
0HT4fcBU1TXVe31SkkDb95GdEGHjXgyOoFzxIXWHhDcc2app6I9CHpa4GOBjwU+\
EwF83tVvzKvHl5Nja7D+Uh/cuf2drQ97/+1CB+4sJ6euswfFzfqmccTN+1tc7Ty3WfuLV37+\
fXOd55LPz+znNNuVQlLPwn+p1DPRtpyc7A3Hq88tJ7/weEh9qV6Uqvt23H0XVIOscSDVN7/\
xgQ999uVvn+8S3Vf2VQarHGbBylkDXUvzLz3YqmJ4aGBMA//El3/wyZe++4PugX/hIA58TMNdilbe/\
p1f/tvu4f76vg73JVVrnw5ySY5Nn79JFt/62of/\
4WCO8zIT4xrnYuEbJz9IDne73M8cmHEC39bUgzGN9Ktv3njzr//o77sl+\
sX9HulalZVTA6Dlo9Dhtbd/+0t/9pW/6x7xb+xvXLxwsZgKoJXs7p7QOI7xfut7X/\
z9j369R5f3Nwb1jncwJhjHwK+850u3j//iTPfA/+U+A6DuE5vGMcQ/+JWv3fzjP+wJs/9qn4c4djF+\
+5tfnX/5uUPdYjyYOHYcg+3D7Ps92KvlWhUJjVDdNjumwf7JN974+u9+oUey/\
35fB3ujUr6FVHsLw2GlxwWVv5Y+X3jtz7/bbcP/7sBzYUxjf+bQ+976/se/f3DQR8/Yd+5eHseI+\
94Fu98IesALWscxzr5XiSwn/+ZAjLPv/\
R7jGG3fSZTLya8enNGOaZB9Bxns9yAfhX32rYNfTj67r4McvDj9kUyjLiend85RFg7hy50zhD2tNBY\
+/Qxaad62nDw7YHat8NxycmbQ1Ja58EzfvJLp99R13AtetKZTkp/\
sYdwiNwNbFBVcVcgVF9N266XtleXkvbtPCjWJ/\
uCLj2jieOZTB2Xe6Omlhs7ZCSM7YWQnjCZ2wuipLitenV9Onm58XkXsKd5TyS+\
NO0JlrhUfoIni7vVrplFV3sAAq3fudO5edlbiFbKylT2z6/TVR7/w0drqP/\
tYd5g5kw2k0VdjzWqlum3EYwJAUt+fwSQnG/dfZ+\
WiVo1F1BdZDXpRW51ZTuaz4KRfaMjHRNiM2jbVZ15WVQi5q/+V+\
yXcdIWlG8mLzCWxoh6JhYop04qGTuRFlPqedDTVMnZCzcKQaqZDHehIchYSFSuXOSKISdzf33PN/\
q5RmPxm0az6TVc2Ox06AVeaE+U6RItIhY4vNFGeG7tMu4JGRIXKC7XgNFREMhbrwPc5ZYrSKI7d/\
g5J7hm0NjGEBj71aRjQOKCMx77rC8/\
3qfaC0POoEMQNPC8IAipIEAb4zKUOOI9UrGOPi35iXh37rFeHWEIc6XFXx0FAQLJLpYoI/\
gX40Y7gDkbhCgERSU4dJwwkd6JIxoIqyVWo+4l9aUwzVW0SIz+igWJE+\
FEYy1BKHkSBS7zAxx8cCC1UrhJQNjfSfqBBbsxpFIYeC4in9AB+\
nh9lNqIrZWyT5gXM5QGPKCEeI9pjWnu+\
G0bSi0XsBlw4bhRrrljMYyWYMsJ2tQtmSp9HTPWT9uJeJ746tMUudwPFfR6S2IsjBzbpcCh+SCQEq/\
GlMKQ62jNGoYivWRAwEAaVcFQ0Ttqak1Vt2vwoUE7AQsdVsE6XKeV5MM5IoWfOmeNEDqNKh7AW5VFO\
hQ7hL4iQLIYJ0wEO4sLeJ5ja1MUy0DIMNJOu1MSTnuO73Fcy4IT7jCkpQTSBiDWFBcAm3CikinINA6\
Z+TPqpC/NSt1OYNKYcKuSh0wAekkKDHF9Hyo89n3M/EhCjzyIR0JDzgESRG6qYODHXjucI6o+\
BYYnYuM+qb65VYZ7rpR7qdOAqzghcr9RgGIcNRiH03IHPkApu3eUa2s45ccBHUB3Gbuiw2PGgjsRl/\
dR9bHyzaG0qDTWUu56KHS21IqGGpvkuJZpHgjEMwocvjE0YIggg3AtckIgUkIbEFY7spzLOS2W/\
rnEiYx9SFKEfUxeeVgkvYiGPYgYh+lIFMFniae4LH14jYHEchYEXCEVjHfoDrDS3YF/\
fFncrWrewYDd1DKYnKKORDqlDEbYUXLBHpVQOCQKlQKIQnMuI6giqD+\
fhBlILuGOJYVCvn7or45os7Cgfi5nv+Zq7biw8z+\
MxlZo7RgXh4zQ37i9iniQM7CQqCghF6AfOCBXCmB7gS/KF22Em+\
DpOmaDTKOSBFL7UrorDKIhiODYCe6Xc1wpRww2EC/l6MTPhwxcyCJXve5HwBgSMD+\
9hUq7bHzMWeoiwrg8Xy4hHQgFN04gfwGWOAzgAGmMSEAeKGnkxvg8FZ75r3OIA9/\
KRvUykddjlmJgZ4X+4tziOOYAbi1gQQp5KCDhmIEfl+\
JCw4sCOHtyvcihjkgVCywG47tKYFnG1GEcDGVANNeKuAuAF5IgFZAU8GztOoCLtelp5kvqhMaNIQJ5\
AM34QQ5qCDJBnPgKvbm5Vqp1Y1kime/BdhHDgEhopBFw3jAPEK+\
4BSSnNuIgY7BkyltwNdcwoJSETNPRcDEYw7Q+KtJdHILDDvH4KXRkBFkHbfWBgSiBD6Xpc+\
YQqETkxwi/TkS/gnBEvfCqB4gl+hxqgiyjB+yl8ZQQKB8i5n9QQrle40EnKwTPIWRKkL+\
YvsMzAF2QfgU8Eo36AAAgsisvQYcRoVwfOACSaU9q7TE92eIneYS2+Qrehxz0ImrHIlaAL3It8pEk+\
kDuiG4scxGMkZ6EfKtzixFoHA/\
z1Jx7tlGJHT0GZp4l2OAUSDAEWgP1gU36khPZgXop5ygljJjkYDoBBGJERBkGpF0Z8QB6y9iimAdv0\
Sk8gfRVIOoLIBYx2lcNg2ITEXMDiNICESQOECJyQEg6PRCARRFBADeQIA7Q2H+R56NRdB/\
IQ341gSyqK4eE9pJ1QXQcOU3uSey6yAuQuwnc8V0sewtHGwB2MwzkYZfYHINl8OcCA6baO6+\
QwepAAbZShSUuUgr80sBYqqz3FAxHivwDZput7ngMMCU76oeMBfsD89uqZdp0ia1OoBLIn6VMeOR7j\
MGD4IY8TZMZI+yJBIi8EpqDA/gBsCJXKESGNQ9f1HIQEd4Dv/Kk9TWt1CCPUQ/\
rrQoTIRMLQQX4UI9IgV2E+\
fGIMukKFZNnFfcpEdABHZDMsJqEkZADezgfLWoTtSAnSHugITkgZIshwlwh4yZiQED5RmowUSSayAx\
5LIXyEJkcigaFCIm12wpAj1tMB4s3PvIGEUSA/\
hl49VwUIejoCQ2KfAGtxAH2DuVxtcESomQYcB7bUxn0y+\
BsCmL5nqe5urAFzeAAgqwOGXzpEuiIc6FQoFVSKIMkEKAN2dJHlQd4AkiBfEmQ0jg8V3Wsq0J57G6h\
zxA985MCxQySHf3bh3wBgqcOEjgRHbOHgKcAqj/wYiV8YIP4Anplg6YVUDKCuMIaZwTZ5Bp+\
63PVjGbp+AFniI3WQ3mX4GrBCBQRuBQhSicAPhaGdIhFwYSSEOAPix/\
Jg8tbqtQrUChRdYGlRvJburP4BikoSiVDBeYEgGjimn4ApRj2gWS8kSvvIN5GHaE4o8x0hwshHihUr\
HQ5I6J5tHVKRnlu5mNxJ0L/\
qRHyC1jmajWTgCiSqMKqQwHdSN4rMeL3ID4MIvly5SC7AIPgzl0qCoQOqDuju+\
U53lx4wM91o6sLnnqcvuC9EH7izRlfIHXdlQ4hOgY74yo2RtygJFYGWythzBJw04p2vXaK4ZtBg6ca\
UOq7WNCYu4LCkEXMIIlQeGqImDcEOGhgAGOE6Fg4PkbUHiGRRrEgklTEkhiisXN9B9uwFEiKHo2SmR\
CsjHsPSddBPw08OpuGt6AX3U8s1IJgOKzqF6NjzQgRbmDG4iw5MoTmKPW3AIkW67CD6B4DbAioQSu5\
4QoZURgx5AXOAC/\
rJcIck404qltf8FQJy0k6g8JDThTDAwHMZ1M5hNDBFUkB8LyKSUiQkBIk7FVrDViMpZQSkqhF1kaKq\
AU54d65EHXKCHVxBEAgYgikk71KDNeE6hBMx13GRLyFd0hHu0MjfHV8h540CqDRBZoW45ejQ6SfDG5\
KMjCvuCullSwxr9CLkFZJypp1IwRLhQENAEgbPoYXvOYHHKacGePoO0l6hWQCRBhq53oD4+\
f7B9PTbq8AQmQoBdqGHALK+40QBorKKvTDDu05kKvBIbT0Ro9uYcvhRz1TphaJkgL0uD+\
563Rw1x2rqjmp8eUfi25X1TmoNW3AiQYVBOZAMCT3YgcNdGCUQOHTXjQyBUGjEHg9mSoA5oM4CxADe\
mgP+zOxgsp3W1OYbq2laEaDpVPd3tcpmutBIo/Th9JmuS7ezWbAdX+\
LOumhPxDaG2SC3PS06oIMWN3brufBCYWb10HLyo/\
3b0MC5eqnWmTK1m9bsprV93zBgN63ZTWt205rdtGY3rdlNawdjvHbTmt20Zjet2U1rdtOa3bS2/+\
jDblqzm9bspjW7ac1uWrOb1kbetPb/AWX6SWc="}, "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         TrueQ[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]], 
        Alignment -> Automatic, ImageSize -> Automatic, ImageMargins -> 0, 
        BaseStyle -> {}, DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
        Baseline], Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.940560972550489`16.348133040919826*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           Item[
            Style[
             
             Grid[{{"Paclet build completed successfully.", ""}}, Spacings -> 
              0.25, Alignment -> {Automatic, Baseline}], LineBreakWithin -> 
             Automatic, LineIndent -> 0], ItemSize -> Fit], 
           Item[
            Style[
             RawBoxes[
              TemplateBox[{
                ButtonBox[
                 TagBox[
                  
                  PaneSelectorBox[{
                   False -> 
                    "\"PatrickMLenggenhager__HyperBloch-0.9.1.paclet\"", True -> 
                    StyleBox[
                    "\"PatrickMLenggenhager__HyperBloch-0.9.1.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], 
                  MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                 SystemOpen[
                   File[
                   "/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/build/"]], Appearance -> None, BaseStyle -> 
                 "Hyperlink", Evaluator -> Automatic, Method -> "Preemptive"],
                 "OEM6eJxFjrEKwjAQhokUEfQputvo6GgRcahQGp1EShovaTRtQi5F3X1w2yK4\
3c/33X8nCc4K/\
kztC1ASnBZ2mGWEUaYxsGivDTBykROcn6BxhgcYOPnxD4npGcEjdQZapejOiq6BNiAtAIF7UdPD24G\
vrNEi4yFoAUhzb+8gemlkqbG9lnNhINCq0+bWh+C1eByzoRTamivwZfm3l6tkk6wTN+\
7EbDG8ufVqPM3I9QstUkuR"}, "ClickToCopyTemplate"]], LineBreakWithin -> 
             Automatic, LineIndent -> 0], ItemSize -> Fit], "", 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "6e539cb2-d55b-4bef-80bf-bce022b7d195"]]]]]], Appearance -> 
             None, BoxID -> "6e539cb2-d55b-4bef-80bf-bce022b7d195"], 
            "LinkHand"]}}, Alignment -> {Left, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Build result: ", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/build/PatrickMLenggenhager__HyperBloch-0.9.1.\
paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"52.306685`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/build/PatrickMLenggenhager__HyperBloch-0.9.1.\
paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"52.306685`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/build/PatrickMLenggenhager__HyperBloch\""}, 
                    "FileArgument"], "]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|
                    "File" -> File["Kernel/HyperBloch.wl"], "Hash" -> 
                    "a319e2419ce92afe2708482254d0f2fd907fa772faf7f6f8dba71e9e3\
a0c6919"|>, <|"File" -> File["Kernel/L2Primitives.m"], "Hash" -> 
                    "a06befb1e301fc8e705cf1e4393af3c281e7e47fcb27e1daa9f655b2a\
e228993"|>, <|"File" -> 
                    File["Documentation/English/Guides/HyperBlochPackage.nb"],
                     "Hash" -> 
                    "1265252762962ab9535c4552f467442cc136446662c1676cc1bdf6bb8\
e9f94bc"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
AbelianBlochHamiltonianExpression.nb"], "Hash" -> 
                    "1110d4b3f966176232de8132dceef0cb06293cc8dbdb20076db088d9c\
2edbe7f"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
AbelianBlochHamiltonian.nb"], "Hash" -> 
                    "85826ea1c5879d7ddb68631465b68bded7e3ec19c38f56f93c9b28774\
a614efc"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetCellBoundary.nb"], "Hash" -> 
                    "46a3b6b82114a1f4aff45378d49c936bc0389fbea9b9ecae6cc13f3db\
dd5b8ae"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetCellGraphEdge.nb"], "Hash" -> 
                    "493b36eb5b719498019e0b9f671d0cbf194c378d0f427e1e15fa66ad5\
b1100e8"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetCellGraphFace.nb"], "Hash" -> 
                    "586e06a703e3c23aee44fcb8e100bba0080a2ef742ce42b2cf7a771cd\
a9cb229"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetCellGraphVertex.nb"], "Hash" -> 
                    "9d6fd76fad3df14d4053b5ed6b1b5aaedd3c2149cf2e7f0763872e2bf\
e9f2591"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetEdge.nb"], "Hash" -> 
                    "292bb9e449c66912dbd05f8e5945bb58cd0f5a8c627bb618837e9109b\
f040c25"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetSchwarzTriangle.nb"], "Hash" -> 
                    "f63eba11fcdff14bf93873f30db2dee3a3bf8aebb10b5e8e579370a90\
49f613a"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetTranslatedCellGraphEdge.nb"], "Hash" -> 
                    "0db22b34e90fdfe17fba05321fb8caaf63510d99e3a1705b463a90ede\
2713c0d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetVertex.nb"], "Hash" -> 
                    "b1d95594c759233ccec48a7b89a8835de6b9f14fb5c5bdd6a9987646c\
e29f758"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetWyckoffPosition.nb"], "Hash" -> 
                    "ab2cc2a28f7202364e87942dde0166ee883ccbbd82f8f25ad536dfc3e\
cdc4824"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
HBDisclinationModelGraph.nb"], "Hash" -> 
                    "fa9a545fb339c444b92dfb09387f19fbb7198a4d1a35d1e861255bc69\
7ed9cf9"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
HBDisclinationSupercellModelGraph.nb"], "Hash" -> 
                    "41ed987b6dc5df3e9786891cd17e92b5fe36b36c3ce249a03895cd67e\
5548c4e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
HCCellGraph.nb"], "Hash" -> 
                    "586aa74c5835a9ca1417c998f6ebe9e00dcecd191610759849ebe7cba\
53ed6b5"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
HCModelGraph.nb"], "Hash" -> 
                    "40ae6c8e6c0f5999ba9fa8a67a4decc405ba7e05198eb0c64259e02aa\
da6cfd3"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
HCSupercellModelGraph.nb"], "Hash" -> 
                    "526d62fcf9b3e419a619c554a719006e8f34fe4d2572a288c89582656\
98c4c1e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ImportCellGraphString.nb"], "Hash" -> 
                    "18b613128ee063796f07b4587efabc8a8796ebdb37f9a2217ac27433e\
4caf529"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ImportModelGraphString.nb"], "Hash" -> 
                    "3d86cc24956bb21642d34be512ec8094d4af85c35190452d7fc14527f\
2111ecb"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ImportSupercellModelGraphString.nb"], "Hash" -> 
                    "7876c30ae2bebdc55d1f6fbdc5743cb8e01f651ca2568736f9f6f40a4\
5b3f60c"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
IntroduceDisclination.nb"], "Hash" -> 
                    "36518e65e6f474b4458aa83d01f1908506b5c2e705a80ebb2af757ea8\
309ff64"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
NonReciprocalAbelianBlochHamiltonianExpression.nb"], "Hash" -> 
                    "16b54f1f0b24fc7aeb42cb3e58ecf4f9bea4e079adbfbdf931a1d880e\
22478bf"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
NonReciprocalAbelianBlochHamiltonian.nb"], "Hash" -> 
                    "d4c2fac9c36833783e0a826119bcb61f0d978d4cc60721baad1474364\
8caf45b"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
NonReciprocalTBHamiltonian.nb"], "Hash" -> 
                    "01538be5e8986a4644e2b0e05f4db43498b82c5043fdb7c8e989aab7e\
fb8e051"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ShowCellBoundary.nb"], "Hash" -> 
                    "5bc24349e70d79f67ee6e8d05faa8f4eb6c7c7c688d354403bf721570\
4ddeebd"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ShowCellGraphFlattened.nb"], "Hash" -> 
                    "eceb5d52b804abf60f854b1cee6a38c1847a35272ea7bf6ee0c729733\
402fc39"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ShowCellGraph.nb"], "Hash" -> 
                    "e1244653b433c2770cf79f3414da51ec97a37e79d3244e5a9cd6aad3a\
917d11a"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ShowCellSchwarzTriangles.nb"], "Hash" -> 
                    "a297dd7abcb31c6fb9117736deb5bd5bf30b9dcc528e0d8cd2cdd4907\
7b0f52d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ShowTriangles.nb"], "Hash" -> 
                    "2697a52843e67f9f811a951a03b2719a033f42597fafccea54f01f1aa\
1d14c79"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
TBHamiltonian.nb"], "Hash" -> 
                    "06a0b65fbf6a65ff7b22c00c77de34018727c97b6362779fd98f9fd13\
4e05804"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
VisualizeCellGraph.nb"], "Hash" -> 
                    "15655ed901dbc7a3d97df320acf8cb085b52895cb85930d7674b05b0a\
e2472c4"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
VisualizeModelGraph.nb"], "Hash" -> 
                    "cecd3b359d735603bcd32005386891216e61a8f9baec657cdf3222553\
9d3110f"|>, <|"File" -> File["Documentation/English/Tutorials/BasicUsage.nb"],
                     "Hash" -> 
                    "198ed18c7ec7cb3526022556aea24ae6471ef5caa612fb12a50cc7858\
f79ef78"|>, <|"File" -> File["Resources/.DS_Store"], "Hash" -> 
                    "31225be648d63c713b9d71b6c23888f9b485768051e3fe335952b32d1\
55319c8"|>, <|"File" -> File["Resources/ExampleData/(2,3,8)_T2.1_3.hcc"], 
                    "Hash" -> 
                    "815e396b3ed55e727d940cdee4365f31ebfae34d392203ff291372ad2\
8a01153"|>, <|"File" -> File["Resources/ExampleData/(2,8,8)_T2.6_3.hcc"], 
                    "Hash" -> 
                    "a43c1bf9c0b7a906e9889e18deff7ba607e350a9946d9d34daa5276d8\
b997ff6"|>, <|"File" -> File["Resources/ExampleData/{8,3}-tess_T2.1_3.hcm"], 
                    "Hash" -> 
                    "9447e89b65319527a9f6894fdc552e880caf6bdbcf5c7db04cd72d8ac\
89a0f45"|>, <|"File" -> 
                    File["Resources/ExampleData/{8,3}-tess_T2.1_3_sc-T5.1.\
hcs"], "Hash" -> 
                    "e44c57247643aef50a268f56274481d228c81f252cff5b08ddd83f6fc\
68b6ded"|>, <|"File" -> File["Resources/ExampleData/{8,8}-tess_T2.6_3.hcm"], 
                    "Hash" -> 
                    "abc6acebf293283097dfc08a303619554f8bc6f39c05e038865be16d6\
cd60f70"|>, <|"File" -> 
                    File["Resources/ExampleData/{8,8}-tess_T2.6_3_sc-T3.11.\
hcs"], "Hash" -> 
                    "96ae484afd2baf08e2fb80475bca3bcfc54064b2b2f9be50161cfa631\
96ffcfa"|>, <|"File" -> File["Resources/ExampleData/.DS_Store"], "Hash" -> 
                    "cc05ae7b546d9bdf5008617de947cb3e5082de8c404c961c92b4b0411\
0dce218"|>, <|"File" -> File["Resources/ExampleData/generate_example_data.g"],
                     "Hash" -> 
                    "4a9908c2cecebbf21747ff0b38a04fc527389bdf447401415314469f6\
c411f0d"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 44], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 44], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}]}, ImageSize -> 6, 
                    BaselinePosition -> Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/HyperBloch.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a319e2419ce92afe2708482254d0f2fd907fa772faf7f6f8dba71e9e3\
a0c6919", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/L2Primitives.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a06befb1e301fc8e705cf1e4393af3c281e7e47fcb27e1daa9f655b2a\
e228993", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Documentation/English/Guides/HyperBlochPackage.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "1265252762962ab9535c4552f467442cc136446662c1676cc1bdf6bb8\
e9f94bc", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
AbelianBlochHamiltonianExpression.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "1110d4b3f966176232de8132dceef0cb06293cc8dbdb20076db088d9c\
2edbe7f", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
AbelianBlochHamiltonian.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "85826ea1c5879d7ddb68631465b68bded7e3ec19c38f56f93c9b28774\
a614efc", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetCellBoundary.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "46a3b6b82114a1f4aff45378d49c936bc0389fbea9b9ecae6cc13f3db\
dd5b8ae", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetCellGraphEdge.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "493b36eb5b719498019e0b9f671d0cbf194c378d0f427e1e15fa66ad5\
b1100e8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetCellGraphFace.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "586e06a703e3c23aee44fcb8e100bba0080a2ef742ce42b2cf7a771cd\
a9cb229", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetCellGraphVertex.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "9d6fd76fad3df14d4053b5ed6b1b5aaedd3c2149cf2e7f0763872e2bf\
e9f2591", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/GetEdge.nb"]\
, 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "292bb9e449c66912dbd05f8e5945bb58cd0f5a8c627bb618837e9109b\
f040c25", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetSchwarzTriangle.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "f63eba11fcdff14bf93873f30db2dee3a3bf8aebb10b5e8e579370a90\
49f613a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetTranslatedCellGraphEdge.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "0db22b34e90fdfe17fba05321fb8caaf63510d99e3a1705b463a90ede\
2713c0d", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/GetVertex.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "b1d95594c759233ccec48a7b89a8835de6b9f14fb5c5bdd6a9987646c\
e29f758", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
GetWyckoffPosition.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "ab2cc2a28f7202364e87942dde0166ee883ccbbd82f8f25ad536dfc3e\
cdc4824", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
HBDisclinationModelGraph.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "fa9a545fb339c444b92dfb09387f19fbb7198a4d1a35d1e861255bc69\
7ed9cf9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
HBDisclinationSupercellModelGraph.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "41ed987b6dc5df3e9786891cd17e92b5fe36b36c3ce249a03895cd67e\
5548c4e", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/HCCellGraph.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "586aa74c5835a9ca1417c998f6ebe9e00dcecd191610759849ebe7cba\
53ed6b5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
HCModelGraph.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "40ae6c8e6c0f5999ba9fa8a67a4decc405ba7e05198eb0c64259e02aa\
da6cfd3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
HCSupercellModelGraph.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "526d62fcf9b3e419a619c554a719006e8f34fe4d2572a288c89582656\
98c4c1e", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ImportCellGraphString.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "18b613128ee063796f07b4587efabc8a8796ebdb37f9a2217ac27433e\
4caf529", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["44 total \:203a ", ""], 
                    Style[
                    Superscript["44 total \:203a ", ""], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 2]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "Item", False], "Mouse"], 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                    Background -> GrayLevel[0.98]], SpanFromLeft}}, 
                    BaseStyle -> {ContextMenu -> Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Dynamic[
                    Replace[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
                    Except[
                    Alternatives[
                    Blank[Spacer], ""]]] :> 
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`bar]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"37.579719`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"37.579719`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"2.513888`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
HCSupercellModelGraph.nb\""}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/Guides/HyperBlochPackage.nb\"\
", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.696725`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.696725`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
AbelianBlochHamiltonianExpression.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.558906`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.558906`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
AbelianBlochHamiltonian.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.220374`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.220374`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
GetCellGraphEdge.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.764585`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.764585`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
GetCellGraphFace.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.274006`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.274006`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
GetCellGraphVertex.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.607635`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.607635`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
GetTranslatedCellGraphEdge.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.47675`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.47675`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
HBDisclinationModelGraph.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.346311`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.346311`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
HBDisclinationSupercellModelGraph.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.188008`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.188008`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
HCCellGraph.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.544617`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.544617`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
HCModelGraph.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.010397`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.010397`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
HCSupercellModelGraph.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.513888`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.513888`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
IntroduceDisclination.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.073566`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.073566`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
NonReciprocalAbelianBlochHamiltonianExpression.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.112386`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.112386`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
NonReciprocalAbelianBlochHamiltonian.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.397696`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.397696`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
NonReciprocalTBHamiltonian.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.345538`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.345538`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
ShowCellBoundary.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.941302`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.941302`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
ShowCellGraphFlattened.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.220222`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.220222`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
ShowCellGraph.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"2.513317`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.513317`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
TBHamiltonian.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.356924`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.356924`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/plengg/Documents/Research/HyperbolicLattices/\
Projects/HyperBloch/Paclet/Documentation/English/ReferencePages/Symbols/\
VisualizeModelGraph.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.381363`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.381363`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}]}], 
                    "\[RightAssociation]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["21", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["21", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"TargetWolframVersionNumber\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["13.`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJztfVuMHNl5Hodz4WW5JFfLlWxZiSZjOlnJO8M6p+\
6SLO6wSS6pJblc1izXhmVxz3WmxZ7ucVc3ydmFAttQbCCxY+\
gS2Yr0IDiwAT8ERmLYMgIosWMLAgLDQp5s5MWKF1CQlyiCIVlGDCjfqb5P93C7epqcafaZxXKmu6rO\
+c9//f7/XErPpEdvsfsXKg9UqufTZ66Wa6q6VVU1VitWyvhaz6QLtyrmBj2Xzl0rpjV9OF1YY+\
v4JjmS1IVQaZo8ldQ3N1l1+4piMpn5WT2bnr64XWabRXG9IuslZR4/\
3H58NlG19OTa9pZKVe2NypYqnz2bzl9mpVS1rp5pXVWbXMkE5KizZ5P5W2h/G/c8taY2t0r4skFho+\
HZ9NRNVlaJKilRq1R7+5y7BTJancynR16qFmXvw63fR0wj5tJCeuxCvVZrseF4c0SNdt97+\
dLNavEeSHjjcrVSrl0qy1sqrdSrQiXHLl+\
6UKxtsq00Od1kDB56BeNUVUO8IeWiKrFtJdOTjS4u18vCcHw37sytVeuqPYzjq1tbilVZGcyfu1Epd\
64cu8BSldS2S0of2jH2Y5fusVKdgTPpsdV6rbIJEYv21YXrqrZRkcnxm1UF3taK97oaXS0V18ubqlx\
rMTRdKCijKa3fnVuvbrJ1lRTfVODYkSbH2k/19Du/\
VtxUafVQ9nPixfY3ePBEoV6touHbIFglT18Gfwts64oqrm8YEuZvVu6jz5n0zCpPK6V6TXXfnz59na\
2Xi7ooMh0u/BDiPnq5yjYzoc6mRzP2GPWdX/qbL39uCQ0eu1isQmfMmHH91ksXCpVSpVp9T/bzl+\
erz2Y/b5+v/nT281fnCz/aHvGJpFYtbr1Svlreqtc6Wty4eLIA0kHYTSZlsby+8/\
LxjKyMnh1yPJFduc6q68Vy2q3G5nfhUOHQzr93p2Who+\
ytdmbav1u2PbvTtncaWfPR5NTSTSZKqrZaFRvg11Iyt/\
ShxaXkONq5qDSrl2rJc02dv1pTm6vlcqXhS5LZ7/zaV7p8x6dnls69lkKFzm2VVHl9/\
dzFiqgbHUvPwZCg3WLj3BUYQZVXSkVxjdWgNSo9d7Na+\
SRElTauXShVcFuDonO8XixJfAAPxN3r10yjqrwBdazeudO5e9lZiVfIylb2zFLbcxli98KXp5bWMNC\
S0eCReYLeetpuOtzkuE9XXCcIIv+NZHYpXUqOpEpUyjJNji0ljb+\
WkqOv1lm5Vqxtd7Qr2S7X2IPLlepmOgs/3DvW1l2nm8rRZ+OtO5IjsIb6ZjntYk/\
DnOeuKd25bQ7D7b9ngKs5br6C/1M1tdMgTjWJMRRmTmRoWvr7GZ6gVq8JlMJY6dC9Fg7n76zLQ8/\
t8NBnko3KfWPC5fXCBty7MB52J4ueulFHSKzCNdztu3YSIQnOBr6smBrXN9uRctZ0pg8Nd7Pz0UesB\
rNrla2DqwCnjUxKxbK6WUmLzTDcEPBMYaZ9VyMG7wt2KJQq6cjYYWfQseDBgocRwMOCBQ8WPOx9rO9\
eumBY3WB7w3Qq1e3Rh92XnyZzl4tw/shCB+\
eJyf390Z2l5IQhbLW6nvWWzPzc2Hh6umlX1xlcl0pro3NzvkudWn8tDEjmj/Um88sm5CTbKdp+\
4wYIUNJ4jTdA1V2woRXszqaNPH71XcvJU1fLiLSsdJHV2OrMcjJveJPqFxrtrh5ebojRcCUT55mXVb\
WsSl3cX7lfwk1XWLqRvMhcEivqkViomDKtaOhEXkSp70lHUy1jJ9QsDKlmOtSBjiRnIVGxcpkjgpjE\
/f091+zvGgX1m0Xj3tOVzU6HTsCV5kS5DtEiUqHjC02U58Yu066gEVGh8kItOA0VkYzFOvB9TpmiNI\
pjt79D0lLDTC7nLpXXS8V049xL9aJU3UrX5OlKmbeJITTwqU/DgMYBZTz2XV94vk+\
1F4SeR4UgbuB5QRBQQYIwwGcudcB5pGIde1z0E/\
PqYGJuKa0QKoW6CQrSc8n2JmwkPbfKAZ5YOSPvCvSkBFCCz5cebFUBNNFAD7GEONLjro6DgIBkl0oV\
EfwrlNKO4A5G4QoBEUlOHScMJHeiSMaCKslVqPuJfWkcxHaTGPkRDRQjwo/\
CWIZS8iAKXOIFPv7gUslQuUpA2dxI+4EGuTGnURh6LCCe0gP4eT4XiS+\
pWkGVShcq9bKExXaT5gXM5QGPKCEeI9pjWnu+\
G0bSi0XsBlw4bhRrrljMYyWYMsJ2tQtmSp9HTPWT9uIopL1UZVsbl2SvGnqxy91AcZ+\
HJPbiyIFNOhyKHxIJwWp8KQypjvaMUSjiaxYEDIRBJRwVjZO2y0z00OZHgXICFjqugnW6TCnPg3FGC\
j1zzhwnchhVOoS1KI9yKnQIf0GEZDFMmA5wEBdGpu22qtbUg27qYhloGQaaSVdq4knP8V3uKxlwwn3\
GlJQgmkDEmsICYBNuFFJFuYYBUz8m/\
dSFeanbKUwaUw4V8tBpAA9JoUGOryPlx57PuR8JiNFnkQhoyHlAosgNVUycmGvHcwT1x8CwRGzcZ9U\
316owz/VSD3U6cBVnBK5XajCMwwajEHruwGdIBbfucg1t55w44COoDmM3dFjseFBH4rJ+\
6j6Wl7o1ZFCpCcRyV4Mw1FDueip2tNSKhBqa5ruUaB4JxjAIH74wNmGIIIBwL3BBopIIX8QVjuynMs\
5LZb+ucSJjH1IUoR9TF55WCS9iIY9iBiH6UgUwWeJp7gsfXiNgcRyFgRcIRWMd+\
gOsNLdgX98Wdytat5LtbuoYTE9QRiMdUocibCm4YI9KqRwSBEqBRCE4lxHVEVQfzsMNpBZwxxLDoF4\
/dVdyUXflwsViKkrFcnY38I5qiLZH+VjMfM/X3HVj4Xkej6nU3DEqCB+nuXF/EfMkYWAnUVFAKEI/\
cEaoEMb0AF+\
SL9z20pjUgQwEVHAwsR5Bp1HIAyl8qV0Vh1EQxXBsBPZKua8VooYbCBfy9WJmwocvZBAq3/\
ci4Q0IGB/OR2yhbR47/DFjoYcI6/pwsYx4JBTQNI34AVzmOIADoDEmAXGgqJEX4/\
tQcOa7xi0OcC8fyUnWLuxyTMyM8D/cWxzHHMCNRSwIIU8lBBwzkKNyfEhYcWBHD+\
5XOZQxyQKh5QBcdyknXe8gT58GMqAaasRdBcALyBELyAp4NnacQEXa9bTyJPVDY0aRgDyBZvwghjQF\
GSDPfARe3dyqVDuxrFGt7MF3EcKBS2ikEHDdMA4Qr7gHJIU8hIuIwZ4hY8ndUMeMUhIyQUPPxWAE0/\
6gSHt5BAI7zOun0JURYBG03QcGpgQylK7HlU+oEpETI/wyHfkCzhnxwqcSKJ7gd6gBuogSvJ/\
CV0agcICc+0kN4XqFC52kHDyDnCVB+mL+\
AssMfEH2EfhEMOoHCIDAorgMHUaMdnXgDECiOaVdrlWR8wnV7XF6eIneYS2+\
Qrehxz0ImrHIlaAL3It8pEk+kDuiG4scxGMkZ6EfKtzixFoHA/\
z1J3IReKNSvqVEcataEayULw8BZZ4m2uEUSDAEWAD2g035kRLag3kp5iknjJnkYDgABmFERhgEpV4Y\
8QF5yNrYKe+mV3oC6atA0hFELmC0qxwGwyYk5gIWpwEkTBogROCElHB4JAKJIIICaiBHGKC1+\
SBPD71rF3ah0iG+\
G8GWVBTDw3tIO6G6Dhym9iT3XGQFyF2E73iuljyEo42BOxiHczDK7A9AsvlyADPNsVvuhBhMDQnQRh\
matEQp+EsDa6Gy2lM8ECH+\
C5Btur7nOcCQ4KQfOh7gB8xvr56pRVsjQQF0rKmykt0UKoHsSfqUR47HOAwYfsjjBJkx0r5IkMgLgS\
kosD8AG0KlckRI49B1PQchwR3gO39qdAp7CCPUQ/rrQoTIRMLQQX4UI9IgV2E+\
fGIMukKFZNnFfcpEdABHZDMsJqEkZADezgfLWoTtSAnSHugITkgZIshwlwh4yZiQED5RmowUSSayAx\
5LIXyEJkcigaFCIm12wpAj1tMB4s3PvIGEUSA/\
hl49VwUIejoCQ2KfAGtxAH2DuVxtcESomQYcB7bUxn0y+\
BsCmL5nqe5urAFzeAAgqwOGXzpEuiIc6FQoFVSKIMkEKAN2dJHlQd4AkiBfEmQ0jg8V3WsqcLuY1lm\
p+KYaqHPED3zkwLFDJId/duHfAGCpw4SOBEds4eApwCqP/BiJXxgg/\
gCemWDphVQMoK4wGnWDgZjBpy53/\
ViGrh9AlvhIHaR3Gb4GrFABgVsBglQi8ENhaKdIBFwYCSHOgPixPJi8tXqtArUCRRdYWhSvpTurf4C\
ikkQiVHBeIIgGjuknYIpRD2jWC4nSPvJN5CGaE8p8R4gw8pFixUqHAxK6Z1uzkem5lYvJnQT9q07EJ\
2ido9lIBq5AogqjCgl8J3WjyIzXi/\
wwiODLlYvkAgyCP3OpJBg6oOqA7p7vdHfpAdvcKilTFD73PH3BfSH6wJ01ukLuuCsbQnQKdMRXboy8\
RUmoCLRUxp4j4KQR73ztEsU1gwZLN6bUcbWmMXEBhyWNmEMQofLQEDVpCHbQwADACNexcHiIrD1AJI\
tiRSKpjCExRGHl+g6yZy+\
QEDkcJTMlWhnxGJaug34afnIwDW9FL7ifWq4BwXRY0SlEx54XItjCjMFddGAKzVHsaQMWKdJlB9E/\
ANwWUIFQcscTMqQyYsgLmANc0E+\
GOyQZd1KxvOavEJCTdgKFh5wuhAEGnsugdg6jgSmSAuJ7EZGUIiEhSNyp0Bq2GkkpIyBVjaiLFFUNc\
MK7cyXqkBPs4AqCQMAQTCF5lxqsCdchnIi5jot8CemSjnCHRv7u+\
Ao5bxRApQkyK8QtR4dOPxnekGRkXHFXSC9bYlijFyGvkJQz7UQKlggHGgKSMHgOLXzPCTxOOTXA03e\
Q9grNAog00Mj1BsTP9w+\
mp99eBYbIVAiwCz0EkPUdJwoQlVXshRnedSJTgUdq64kY3caUw496pkovFCUD7HV5cNfrZnkjq6k7q\
vHlHYlvV9Y7qTVswYkEFQblQDIk9GAHDndhlEDg0F03MgRCoRF7PJgpAeaAOgsQA3i7nJxcLZUq9y+\
ZFaHZhHi2IGM5OdGcSko22JaZBP/xrsmo5mxJIipb6g2zOlVVs9tWZ5db02vpLJrN/\
sEIF3d79mW1fbG+ubltVoQMeLTBol0umfEXZvRc+\
v7dWr9mppiUBAG7Et9Y99Ia4088hM7Gwofsxpn0n+\
x242qtspndVJ3JFlFce3GMBA7V0q68vlW53xBSl+q98zgKH2mq2nCjzgb9C7/4Iu4+\
3ZiGVvJqWRehS0bIh9vrTtqCLJwZfG9nkZO5aWaXm5orajozn4ZEs1C6i9TVNK0IPH+q+\
ztQnC40SgOg6ZmuS7ezufMdX+LOumiv9mhOhjf40ln+\
2ddBi8279Vx4AbqdzF1XNbZ6aDk5BhGtseq6qhXOwAAbom9+\
cXw5mbemaE1xAkxxbhJt8CarbXSG8MzFYrqVLQeEqAqVerlmbjrT/\
rahCo0LkOEJE6q77zxlvthx07GkUq2ZbtJOPyfNd82VbpVy94UrRSlV2SwrSa+\
zrXTuRr1UWk6Ov7aF+K/MUAozqTPc+\
pBKvbZVr129ePZsa2HJC8M9uAVi8dCh3lUpQz5872YlPXs2W+\
iZ57GN0R5bx5cgdTZ9umdRTdcyvaw1MlRrSFvhRhvXzMKhi2qrVNnW8+l8YxnnkXQuu/\
TuvpWqc9maI/w2K1bx+3hnTZBZ03i9Uk9V5Z6qmjWNWe5bFGn/qtD2gs3CwkMW04KwRLCSklU3+/\
nT/9LTasckjuG77Wvqnio173z7vFkJerNS2l5HO13rpZu/\
G4s5Mw9x9FZGPCsVfph9bqwHLfzw4XcN09AQTw/V1/\
gaGm5oexURvhxOC88mpaIw603vZgtrV4Z6qGTqyFcqJTmCc+\
gL7Okcgm2aHG1Bg0ZqkMxnajxoffHORbEmt4HfGrS4+UT21G6raecbi+yzv+cK8531kxdA/\
nrVlKF7FVtnP//n/\
MMWSGcr6tOjLSm9o7meuHQPj19hZVnKllOfysbdWefdY9HNOH646SPaH5vUZOulzQrmntXMn/2M+\
fnv56sk+/mf56s/k/387/\
PJ0WvF8l3T947l6e3wdyLrugAduYt4ZPzl4asaTAmHkrvYUOJuti2RmUXWiOA5Vxvqw3phSB2rZzEr\
222Ys5N8gSpfZMoXkHLGodzmuj8G3gL1E+\
WVmsCvmR41Uh7rmR7mmZoQueWZWojZeibrmQ6uZ2rWFCbLM2U12SfcMw2V6uTzUM1tCm0X1f5sfZT1\
UQfFR3V2Es0iIWrq6MH2UANJzsrMTefU2I84vHdql1IPtJM6/\
FDn9NC9TwdZmrO7KGDzc7MempUM88q18JFxC/Tozr3mAzvYXUx73302yaLMcMRoomzX/\
fdBoi1E9HSyxcqXq5XNVV65N6w9Dt4bOHlSPPzEGuQed2dOsiin0SDz752dPAnPPqnGutfdy5Msymk\
01vHvLZ88DZh7Yo15j7v7J1mU02jM4zp7YfLkPv+kmvBeT7+\
YZFFOownv9WySyZP3wpNquns9HWaSRTmNprvns3smT+BHnljb3ePpSZMsSmu7I5xtNXkCP/\
qk2u5eTxebZFFOo+2O4ey3yRP5sSfVevd6+\
t4ki3IarXfUsxEnT87Hn1ST3evplJMsymk02TGcHTp5In/qSbXevZ7eOsminEbrHePZupMn+\
hNPqhXv9XTjSRblNFrx6GdPT56kn35SjXavp39Psiin0WjHcDb75In85JNqvXs9HX+\
SRTmN1ju2dxdMnuBPPak2vNe3R0yyKKfRhsf/bo/J04DTT6ox7/XtKpMsymk05r28+\
2byZP3Mk2q2e3370CSLchrNdk/vhpo8Yb/rSbXbvb6da5JFOY12O553p02e1J99Ug14r2+\
vm2RRWgMe9d2Ckyf1M0+qAe/17Y6TLMony4DnmoI+PI5z8fDhqSz4pqJa3KolT3veYg1tlRb/5hf+\
02JySLcOzBviRnuSnj1JbwgDfywuYfBJeocPshcbfJLew9zWaJ7nmDnErmXTPY/0GOzN7Odb5/v/\
KBxtt/VUAcauHtSuq3Jdz3daMZ8zB/ePzMsVF8ni9UpVLd7Cn6y2uLZRTBezo/\
cw1qcbR3JdeqBEvWac23DSYfKT9bSWvQclhXU2HKW1uHEpYzIHWaXo6ejlelk0AwvNK5kL20apk1Kl\
Zt74o7tf8dLWoKeNqly6x0p1VqtUe8NfR43+\
caZGfluNUqtH06pH8zn1KD0GOJG9L6k6QKXI4mV1X1Wta5pmlfrhXlzT+\
5uuqa1H1jdNrSL9v7yK1MZkQ504nN266zHGH//1//q95z/+nfPpiVa+aFoYBPu6XsfUj+\
Jm0iPN91vh+\
rsKlc0t01Xn2LY0Go7RotPmWrW4vg73u5DOv75RFObNEEdeK6dsU706JMPPllhae6UpuseCxjtvzJp\
PMkJHHnb6keGHWOh/2h/p6cY7AQZLUDffVLY3ukZXg2b3ow3MCMQcQ3a3nS/\
la269VOGslIhqpVSCY2qb2yN0faaP14u1DX2sl+IhlRjjN6/0Ozvk/WdbD7S6Gc7CWk+Zm8/\
mscrWQ/m6K6bXFNONI+LPph/K193VrofzdbuRPdN48WH2qsLVrOq0cJ3VxEYuZ9Q17BOrJYBLs/\
DrXs/R971v6Rg6uHTT+GpeoecubTW4d264sFcqdViX85EDNpLydu6RtB55XCNxh3oq7X67pymFD+\
eXReNFsz2vBs3rX2ZyDqz79aS5n935GtNcPnSD3ctedW5w5eyNSi0DfaxYqlfVq0PXkc1b0VNVa74E\
2jQ3omCHAyPFtPVOxDbVCH2Xq0rlV8DsJYtmPuFjlWK5PV0ym5XR8e8r1WYPI7Izt9HlZ0F6BP1smL\
f4duVeYMjxxlyjGVcyn2Vi+mgHZc5f+vk6K40SARt118b8x+\
iNdMWCWfy5t8Z6okmy0PjUfPfTof4s00xaBDkmLbreBmyTzH2cusgLC5OFqtpsTuy/Y9nCGPzcXgx+\
2GhpZH1pc6u2/\
aij5QjetAH7cmOeUSDmUG4L9yrrtqzbmi63NcukzFu9b7ivzHrzO658SV6PEvcleb1K3Xl79QjJb04\
M1UnB5npgXFdJbZTEITm2mgpVljtcVTJnYPdgKx2O4OaKCLRizXP/\
jK1Luu9scl0xaxyadfyiGqhaJ26pe6qaqkWrYk+CinWL+XHrWDp3o5KthOto1wLas3o1+\
XrVFO3wGtWNGFqTOINWJr23UNnaXmwdl7FYqywWSsUtXmFV2a80M0Ni0lqlUK9WVbnWandIzRGgxXQ\
/bBKXG/50j/zd2cjN9+8w6mEr1u1Rj1AUGzuDBipCj+BvQrdUR/LF8uINdX/RrF4fp+\
CHk5DZ85LR83gk3xh6JvqHDvuxSH7sHOpElfZkuVmMfNm8sGg7OZVU6lUBuMHK6eLNaqWzFNvcZJZi\
F072Pvi6Kq5v1NL5myVWLHduv1i8VzRvNu6d5D9+uYr41Zhg75mX/8HfmZ//\
1Xm98NFkiwmjoO3lmYcKXeun20sBGksABk3gz+\
6YwH8Uwzx1rVhWF6qK3TVzl8Vycw3q4EUDh3auKLhR3+\
SqalbPpjsfPGnKtEZm2Vi6LmfF8eF0qNgowr/\
anubuWrMwnOamqlbful1U97OaU66AjXAyeFa9sSo9y+\
byDSPLTiuy3rMkNwc7aptb5uuz6ZGzZlojWzqf7/FWOX+\
4eN6cChllDmT2YSsS8o22iR275nJyjnfIdVjwbzD3xjU9MzR8bDxmrlj4OD74mFOju41yNE1pqFpTQ\
fMrTF4LnrtRz4LKKM6w4Ukf6VKWfpMbxYbS57oeQjSspqp54UTXhSvJjzxvPM1iubJYqpTXVXXROAx\
Exg+M0mvv5qL05FqVmf1EzT2Mj2khUA8JzzaDVsP13wagUWlXKM0xwX22Vtm6wKpZF+\
1QODNkKNxkd1UGXiSaQAP/tOup5q0J8Ld6I6nzVsTkkFm+oGm3UO2n33wn7Z/Jp/\
1Nmebyimd5pQag3qem+POW2iqxbGdi688h067NbGtje/fj2bM717bqwwd2w1fT1R8y6xlZ+\
W42adez/fEA71WDoOAFzIRI+sGh54PPtsfa/\
fxwxG61p2IGtTHKtEu7nYWBiBQp3NWyqKosEdvzWte8c+B5mJprAWTP2sXcvG92tYflmiOJKv8IH+\
tS8WFTThNnM9ZXgZ3yiHjItc2t9i+VGlq70+c3/\
M1MumDqD6paOL7T4bRN4iH3dFnd80NRBaRg2rv0QKit2s6JVFxpdNnqMFsSMKTvb8OWFiAZnqAho+\
GIQWjk4HU4faYZFV+vsq0tVb1QeWBWizS/bHw6slbBH+DdsfTdFxuJ+\
BvN31lJplwrHG6Fv2SuuVJzLtPtvNG92UYTm+\
dqowltWm3MZ4Cu3UjuhZNNSm6bJfs5KbnXXoTfaOPKCG1s9LaxsJbB7XYr+\
UF6o51jF1qQqN3USFiq0drRLq8399jWfZyAZM0bpeXlSnVz2CTr0QD7ts5l4WJUIzzUOjGj+\
1CN3lE11wAX32xdzrGut3eT0fFCVeHb116D1PJlh31F4Zkdl3Yv4PZ0c9pMvN5T8jarFhkvqY73y68\
LCxeB3ivbbRJOX1Sa1Uu1NpFJ646Z9Edavis7mgO4q9ZyYjOd8nSiSkrUMrJ2VJGPXpLFgRfe1XjGj\
LnpDtPmarOnkvrmJqtuZ2vwOqctLNyq3DeetVNUX1hj6w1f+9Sa2twy77NpfGwcR/\
JjSz2HI12oF0vylkoxznQpmVv60OJSchxtNseePNfVbdeJPLPf+bWvdPXVR0cy85aeT59pc6fRV8+\
dczspTo4kdYHkKW2P1UCoZOZn0ejpHnXqGk9LfU9mkBACQapvglhvXf5M66ra5LDn5qr8+\
Vtof3sno2ba062nzAk1DYFUqr19NqTV7GQ+PWJ0q/fh1u8jphFzaQHqXoffa7KhNyy+9/\
KllkperkLwl8pGKNlcSHLs8qULxdom20qT003G4KFXME7VjwUaXXTtCR3IndbEQ1NRO8fr7Jiw7jLQ\
Ptt96JbQheuqtlGRyfGbVQXeGrg0YI6o7VEXCspoSut359bO0UY9OzsbT/\
X0O79W3FRp48SjQydebH9jynLNab7MCyVPZ0f8sK0r2cSRue9m5X6WeZ5Z5WmlVK+p7vvTp6+\
z9XJRF0Wmw4UfQtxHM+TWUPejGXuM+s4v/c2XP7eEBo8113bcUz1nkrwn+/nL89Vns5+3z1d/\
Ovv5q/OFH22P+IRZW7v1SvlqGW6pb/\
Kp6RNuMmlWquy83DWJt0OOJ7Iru5210pzA65vMG0jLQkfZD7e90Mje6NjSdRg8ZDyy70mWex3aIjce\
bVEgKS4peP3FtOFUNNKH7ZWlsfnRp5bWzAFSRsdG95uzvW03XWJy3A1X/\
DAOSfxGMrsEv3wkVUjPZQp+JY2/lpKjr9ZZuVasdQLW8WQbTHhgoEw6C0/\
ZO9Z2WGuKr88K21DsSHOZcxd7unZ1d7Bocwd67z0DnMFx8xU8FMSxU2VPNYnZeZ7YO9PS38/\
wBLV63TmV/Y69ducmw3b2kK3rZ8xkcmMxfWGDmRO+\
zMT8zqnqh81GI2jAHcDbFE3dp3FmUkPKWdOZPuycqX4sajCLJOPgKsDp1sEErQUvbf830wXgGlFyX6\
J7oVRJR47uO8OCDe82vI8Q3p+\
y4X2CwvsexvrM0nX2oLhZ3zSH9u1txAMTwX6SdmHMMbriEzeKor3xZeaF5AszS+\
degwdNz0FNyuvr51pKlJ6D54U3FBvnrsBrVnmlVBTXWA1eRqXnblYrn4Rpp41r5qSOjXM3mYCmnRvL\
meBLycynxia200sg1+i+ktlpi+OU2ux3Pv25rq8/sBuVyS89Jka/VC9K1X17s5CTMXX2O5//\
LVtusOUGi0eeZDwyhnLD0aXVTFFHhyNHlrKK6fiAxsLSI8EYx5yVIA5C6tsKgq0g2AqCrSDYCoKN2I\
87Ys/22pGN2I87Yu9hlPNLuD4615/tJKc3KjXFK5W7SxZNWDRh0UR+\
NNGJbDsD9YA42NV8cqJpbwZilHZCgYet0Elmfg63twskz/TZ8urh5WSh4ZmT+cy/\
Lidzxi3isbaTqr75jQ986LMvf/\
t8cqTpwbrc1jjXxsy8MKAy9Vv7WwJc5RAoK2cNXDGbWwG78LmzSNtWrmzlyuLgqcDBtnKVBweTFd+\
PYiewlSuLNS3WtJUrW7myEdtWrqYsYtvKlUUTFk1MOpqY2MrVJ778g0++9N0f7E/\
l6jcPZOXK1qtsvcqi36lAv7ZelQ/\
9Uuq4oWfrVRZhWoRp61W2XmUjtq1XTVnEtvUqiyYsmph0NDGx9aqlaOXt3/\
nlv92fetVn9rde9ZKqmfdAZHssL0m7JdAWqizsnRLYawtV+WBvGHh+\
ZLcEWmhpoaUtVNlClY3YtlA1bRHbFqosmrBoYtLRxMQWqr5JFt/62of/\
YeoLVZeZsIUqW6iysHc6YK8tVOWBvXSFhp5jdwBaaGmhpS1U2UKVjdi2UDV1EdsWqiyasGhi0tHExB\
aqFgvfOPlBcvjFfSlUfe7gFKpuq2pNPbClKluqssB3KoCvLVXlm6ENnDBw7ZoqCy4tuLSlKluqshHb\
lqqmLWLbUpVFExZNTDqamNhS1VffvPHmX//R3+/Pmqov7Xupag2IKTV+\
VdptgLZkZQHw9AFgW7LKAYCPkhUvDEJbsbIY02JMW7GyFSsbsG3FasoCti1YWTBhwcSkg4mJLVitvf\
3bX/qzr/zd/hSsvri/\
BasrFy4WUwGZZneDyapRsrLlKluusuh3KtCvLVfl21rgeoFLiK1XWYhpIaatV9l6lY3Ytl41ZRHbFq\
wsmrBoYtLRxMQWrL71vS/+/ke/vk+bAX/\
rIBWskjoaE6pUspUrW7myOHjKcLCtXOXDwSSKHCeylSuLNS3WtJUrW7myEdtWrqYsYtvKlUUTFk1MO\
pqY2MrVlfd86fbxX5zZn8rVr+\
5z5arQ3hBoa1S2RmUR71QgXlujyncahu95AQltjcqiSosqbY3K1qhsxLY1qimL2LZGZdGERROTjiYm\
tkb1B7/ytZt//Ic/2J/tgL+\
23zUqu5DKFqks5J0yyGuLVPmmZR3iuLEtUllYaWGlLVLZIpWN2LZINW0R2xapLJqwaGLS0cTEFqm+/\
c2vzr/83KH9WUj1hf0uUtltf7ZaZbHvtGJfW63Kh3194kaR3fZn8aXFl7ZaZatVNmLbatW0RWxbrbJ\
owqKJSUcTE1ut2qz9xSs//\
765qaxWXS3XquCsUN3nVtlqla1WWew7FdjXVqtyztSGrh8Etlpl8aXFl7ZaZatVNmLbatWURWxbrbJ\
owqKJSUcTE1ut+pNvvPH13/3CPq2t+\
r39rVYhvN6CGWyBc6y0yiFdVs5auwKml4DB8PnSg60q2GrLWLaMZUHxtIBiW8bKdyoGIdSNbBnLAk8\
LPG0Zy5axbMS2Zaxpi9i2jGXRhEUTk44mJraM9bX0+cJrf/7d/\
TnH6rcPfhnLFq9s8cpC4amAwrZ4lQ8Ku3EYxLZ4ZeGmhZu2eGWLVzZi2+\
LVtEVsW7yyaMKiiUlHExNbvHrm0Pve+v7Hv78/xasvHaDi1doFW7KyJSsLgKcNANuSVU4A7Pm+aw+\
5siDTgkxbsrIlKxuxbclq2iK2LVlZNGHRxKSjiYktWX1y/Tf/x61f+d7+lKw+\
s78lK6PvBVUqXajUyxIysIUqW6iysHcqYK8tVOWDvbFHXIfaQpWFlhZa2kKVLVTZiG0LVVMWsW2hyq\
IJiyYmHU1MbKHqr3/13/7eZ0/9cH8KVb9xMApV2TsDL8O7gmAlbbnKlqss+\
J0K8GvLVfkOd6XUodSWqyzAtADTlqtsucpGbFuumraIbctVFk1YNDHpaGJiy1X/4Vv//I9n/\
3Rmf45j/9cHqFxlq1S2SmUx71RgXlulyv3CbJeEtkplcaXFlbZKZatUNmLbKtWURWxbpbJowqKJSUc\
TE1ul+s9/9dZ3L/\
3Y3FRWqewZVbZKZTHv9GFeW6XKeeKFH8TUs1UqiystrrRVKlulshHbVqmmLGLbKpVFExZNTDqamNgq\
1Y//i//4f7/3B/t0RtXn97dKdbuY1lkJAgF/\
lV1RZWtVFvlOEfK1tap887NuRNzAtbUqiy4turS1KlurshHb1qqmLGLbWpVFExZNTDqamNha1SsfWX\
/q6NOzj3xF1ex3Pv35sTm+\
dy1dZsWSkpfxT1qo1Mu10b3gjDNGsm4qoL1yLROKkkqOPQLNE8dZMdHnJxB9tpq9HWv1u5ScagkWWl\
rTxQePPgg914ki4xDHYUrGRtq7l5rWoeulg0bbs0vJ3SIg+\
0HT4fcBU1TXVe31SkkDb95GdEGHjXgyOoFzxIXWHhDcc2app6I9CHpa4GOBjwU+\
EwF83tVvzKvHl5Nja7D+Uh/cuf2drQ97/+1CB+4sJ6euswfFzfqmccTN+1tc7Ty3WfuLV37+\
fXOd55LPz+znNNuVQlLPwn+p1DPRtpyc7A3Hq88tJ7/weEh9qV6Uqvt23H0XVIOscSDVN7/\
xgQ999uVvn+8S3Vf2VQarHGbBylkDXUvzLz3YqmJ4aGBMA//El3/wyZe++4PugX/hIA58TMNdilbe/\
p1f/tvu4f76vg73JVVrnw5ySY5Nn79JFt/62of/\
4WCO8zIT4xrnYuEbJz9IDne73M8cmHEC39bUgzGN9Ktv3njzr//o77sl+\
sX9HulalZVTA6Dlo9Dhtbd/+0t/9pW/6x7xb+xvXLxwsZgKoJXs7p7QOI7xfut7X/\
z9j369R5f3Nwb1jncwJhjHwK+850u3j//iTPfA/+U+A6DuE5vGMcQ/+JWv3fzjP+wJs/9qn4c4djF+\
+5tfnX/5uUPdYjyYOHYcg+3D7Ps92KvlWhUJjVDdNjumwf7JN974+u9+oUey/\
35fB3ujUr6FVHsLw2GlxwWVv5Y+X3jtz7/bbcP/7sBzYUxjf+bQ+976/se/f3DQR8/Yd+5eHseI+\
94Fu98IesALWscxzr5XiSwn/+ZAjLPv/\
R7jGG3fSZTLya8enNGOaZB9Bxns9yAfhX32rYNfTj67r4McvDj9kUyjLiend85RFg7hy50zhD2tNBY\
+/Qxaad62nDw7YHat8NxycmbQ1Ja58EzfvJLp99R13AtetKZTkp/\
sYdwiNwNbFBVcVcgVF9N266XtleXkvbtPCjWJ/\
uCLj2jieOZTB2Xe6Omlhs7ZCSM7YWQnjCZ2wuipLitenV9Onm58XkXsKd5TyS+\
NO0JlrhUfoIni7vVrplFV3sAAq3fudO5edlbiFbKylT2z6/TVR7/w0drqP/\
tYd5g5kw2k0VdjzWqlum3EYwJAUt+fwSQnG/dfZ+\
WiVo1F1BdZDXpRW51ZTuaz4KRfaMjHRNiM2jbVZ15WVQi5q/+V+\
yXcdIWlG8mLzCWxoh6JhYop04qGTuRFlPqedDTVMnZCzcKQaqZDHehIchYSFSuXOSKISdzf33PN/\
q5RmPxm0az6TVc2Ox06AVeaE+U6RItIhY4vNFGeG7tMu4JGRIXKC7XgNFREMhbrwPc5ZYrSKI7d/\
g5J7hm0NjGEBj71aRjQOKCMx77rC8/\
3qfaC0POoEMQNPC8IAipIEAb4zKUOOI9UrGOPi35iXh37rFeHWEIc6XFXx0FAQLJLpYoI/\
gX40Y7gDkbhCgERSU4dJwwkd6JIxoIqyVWo+4l9aUwzVW0SIz+igWJE+\
FEYy1BKHkSBS7zAxx8cCC1UrhJQNjfSfqBBbsxpFIYeC4in9AB+\
nh9lNqIrZWyT5gXM5QGPKCEeI9pjWnu+\
G0bSi0XsBlw4bhRrrljMYyWYMsJ2tQtmSp9HTPWT9uJeJ746tMUudwPFfR6S2IsjBzbpcCh+SCQEq/\
GlMKQ62jNGoYivWRAwEAaVcFQ0Ttqak1Vt2vwoUE7AQsdVsE6XKeV5MM5IoWfOmeNEDqNKh7AW5VFO\
hQ7hL4iQLIYJ0wEO4sLeJ5ja1MUy0DIMNJOu1MSTnuO73Fcy4IT7jCkpQTSBiDWFBcAm3CikinINA6\
Z+TPqpC/NSt1OYNKYcKuSh0wAekkKDHF9Hyo89n3M/EhCjzyIR0JDzgESRG6qYODHXjucI6o+\
BYYnYuM+qb65VYZ7rpR7qdOAqzghcr9RgGIcNRiH03IHPkApu3eUa2s45ccBHUB3Gbuiw2PGgjsRl/\
dR9bHyzaG0qDTWUu56KHS21IqGGpvkuJZpHgjEMwocvjE0YIggg3AtckIgUkIbEFY7spzLOS2W/\
rnEiYx9SFKEfUxeeVgkvYiGPYgYh+lIFMFniae4LH14jYHEchYEXCEVjHfoDrDS3YF/\
fFncrWrewYDd1DKYnKKORDqlDEbYUXLBHpVQOCQKlQKIQnMuI6giqD+\
fhBlILuGOJYVCvn7or45os7Cgfi5nv+Zq7biw8z+\
MxlZo7RgXh4zQ37i9iniQM7CQqCghF6AfOCBXCmB7gS/KF22Em+\
DpOmaDTKOSBFL7UrorDKIhiODYCe6Xc1wpRww2EC/l6MTPhwxcyCJXve5HwBgSMD+\
9hUq7bHzMWeoiwrg8Xy4hHQgFN04gfwGWOAzgAGmMSEAeKGnkxvg8FZ75r3OIA9/\
KRvUykddjlmJgZ4X+4tziOOYAbi1gQQp5KCDhmIEfl+\
JCw4sCOHtyvcihjkgVCywG47tKYFnG1GEcDGVANNeKuAuAF5IgFZAU8GztOoCLtelp5kvqhMaNIQJ5\
AM34QQ5qCDJBnPgKvbm5Vqp1Y1kime/BdhHDgEhopBFw3jAPEK+\
4BSSnNuIgY7BkyltwNdcwoJSETNPRcDEYw7Q+KtJdHILDDvH4KXRkBFkHbfWBgSiBD6Xpc+\
YQqETkxwi/TkS/gnBEvfCqB4gl+hxqgiyjB+yl8ZQQKB8i5n9QQrle40EnKwTPIWRKkL+\
YvsMzAF2QfgU8Eo36AAAgsisvQYcRoVwfOACSaU9q7TE92eIneYS2+Qrehxz0ImrHIlaAL3It8pEk+\
kDuiG4scxGMkZ6EfKtzixFoHA/\
z1Jx7tlGJHT0GZp4l2OAUSDAEWgP1gU36khPZgXop5ygljJjkYDoBBGJERBkGpF0Z8QB6y9iimAdv0\
Sk8gfRVIOoLIBYx2lcNg2ITEXMDiNICESQOECJyQEg6PRCARRFBADeQIA7Q2H+R56NRdB/\
IQ341gSyqK4eE9pJ1QXQcOU3uSey6yAuQuwnc8V0sewtHGwB2MwzkYZfYHINl8OcCA6baO6+\
QwepAAbZShSUuUgr80sBYqqz3FAxHivwDZput7ngMMCU76oeMBfsD89uqZdp0ia1OoBLIn6VMeOR7j\
MGD4IY8TZMZI+yJBIi8EpqDA/gBsCJXKESGNQ9f1HIQEd4Dv/Kk9TWt1CCPUQ/\
rrQoTIRMLQQX4UI9IgV2E+\
fGIMukKFZNnFfcpEdABHZDMsJqEkZADezgfLWoTtSAnSHugITkgZIshwlwh4yZiQED5RmowUSSayAx\
5LIXyEJkcigaFCIm12wpAj1tMB4s3PvIGEUSA/\
hl49VwUIejoCQ2KfAGtxAH2DuVxtcESomQYcB7bUxn0y+\
BsCmL5nqe5urAFzeAAgqwOGXzpEuiIc6FQoFVSKIMkEKAN2dJHlQd4AkiBfEmQ0jg8V3Wsq0J57G6h\
zxA985MCxQySHf3bh3wBgqcOEjgRHbOHgKcAqj/wYiV8YIP4Anplg6YVUDKCuMIaZwTZ5Bp+\
63PVjGbp+AFniI3WQ3mX4GrBCBQRuBQhSicAPhaGdIhFwYSSEOAPix/\
Jg8tbqtQrUChRdYGlRvJburP4BikoSiVDBeYEgGjimn4ApRj2gWS8kSvvIN5GHaE4o8x0hwshHihUr\
HQ5I6J5tHVKRnlu5mNxJ0L/\
qRHyC1jmajWTgCiSqMKqQwHdSN4rMeL3ID4MIvly5SC7AIPgzl0qCoQOqDuju+\
U53lx4wM91o6sLnnqcvuC9EH7izRlfIHXdlQ4hOgY74yo2RtygJFYGWythzBJw04p2vXaK4ZtBg6ca\
UOq7WNCYu4LCkEXMIIlQeGqImDcEOGhgAGOE6Fg4PkbUHiGRRrEgklTEkhiisXN9B9uwFEiKHo2SmR\
CsjHsPSddBPw08OpuGt6AX3U8s1IJgOKzqF6NjzQgRbmDG4iw5MoTmKPW3AIkW67CD6B4DbAioQSu5\
4QoZURgx5AXOAC/\
rJcIck404qltf8FQJy0k6g8JDThTDAwHMZ1M5hNDBFUkB8LyKSUiQkBIk7FVrDViMpZQSkqhF1kaKq\
AU54d65EHXKCHVxBEAgYgikk71KDNeE6hBMx13GRLyFd0hHu0MjfHV8h540CqDRBZoW45ejQ6SfDG5\
KMjCvuCullSwxr9CLkFZJypp1IwRLhQENAEgbPoYXvOYHHKacGePoO0l6hWQCRBhq53oD4+\
f7B9PTbq8AQmQoBdqGHALK+40QBorKKvTDDu05kKvBIbT0Ro9uYcvhRz1TphaJkgL0uD+\
563Rw1x2rqjmp8eUfi25X1TmoNW3AiQYVBOZAMCT3YgcNdGCUQOHTXjQyBUGjEHg9mSoA5oM4CxADe\
mgP+zOxgsp3W1OYbq2laEaDpVPd3tcpmutBIo/Th9JmuS7ezWbAdX+\
LOumhPxDaG2SC3PS06oIMWN3brufBCYWb10HLyo/\
3b0MC5eqnWmTK1m9bsprV93zBgN63ZTWt205rdtGY3rdlNawdjvHbTmt20Zjet2U1rdtOa3bS2/+\
jDblqzm9bspjW7ac1uWrOb1kbetPb/AWX6SWc="}, "ClickToCopyTemplate"]]}}, 
             Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]]},
TaggingRules->{"CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "CreationTimestamp" -> 3.9035964324738598`17.344039901584622*^9, 
  "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "ResourceCreateNotebook" -> True, "ResourceType" -> "Paclet", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {"PacletResource`", "PacletResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged", "HintPods" -> True, "LoadingMethod" -> 
    "Paclet", "PacletName" -> "PacletResource", "SourceID" -> 
    "8f99c2b0ee5e9f24d331c183562e905b4bbb1a6f"}, 
  "SubmissionReviewData" -> {"Review" -> False}, "ToolsOpen" -> True, 
  "UpdatedTimestamp" -> 3.9064306890210736`17.344355112278166*^9, 
  "TemplateVersion" -> "2023.03.03", "StatusMessage" -> "", "AutoUpdate" -> 
  True, "Openers" -> {
   "ExampleSection" -> {
     "1" -> Closed, "2" -> Closed, "3" -> Closed, "4" -> Closed}, 
    "ExampleSubsection" -> {
     "0" -> Closed, "1" -> Closed, "2" -> Closed, "3" -> Closed, "4" -> 
      Closed, "5" -> Closed, "6" -> Closed, "7" -> Closed, "8" -> Closed}}, 
  "Paclet" -> "None", 
  "PacletBuildData" -> {
   "LastBuiltArchive" -> 
    "/Users/plengg/Documents/Research/HyperbolicLattices/Projects/HyperBloch/\
Paclet/build/PatrickMLenggenhager__HyperBloch-0.9.1.paclet", "FileHashes" -> 
    ByteArray[CompressedData["
1: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
3k+MYmpdWt/G8quFCYh6N/Iv3WlWj3oAeLc=
      "]]}},
CreateCellID->True,
DynamicEvaluationTimeout->60,
FrontEndVersion->"14.0 for Microsoft Windows (64-bit) (December 12, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
       CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CellLabelAutoDelete -> False, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontSize -> 14, FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2790153672590285854; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2790153672590285854]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4138174468017918531; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4138174468017918531]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1887802176716758884; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1887802176716758884]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5800166344906378520; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5800166344906378520]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    533841403879783297; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    533841403879783297]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4413051590217973467; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4413051590217973467]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    9150037060110806081; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    9150037060110806081]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2347719643166780208; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2347719643166780208]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3646530685697756512; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3646530685697756512]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1866935765212102190; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1866935765212102190]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert comment\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8817953515714839566; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8817953515714839566]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Documentation Tools\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Open Palette\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1266981032716546660; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = "Open Palette"; 
                    PacletResource`DefinitionNotebook`OpenDocumentationTools[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1266981032716546660]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Function Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7312678540702684447; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Function Page"; 
                    PacletResource`DefinitionNotebook`NewFunctionPage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7312678540702684447]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Guide Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8084030535806498779; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Guide Page"; 
                    PacletResource`DefinitionNotebook`NewGuidePage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8084030535806498779]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Tech Note\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2445183906026021612; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = "New Tech Note"; 
                    PacletResource`DefinitionNotebook`NewTechNote[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2445183906026021612]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {1 -> RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.0025], {
                   FaceForm[{
                    RGBColor[0.96078, 0.50588, 0.19608], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.66}, {205., 212.11}, {246.02, 235.8}, {
                    369.07, 306.84}, {369.07, 117.39}, {205., 22.66}}, {{
                    30.929, 306.84}, {153.98, 235.8}, {195., 212.11}, {195., 
                    22.66}, {30.929, 117.39}, {30.929, 306.84}}, {{200., 
                    410.23}, {364.07, 315.5}, {241.02, 244.46}, {200., 
                    220.77}, {158.98, 244.46}, {35.929, 315.5}, {200., 
                    410.23}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fo6cIdcZ7nDwyqRde5/ix0YQCAgE8J3rXJIAwG5
TIc3QGWtwVUOs2YCwcMMOB+sfkMGXP3z3ys/Xso1h5uXL9R84NRDU4friwts
ud4XQ+TfmjgU2nJdX3wFwQebswONvyAGzgcpL9CNgZu3BGjc9cPRcPuqgdY9
7IqGu+dzX3CJSrgyxJ4TGQ6m7y1c3YuUHEDKqp5kOMi8fmQmxaAEUc+QCeeD
/SWN4Pcf+qoRY54J1w8LH5j5sPCD2R8E1P56YTncfWD5jeVw98P4MP+h8IH+
h/Fh4QMzDxZ+6PEFAOibv7E=
                    "]}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67}, {107.71, 161.31}, {107.71, 
                    86.587}, {43., 123.95}, {43., 198.67}}}]}, {
                   FaceForm[{
                    RGBColor[0.31373, 0.4549, 0.61176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.78, 198.67}, {182.78, 123.95}, {118.06, 
                    86.587}, {118.06, 161.31}, {182.78, 198.67}}}]}, {
                   FaceForm[{
                    RGBColor[0.78039, 0.86275, 0.94902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.89, 245.}, {177.6, 207.64}, {112.89, 
                    170.27}, {48.174, 207.64}, {112.89, 245.}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.03, 350.12}, {194.8, 312.72}, {194.8, 
                    237.93}, {130.03, 275.32}, {130.03, 350.12}}}]}, {
                   FaceForm[{
                    RGBColor[0.46275, 0.36078, 0.61176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.93, 350.12}, {269.93, 275.32}, {205.16, 
                    237.93}, {205.16, 312.72}, {269.93, 350.12}}}]}, {
                   FaceForm[{
                    RGBColor[0.88627, 0.80392, 0.95294], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98, 396.48}, {264.75, 359.09}, {199.98, 
                    321.69}, {135.21, 359.09}, {199.98, 396.48}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61, 199.14}, {281.9, 162.02}, {281.9, 
                    87.791}, {217.61, 124.91}, {217.61, 199.14}}}]}, {
                   FaceForm[{
                    RGBColor[0.43137, 0.60392, 0.3451], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.47, 199.14}, {356.47, 124.91}, {292.18, 
                    87.791}, {292.18, 162.02}, {356.47, 199.14}}}]}, {
                   FaceForm[{
                    RGBColor[0.8549, 0.9451, 0.8], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.04, 245.16}, {351.33, 208.04}, {287.04, 
                    170.93}, {222.75, 208.04}, {287.04, 245.16}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.47, 215.77}, {296.28, 250.59}, {356.47, 285.27}, {
                    356.47, 215.77}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61, 114.06}, {277.79, 79.24}, {217.61, 44.566}, {
                    217.61, 114.06}}}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17, 78.363}, {182.42, 113.07}, {182.36, 43.614}, {
                    122.17, 78.363}}}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52, 249.47}, {43.272, 214.76}, {43.335, 284.22}, {
                    103.52, 249.47}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.87, 350.62}, {120.8, 281.08}, {60.68, 315.87}, {
                    120.87, 350.62}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.37, 281.22}, {278.44, 350.75}, {338.56, 315.96}, {
                    278.37, 281.22}}}]}}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], ImageSize -> 50, 
                  ImageSize -> {Automatic, 35}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Paclet Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    GridBox[{{"\"DEFINITION NOTEBOOK\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]UNDER DEVELOPMENT\[VeryThinSpace]\
\[VeryThinSpace])\"", FontSize -> 10, FontColor -> GrayLevel[0.5], 
                    FontTracking -> "Plain", FontSlant -> "Plain", 
                    FontVariations -> {"CapsType" -> "Normal"}, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                    FontFamily -> "Source Sans Pro", FontTracking -> 
                    "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {
                    2 -> RGBColor[0.33333, 0.33333, 0.33333]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> 
                 RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> 
                 False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Paclet Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> 
               RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> False], 
              "https://resources.wolframcloud.com/PacletRepository"}, 
             "HyperlinkURL"]}, {
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Open Sample\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], 
                 "\"View a completed sample definition notebook\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"View a completed sample definition notebook\"", True}, 
              "OrangeButtonTemplate"], {
             "\"Basic\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3934291920460873112; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                    DefinitionNotebookClient`$ClickedAction = "Basic"; 
                    PacletResource`DefinitionNotebook`ViewSamplePaclet[
                    "Basic"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3934291920460873112]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Advanced\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7566953809767785517; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                    DefinitionNotebookClient`$ClickedAction = "Advanced"; 
                    PacletResource`DefinitionNotebook`ViewSamplePaclet[
                    "Advanced"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7566953809767785517]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Guidelines\"", 
                "\"View general guidelines for authoring paclets\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5906117565281445171; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                DefinitionNotebookClient`ViewStyleGuidelines[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5906117565281445171]]& , 
              "\"View general guidelines for authoring paclets\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.05]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5074018684552945401; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5074018684552945401]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[1., 1., 1.]], "Grid"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Check\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], "\"Check notebook for potential errors\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"Check notebook for potential errors\"", True}, 
              "OrangeButtonTemplate"], {
             "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8900916902137752067; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8900916902137752067]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], Delimiter, "\"Definition Notebook\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4301941258590251066; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Definition Notebook"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "DefinitionNotebook"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4301941258590251066]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Paclet Files\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1312802444570235546; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Paclet Files"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "PacletFiles"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1312802444570235546]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    6325522174070009817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    6325522174070009817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Build\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1579518736508902704; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1579518736508902704]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5625167833203047250; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5625167833203047250]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8714502586816766511; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8714502586816766511]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5593410685219912767; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5593410685219912767]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"In this session only\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2850084946728613817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2850084946728613817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your paclet submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3196298050911436087; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3196298050911436087]]& , 
                  "\"Submit changes to update your paclet submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your paclet to the Wolfram Language Paclet \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3704832848557640569; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3704832848557640569]]& , 
                  "\"Submit your paclet to the Wolfram Language Paclet \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[1., 1., 1.], 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[1., 1., 1.], 2 -> 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[1., 1., 1.]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.0025], {
                FaceForm[{
                  RGBColor[0.96078, 0.50588, 0.19608], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
                  1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{205., 
                  22.66}, {205., 212.11}, {246.02, 235.8}, {369.07, 306.84}, {
                  369.07, 117.39}, {205., 22.66}}, {{30.929, 306.84}, {153.98,
                   235.8}, {195., 212.11}, {195., 22.66}, {30.929, 117.39}, {
                  30.929, 306.84}}, {{200., 410.23}, {364.07, 315.5}, {241.02,
                   244.46}, {200., 220.77}, {158.98, 244.46}, {35.929, 
                  315.5}, {200., 410.23}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fo6cIdcZ7nDwyqRde5/ix0YQCAgE8J3rXJIAwG5
TIc3QGWtwVUOs2YCwcMMOB+sfkMGXP3z3ys/Xso1h5uXL9R84NRDU4friwts
ud4XQ+TfmjgU2nJdX3wFwQebswONvyAGzgcpL9CNgZu3BGjc9cPRcPuqgdY9
7IqGu+dzX3CJSrgyxJ4TGQ6m7y1c3YuUHEDKqp5kOMi8fmQmxaAEUc+QCeeD
/SWN4Pcf+qoRY54J1w8LH5j5sPCD2R8E1P56YTncfWD5jeVw98P4MP+h8IH+
h/Fh4QMzDxZ+6PEFAOibv7E=
                  "]}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{43., 198.67}, {107.71, 161.31}, {107.71, 86.587}, {
                 43., 123.95}, {43., 198.67}}}]}, {
                FaceForm[{
                  RGBColor[0.31373, 0.4549, 0.61176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{182.78, 198.67}, {182.78, 123.95}, {118.06, 
                 86.587}, {118.06, 161.31}, {182.78, 198.67}}}]}, {
                FaceForm[{
                  RGBColor[0.78039, 0.86275, 0.94902], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{112.89, 245.}, {177.6, 207.64}, {112.89, 170.27}, {
                 48.174, 207.64}, {112.89, 245.}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{130.03, 350.12}, {194.8, 312.72}, {194.8, 237.93}, {
                 130.03, 275.32}, {130.03, 350.12}}}]}, {
                FaceForm[{
                  RGBColor[0.46275, 0.36078, 0.61176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{269.93, 350.12}, {269.93, 275.32}, {205.16, 
                 237.93}, {205.16, 312.72}, {269.93, 350.12}}}]}, {
                FaceForm[{
                  RGBColor[0.88627, 0.80392, 0.95294], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{199.98, 396.48}, {264.75, 359.09}, {199.98, 
                 321.69}, {135.21, 359.09}, {199.98, 396.48}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{217.61, 199.14}, {281.9, 162.02}, {281.9, 87.791}, {
                 217.61, 124.91}, {217.61, 199.14}}}]}, {
                FaceForm[{
                  RGBColor[0.43137, 0.60392, 0.3451], 
                  Opacity[1.]}], 
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{356.47, 199.14}, {356.47, 124.91}, {292.18, 
                 87.791}, {292.18, 162.02}, {356.47, 199.14}}}]}, {
                FaceForm[{
                  RGBColor[0.8549, 0.9451, 0.8], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{287.04, 245.16}, {351.33, 208.04}, {287.04, 
                 170.93}, {222.75, 208.04}, {287.04, 245.16}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{356.47,
                  215.77}, {296.28, 250.59}, {356.47, 285.27}, {356.47, 
                 215.77}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{217.61,
                  114.06}, {277.79, 79.24}, {217.61, 44.566}, {217.61, 
                 114.06}}}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{122.17,
                  78.363}, {182.42, 113.07}, {182.36, 43.614}, {122.17, 
                 78.363}}}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{103.52,
                  249.47}, {43.272, 214.76}, {43.335, 284.22}, {103.52, 
                 249.47}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{120.87,
                  350.62}, {120.8, 281.08}, {60.68, 315.87}, {120.87, 
                 350.62}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{278.37,
                  281.22}, {278.44, 350.75}, {338.56, 315.96}, {278.37, 
                 281.22}}}]}}, {
              ImageSize -> 12, ImageSize -> 50, 
               ImageSize -> {Automatic, 35}}], 
             "Wolfram Paclet Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentReplyIcon"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.076923], 
         FaceForm[{#, 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{1.5, 7.5}, {6.5, 11.5}, {
          6.5, 3.5}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJw9U2tIVEEUvq5iVkttZmdfuo/ZbQukJGKVqPBLUTGJ0h9hVLIJRYhUVJj2
AjGRWCKiF0llZWRCSEnZExEJ06CotaiQyH7EIrthT3u6NXPn3jswnDlzzzlz
vu8711u9vWJzsqIoSXwv5tuk6IsgrQvOnLf+1CRC5ZKbg3WJAIJV90rNJoJF
XOR6sebI6W3pyXq8DxccIoGwa+uxj/v/McxNbTxZOJ3w4Rkb+ZVgWGk2ZbcQ
Yfm0V+07Jhm6St7vzVhI2JfBT78ZCkI8cj2hqe/xxaIJJm0PoWEssCgtzvCc
lzlYYwXP5iUYHpXlHV4xasXLeh4wyKCWX2fDqcJwbfQ+w4F83vGQDT1fJ1/U
dzJ842bsih1XB3hiI0NzrPyOq9mBPb1tjpyNDBXci5U7MVQnLhji4nMsE+9W
c6ARL3i3XSWbXNiiLi8EzPxbbqydsaD73LgHJ2wp/OiFoKVJ8Ui+Chha6M3T
H8NZUMPm+XB9p8h0QtATjvtxqUh0SBgV76QHZN+lszReA5pNQ66o1+8HV6O3
rdWCBIcTuKHxHJ4NQdO1sx4Nxxy4VYBug2dVt4lMnB/vGCi7TSgWz/504Etk
VbXlNSGkCmWHqFYbJXziYXlT7VKXEdLq2DDMwyvvksTZZ5W4OgiCjmCVFTUP
dh+3HSKJ8y9hqUogIfqn83PkCUndQoTLQsZ2gpperL3fQJLXIMEn5F5GaD3D
l50g2O3OIkhiCUf7v8/fMJOMuRPTmT2FjLlU+0ghY471+dV93epzr/sPPaJz
u3Ev65sNX/8//gP5Ei2u
          "]]}, AspectRatio -> Automatic, ImageSize -> {13., 13.}, 
        PlotRange -> {{0., 13.}, {0., 13.}}]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11], "\[SpanFromLeft]"}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9], 
            ItemBox[
             ButtonBox[
              TagBox[
               StyleBox[
                TemplateBox[{"\"Reply \[RightGuillemet]\"", 
                  StyleBox["\"Reply \[RightGuillemet]\"", "HyperlinkActive"], 
                  BaseStyle -> "Hyperlink"}, "MouseoverTemplate"], FontSize -> 
                9], 
               MouseAppearanceTag["LinkHand"]], BaseStyle -> "Hyperlink", 
              ButtonFunction :> (SelectionMove[
                 ParentCell[
                  EvaluationCell[]], After, Cell]; 
               DefinitionNotebookClient`CommentInsert[]), Evaluator -> 
              Automatic, Method -> "Queued"], Alignment -> Right]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.80294, 0.80294, 0.80294]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 3145484069433207908; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[3145484069433207908]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAIJQygMsQf39/d3d3BwcHSxgAsoEiQHFiDAkJCXF2djbD
DYCyQDV4DAFaZG1tjccECACqQXYSsiFA84kxAW4O3D3IhuD3BVZ/oRkCdB5J
JkAAxFNwQ4AhT4YhQF3IhgBjkAxDgLqAeiGpEcgApgQyDAHqghgCyhoUG0IV
l1AxTKgSO1RJJ1RJsdTKO1TJxdQqT5CdREnJRgYgphgnprQHAMBNTEU=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlM1Kw0AURoPduHTnui+hDgOSksW0GwMxWWSZYFqKkEJaiO4EX0J8AF9T
T7gahmjs0MxlWqbffHN67/zNy12yPguCYH/OV1K0i6Ypnu8v+JHV++2mrh5W
9aHaVM1NOUO8/P50/c9j4eIhsmkxBonj2BgThqH6Cfoo6C6QNE2jKLoaD0bx
/APhj7TWONW1zs3j9u71KXuXRh8FnVE8dko2BL4QlrdJm7295B+/Gzqjwunz
sSFSBZ4/p9tNOPgHENKTKsZyGOQjdUlRPYSVR6TqowRpOPEzy4awg4isniME
J35mMVdOIx1OAiK74AjB2ZWvlEC6qzEZ4iUTj2viZXe8nBMvJ9bX3fFyi329
J3ZKU162E8LlGXd57b8AKuPmMg==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlD0OgkAQhYk2lnbW3sLW0lazDZ1G/KHAZDURr8AxuAANp6DmCJT2lPqZ
0Y0xChvZl2ges29fZmZnd7w6zDc9z/OOA/7my/NU6+VlMeRDRcf9NgrWs+gU
bAM9WfUJjp6/B7+1wUYDVDf8MonjOE3ToiiuL8CJELcx8X0/z/OGtFlF02Ci
ta6qikhd11mWJUmyewFOhDiraFB+NcFfHMqyDMPwa/nEWRUfk8+7iVSBprWT
4oP+w4SOSRW/cvjIR+qSPhsTOg+h6lYHAUr07Ho34QQhdM/SBCV6dsFlGiFM
AoRTsDRBiZ5dYvK4Gp1NnGTisCdOTsfJnCgXE6sc3R3l4habfDq+JwYdX7Y/
0JC2gc1rfweIxIKt
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.33333, 0.33333, 0.33333], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.33333, 0.33333, 0.33333], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["FileManagerBMPIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0,
              2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
             0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQEiDhBawAGVr+Cwm1VIxP6ZBJyvW3ExfIKZlEPU
lJsKk3kUHNbt4rs6pUXaYdetrr+p2+UdTN5buLpPknF4tX098/M3cg56xw5Y
9eXLOszamGFlLSnnwPR3X/3nR7IOLM97NN6+lXGoSH+7jfusrANbyvry+j3S
DvZPZ+i8Oy/rkLYqISSIXdrhdFOnfdcsWQcfpitXNoVKOWQJq3+3NpF16Ftv
u1nlgKSDuxWzsv5pGYcaz+QtfVqSDg/fi29WtZZxWBTbOmX+FgmHrI+aDMcm
Szu8yWzfr5Yt4TDNuTvnebSMw6EPgoaqRhIOZ8/z+t7kBJqfY7eOd6u4Q+hH
t2cT62Ud5jg9Ny3jFHeI32r0cPovWYcgvy2rJwSJORTlCb+bainnsOOHCMPj
SlGHxcHhdqeN5Ryivu681TVXxOGVbF57m6ucA9eXThvPKGGHU1YysUtPyzo8
uaB0+6eckEMmMBRknso4OO1ZF7/BWtDBtPJU1q570g4cRQGHfKIFHDJWBHoY
dUs5PEh+6Sx+hd/B9HrmkqVGkvD4AQCmgKFd
             "], {{5.49393, 6.2940000000000005`}, {6.24061, 
             6.2940000000000005`}, {6.429096, 6.284750000000001}, {
             6.614185999999998, 6.34661}, {6.759240000000001, 
             6.467319999999999}, {6.890777, 6.587419999999998}, {6.962032, 
             6.759840000000002}, {6.953660000000001, 6.937759999999999}, {
             6.96995, 7.11698}, {6.9035910000000005`, 7.293840000000001}, {
             6.77343, 7.41811}, {6.613585999999999, 7.530479999999999}, {
             6.419682000000001, 7.58385}, {6.224849999999999, 7.56911}, {
             5.49393, 7.56911}}, {{5.49393, 5.8706}, {5.49393, 4.4308}, {6.31,
              4.4308}, {6.509734, 4.41999}, {6.705573, 4.48902}, {
             6.854379999999999, 4.62269}, {6.9925049999999995`, 
             4.761840000000003}, {7.065081999999999, 4.953080000000002}, {
             7.05406, 5.14884}, {7.08081, 5.3499}, {7.011307, 
             5.551820000000001}, {6.866472, 5.693819999999999}, {6.721637, 
             5.83582}, {6.518383999999999, 5.90132}, {6.317889999999999, 
             5.8706}}, {{9.131169999999997, 8.}, {10.356000000000002`, 
             4.736610000000001}, {11.5814, 8.}, {12.221939999999998`, 8.}, {
             12.221939999999998`, 4.}, {11.727999999999998`, 4.}, {
             11.727999999999998`, 5.557409999999999}, {11.774239999999999`, 
             7.238630000000002}, {10.544139999999999`, 4.}, {10.16581, 4.}, {
             8.937809999999999, 7.231200000000001}, {8.986680000000002, 
             5.557409999999999}, {8.986680000000002, 4.}, {8.492740000000001, 
             4.}, {8.492740000000001, 8.}}, {{13.799369999999998`, 
             5.566080000000001}, {13.799369999999998`, 4.}, {
             13.305440000000003`, 4.}, {13.305440000000003`, 8.}, {14.68744, 
             8.}, {15.04065, 8.0207}, {15.387580000000002`, 
             7.899980000000001}, {15.65166, 7.6644999999999985`}, {15.88797, 
             7.431630000000002}, {16.01454, 7.109539999999999}, {16., 
             6.778090000000002}, {16.02146, 6.443669999999999}, {15.8971, 
             6.116339999999999}, {15.659, 5.88053}, {15.38536, 
             5.655040000000001}, {15.03595, 5.542569999999998}, {14.68216, 
             5.566080000000001}}, {{13.799369999999998`, 5.9969}, {
             14.687369999999998`, 5.9969}, {14.908019999999999`, 
             5.982140000000001}, {15.12579, 6.053599999999999}, {
             15.294799999999999`, 6.1962199999999985`}, {15.44357, 
             6.350040000000002}, {15.520309999999998`, 6.559620000000001}, {
             15.50604, 6.7731400000000015`}, {15.516169999999999`, 6.98493}, {
             15.43995, 7.19177}, {15.294799999999999`, 7.34633}, {15.13914, 
             7.49474}, {14.93073, 7.57494}, {14.71574, 7.56917}, {
             13.799339999999999`, 7.56917}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCDFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 3.5}, {17., 
            3.223860000000002}, {16.776139999999998`, 3.}, {16.5, 3.}, {4.5, 
            3.}, {4.223858, 3.}, {4., 3.223860000000002}, {4., 3.5}, {4., 
            17.5}, {4., 17.776142}, {4.223858, 18.}, {4.5, 18.}, {16.5, 
            18.}, {16.776139999999998`, 18.}, {17., 17.776142}, {17., 
            17.5}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
            1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
            0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 
            1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {
            1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, {{{11.76489, 10.215}, {11.80176, 10.266810000000001`}, {
             11.77555, 10.604633}, {11.58396, 10.907632000000001`}, {
             11.290009999999999`, 11.076163999999999`}, {10.99606, 
             11.244695}, {10.63778, 11.256947000000002`}, {10.333, 
             11.10889}, {11.05187, 11.20557}, {11.479730000000002`, 
             9.99811}, {10.727409999999999`, 9.33197}, {11.149809999999999`, 
             9.52223}, {11.50957, 9.82843}, {11.76489, 10.215}}, {{8.1958, 
             10.303830000000001`}, {8.202184, 9.241180000000002}, {
             8.904717999999999, 8.30847}, {9.924319999999998, 8.009}, {
             10.0459, 7.98489}, {11.0395, 8.27055}, {11.746269999999997`, 
             9.149949999999999}, {11.81152, 10.181730000000002`}, {11.44906, 
             9.569830000000001}, {10.80329, 9.1811}, {10.0929, 
             9.147189999999998}, {9.307032000000001, 9.191650000000001}, {
             8.59527, 9.625599999999999}, {8.1958, 10.303830000000001`}}, {{
             9.91321, 7.952940000000002}, {7.39209, 8.45477}, {7.04614, 
             13.89722}, {12.13989, 14.18054}, {11.451440000000002`, 
             14.616627999999999`}, {10.66164, 14.866693}, {9.84766, 
             14.90631}, {9.270579, 14.904569}, {8.706776999999999, 
             14.732987000000001`}, {8.22656, 14.41296}, {5.411620000000001, 
             12.47095}, {6.03, 7.93628}, {9.538089999999999, 7.93628}, {
             9.65967, 7.93628}, {9.784709999999999, 7.941830000000001}, {
             9.91321, 7.952940000000002}}, {{9.29089, 10.69141}, {9.25389, 
             10.639469999999998`}, {9.280137, 10.301669000000002`}, {9.471731,
              9.998700000000001}, {9.765674, 9.83019}, {10.05962, 
             9.661680000000002}, {10.417869999999999`, 9.649429999999999}, {
             10.72264, 9.797469999999999}, {10.00376, 9.7006}, {
             9.575790000000001, 10.908}, {10.3281, 11.574259999999999`}, {
             9.905787000000002, 11.384055}, {9.546119, 11.077912999999999`}, {
             9.29089, 10.69141}}, {{12.77489, 10.73059}, {12.771159999999998`,
              11.738362}, {12.10084, 12.621973}, {11.131339999999998`, 
             12.897090000000002`}, {11.009269999999999`, 
             12.921389999999999`}, {10.0158, 12.635689000000001`}, {9.309201, 
             11.756293000000001`}, {9.244139999999998, 10.72461}, {9.606552, 
             11.33644}, {10.25222, 11.725138000000001`}, {10.962520000000001`,
              11.759090000000002`}, {11.69498, 11.721043000000002`}, {
             12.366620000000001`, 11.339892}, {12.774899999999999`, 
             10.73059}}, {{11.51758, 12.969909999999999`}, {11.396, 
             12.969909999999999`}, {11.270959999999999`, 12.964357}, {
             11.14246, 12.95325}, {13.66357, 12.45142}, {13.741819999999997`, 
             7.11825}, {8.91577, 6.725830000000002}, {9.60423, 
             6.2897500000000015`}, {10.39402, 6.03966}, {11.207999999999998`, 
             6.}, {11.78508, 6.001780000000002}, {12.348869999999998`, 
             6.17338}, {12.82909, 6.493409999999999}, {15.644409999999999`, 
             8.435419999999999}, {15.025630000000001`, 12.969909999999999`}, {
             11.51758, 12.969909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCSSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
              1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxdk3tMUwcUxmtZNl0M0Mel5T56wcyCDxwzSLvSlW9EGUKlDogymTY8hrjI
FHFs0SCyDIaADtRBZMjDuDpgbRgspLRDIqIgGW0zqnF00IVNRjMU0slkQ2B3
y/CPneTk5PfPSb7vOyc440jSO3wej6fk+p+5yLsameclYD7PUMVmKVZYe+By
JiIlOPN58h3eTwTae6cb1N8R+CFa5/P8qwG43ki+PJYlRgW/cJ3OG4B9WVFu
XZgIRiL3XH6FBI9J6/a5SCHaBqdOv1Qvhbb5d9J6VYDXmg4PEdcDse/+iG+R
UYA6e7dr7gqJoZsxxkMNAvR8knAuqoTCqDIjTPNAgNiYNNsXShql5XlL8uNC
tL9574h8koa0w3I3f6sIbwmbDDW7GGR5hyMVcjGCT/Ys/LyfQXxvIaMMIXDr
imc6azf7jOXuw/mZKhZxlmzvcJcIihuKXY2XZXDsnKH0aULc/fXdTX/UMsgO
nEiV7BVAGxF3I7mMxqmWRgVxyB8flGhSb8sptOeoogJ/9MNzmuhKf04P79/y
x1bafhCMFGZR54G1D/wwa0grKPs0AJOdar9HJn+Uk9qbs9UEHl30vbf8pwD2
+rkNA8fFMHgLPh75SIRjbPc2z6QIX95OUJxJJ/7bK0bO5jpbYqzkGY/ufsXm
7pdCNsF2PZ4XofSr9+bqxSSeLivT+5RiVHJ2iTMonHg6boi2iuG8lRtxupbG
X/Y6tmgDgUFda6GqgUHt6pTloAkCql+yzauKZDh/akF11MblWaFbFS5jofB5
uyrMKkH8luXgxS4WXzOV90McUixMOT+z84OwduaYwO1Z0R8E/Z7Q7xe1FGLX
v8+vWx2E8PSITa5rNJRtmr1p1SweWtfNu1sZqL0v+Ng537cXa6pDWmQoXVqz
Zc9FBs2W7nmXhoXT2HBhXEHjLL416bn8Npo2LpgGSUxJq3rGuXxXeHrziWv8
RAbmJ0fv5A1QQFxAePFvNGZto7kSC40c00hcwg4aNWt6nfaTDCbVmfqOZgpl
6p2WbKEM/QVPeGMDJFSh6YaHehkKO4fPejg9SYnftFUlyVASqnfE9Ekx5Ztx
8MX9MvSVJxtLWiRo5c6hxcFgorVjppwnwYcp2153jtHwxKam9HP/0U9demOp
iULNkEuQ6CIwFH8hyRFG4v//9jeFT3Hb
             "], CompressedData["
1:eJxdVGlQU1cUjtRRRAsJSyAkeXnv5UXEBRAELFT6iRSwg0QRRREEMyguCClY
QKUsLTXUEYG61G2wiFQLKorgiBsuuEWMoGg0kYhSKBVEZFNQoI8u/uiduXPm
3Jlzzne+851LKeKCVhpxOJxg9o5Yn9gtws4nDALcf5wded0ajwqVs0yiGYz+
dNAiLMAGg894VsVtUjgnTaMk5TbYlOWbxF0nxd9x/TagBfExs7ppDHQZtRe6
CLDyedu68O9o4MbTiswDAhgdlPgaS2jkpr73UDrYYsRoGikEujWbvP7JFpPO
OXxovEDhTHPY1pLJQniZaAuVFyl4U0amBWohfM90D9afpRDcVLS/Ol0E+c5M
H52BwnZFZdFDJzGq5iz4Rc7Q6HEv4I46IgZVvet0UiIN/q76catpAhdjeTZt
ehrHRKFRnhEErp4Pq07yliIosLwkN4iA47sZdo5lUgwtu709O5LATd66N/Yk
A4fPOnaa8gnoqsruH97AYKt9no/j92IcO/44IrGKwctlLRuWtovwlTbg0pMW
BjV1TW/dxCIoR4A/Z+DrF99vNleIV53aqGyd7KNvvGhtH/QyiNpeuNmSIrBZ
AmIuyZB1zgxru0WYahqd6qqSIbk0dG9niRgEf+287kAZ/PvnVsijCSTK2ZdB
Bi0+503shwmU8bK0vfsZBJnVtZoqJLgh3Os35MTiy/vCJlkjweOsSFHYOSne
39DmLzUiP/bP+fuQiD3uaK7bR8N0fMWvG8eSmJl6dIaij8I2K9c9Wwok//ZP
wStk2amqGgIr5J4fXEdRYDL9hH4TCMjUhiBNFQlNx+1r3q9EWK+2MjRfJSHK
SA6vuixEoLWi1+8yCYVVXBRRaYt0bbRmoIfE7j+uNCw9L0Dhktg1rsEUnPNn
zxkeLUDGmP0eOToKIraNSNIGC06PDc3YSEMjTXPqTLGGfgQPI0W+b+jkODtr
NIyvMfnykBRn/7yXeriVj1QPwmW+gMEJb7W8+Fs+Do3kz2RQ/nprY1qbFQw7
VD+EXmNgmN0eUJBghV69NiOBnd+YB04pPjWWKJhUa9f1OwMP3UzFNMISDXcX
iuObGMQ/hz9faYGTmunk5osM2gsXhnjdMcdLL85v81IYTFXxn2hCzPH25uaH
aoYBE+7Sv0rPw9g9/aapLP+37io/8TrIAyFkiZFLEfr4gWnacR5axEda/R/R
cAve1u1ewMOaUi9iYDmNWt16631tPIRQzXYPh1i9F5mFz08zh73UgZNdTCEl
O/zQpvEWiNDEhLRupv7RkcECLzynt11Pp1CvcjgaV2mJ9PbejhwV+dG3j6j1
NtpCoix+dd6rpxbwdy5JOltE4t1CdsFGW+Ba76SwnBckdjo96CsNMMfAaYk9
LaVwLGHCreU5PHR4CLvupbD7esl/9Z1+Lnp/btihaqagKW3hXDnAxbSJbhLt
YhqHi7oSM124yI8c/ib2Pg2OcUvrm/dmyL3KFpD/pz8uVg3Vua8ZkCJ3XFX9
Pb0ZYpI3FU0tZGBpwlMaL+KCqfyg6pkig/N8wbCXlIchf55gcYEMBEubwzMe
nKtPOcQ2yaCWTPj87ZA5lhx1vetpkKFsZN5TLKG8/fWRDY1sfDy/r7zJEhXB
hu1KtQyRzbW0fq8V8lawwsyXwfvCiYiTnnzk1e5OsI+VgZb0xCxu4GNidp1H
8WQZLr+piN4dZY3//5d/AbYWNr4=
             "], CompressedData["
1:eJxdlAtMU2cUx0uV1xDa8iiUtpeH0nt7L7IKkyJu+Ee7ollxgiiKOpBUp8YB
jhHRuOFjTkEUfKGIlPEGRUHCDAiCPHSohangxkBFBRUFBKcwGQhrp3PJvuTL
l5N8OTnn//+d4xQeGbiGzWKxgnRX/x7QTo2TXWIwt+psaMlsPryo1Xn9SQyM
Iu42Lb7Lh08il/hKxSALGY2H1bbw1f8bpaGSx/uGXbbFYFaxY9NeGj0rHn+z
XGWH4nOfBUWa0+Bf4e8Uldmh6Wnp8bZEKRQRPwgHR+yg+nzZQwMbKe749qky
PQRw3zzdySGHgom6eHPcSQEm+vwSGkEh+btR7yg3ewQsLDudzKaw0PPRBwOH
7HE1qLYg5x6J1pRo6VlaCAOr8hh5J4m5TmyLzGtC9JtXy1LbSQR15aY1bBdB
SF8ZSWNROBBekXtbJkbVwS3dHCWFV/JMrkG+GGkeWWXy4xT4R1tN1zkT8Elb
knH6DYUiUYh6diiBS6a7TbzUUgTq6wgk4D7p6IuBFinGV1w9sD+MQH3o4ZnP
fGm4zXp+xIJPoM28g78mhUaC9KDiw11iFIyycjwf0Him16dPBKVLDPuECQPt
za4/PcUidMqrh7VsBkq/r0c4C4To9WEV+o/9FxtmH/I2eMNA1PvQ095RhK66
Hcmu9xnsvcDBhpciSFcm1Q0VMIgtDkkdPC1GYZX4QVkUA/WpsKDALwlEpytD
aAcGRH7PfLcJAk7GLtqyizQCOTd7LMIdULe+dl91oK6+g3PsYpsd0CwIaBfe
kWL0ym+a5WzH9/2z/jmOKMkXj5+oorC9VBoca+yI8lN9lc52FKLUxMiuTId3
/ZPwCV5xrkZLwPZF+vEhZxLTvvcT+k0hsPhGv8v+BxI0P79aP7dfhI6a0ls5
3RKIdsSuqrkkxNhoopnxQwnCbSLVRIU9XsZ/vOACn0TKk9q7yysFyMhLOTMU
Q8Jd4ztvYrIAW47te71wjIQo1W88zNEOpks2DCONQrMO68Fttm/rUUqh0ckQ
Sdoip/v2LKMGKVpPPBbn9/Cxda9yM3c2De3L+8+LvuXjR33+XBplAwn343pt
sLs3oJx4RMMuR7AvL9oG5d3li711/jnr+9FaY+2McyPlRgy8273CpxPWyPz1
owEvQwZLZXShVZQVgiVjgXM6aZT6SgSzrlviSSLVb66h4bqH/3tzsCU0DkqT
JCWNaas8RtZ28BC7Ndd1nk7/xqaoST4ZPERu60912SRFSFuLRdwZHv645R/O
fU3BPjsmaGYmD17uSWO12yno7TjWy8OpnQEL0h11vOdyVi2Ks8TR+VnHArQk
FIxMHWNmhU/0fKeT0E/rxntWyFdYXkzM0s3THreCyAprrI43PuJfKHkfV9RV
rmzIl7zV844VuGY/5W35WQJrw78UmslW0OPpP5nEEVnLcLHKEu2LZjR3KkgU
RU9p/CKJh2v2Q9z9GhLnq+evuz7ChV6eT411/hQ/ZtWe5KJcq1sQsRQ2zrvs
FefBRfayiPUzX1FozNWRNcrBm9bYp5JN//LHRWmWUYtMRCPZtKb1lw4OrG8o
2gYbaMgqSY7ZEi6KQ0uE5/0ZuC8STPhM5SF+oKHItp4Be/hmIdPJg6p+kDfD
0BVnI4ZOvhq3fJfXFaV6vxlrJDSWJMjZruDXTiwt7bKGjsoweR8Dald29+1U
G/x/X/4Nxp4vbg==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEFBwht4IDCb0Dwg3h/2248ZuDgafrm+xEp
eai4IZSWQ+OzwPkFU9UFyk4xoskzwM2D8VHtg/IZeOD8Bv7pMuWnONHM40Cz
D8pvMITzBeRyZTYeM0RTbwQ3D8ZHtQ/G14fzl0h9q07q1UczzwDNPgMHABhL
Lgc=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}}}, {{{16.75, 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {17., 13.}, {17., 
            4.25}, {17., 4.111930000000001}, {16.88807, 4.}, {16.75, 4.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {6.75, 
            16.}, {6.888071, 16.}, {7., 15.888071}, {7., 15.75}, {7., 15.}, {
            16.75, 15.}, {16.88807, 15.}, {17., 14.888071}, {17., 14.75}}}]}, 
          FaceForm[
           GrayLevel[0.89804]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerEmptyDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGZigAMHMNlg4IDCZ+CB8xv4p8uUn+J0KJiqLlB2
ihEqzgGlWVD5cHM4HATkcmU2HjNAU28INw/GR7UPxteH85dIfatO6tVHM88A
zT4YrYCd34DgB/H+tgWZ42n65vsRKXk0e+XQ+CxwPqr/YfIMcPNgfJh9ANTj
LzA=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEZBwitB6Eb9OF8AblcmY3H9FHlGQwcgnh/
2248pgvnQ/Sh8RkE4fwHh1WPzy0SQDNPAM0+KJ+BC87fcUqYw/opB5o8B9w8
GB/VPg40czmg7tVHMw/mTi40vjScv0TqW3VSrzSavAzcPBgfZh8Ae5IxSw==

            "]]}, 
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYCYt1Nc98vTzNyYAADHYfN1Z82BKwWhfPvbm2p
ubBZBM633HKibN99YYfGqc7dOcu1HTq+3L7euFnYQXFDUcZEXW2HzTyFa7pv
czikSj6KEN/O4/C99MEcwaUcDhXcKhp1PdwO6VefZ2l/43C4og1SweWgeVrg
+K4dnA79Tz7JX8rndHhzwFLZq5rLwXNug9qhNg6HOO8T7LazuaH2czhccLnx
4cspHjg/Y+LbGvupBnB+7vPfKz9eQvD5QB5kN3To/pv6/Ukip4MxCAgbOsx+
Jrv8hQe3w4/gx0tnPzFyuO/fOz3vkpaDKhvQZ6+NHF6qGXKskdF2eFglss79
oZGDS3fO89+Z2g6aMf2Hvp4wclhSYMt1fbG2QyGI2mDkAHKG6T1tB5D27h5E
eKKHLwDeAYl+
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYC4uKMiW9r9hs6aMb0H/qaoenQLnbz3HdjA4fl
lcc1rS4JOJROlmAJ0zNwSK6/aVsZIQCRFzZwYAADAQeX7pznv1/qw/mTTtd7
7P8rCOcfcVqbeW8jgs+9dVnl8UxBhyD1BZ0bFAUcZpXPWaRsKeigsvNP+5do
AQctK6AJHIIOX70i2yymCTj4JQlEWH4RcLjHxNkl/1jA4W/7l9vXGQUdgLLX
juoKOsjUJBqFGog7XF9cYMs1XdPh6+3rjcVu4hB3XtZ0sEh3yczfIA61X8th
4/4382x0JOD83ul5Qs0NhnD+r7qsPSWTEXyh5gOnFi41dDhZtm++1HtNB5B3
V240dAjaIdf6+qKmw+mFrts+7zV0uP0TqHGLpkOnY8LTC4cMIeHWp+mAHr4A
Ca2MUA==
            "]]}, 
          FaceForm[
           GrayLevel[1.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerGIFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {CompressedData["
1:eJxlkmtMUwcUxy+Cz20t7eU+2t57C04DZAkGZUWdYf9NpIjxscocoqKiEEtQ
OiQyIgpzW8IcakDdCji0WkGgIZEMQWVgREBBeUatU5GHgHagGErRCnYwIvuw
Dycnv5zz4ZzzOx6RcZqoaQRBLB6PiWz1N7g69SkRbKrJJ74joWxxORy2Uwlj
3cvd9jYpMpffuFPwh4A5EVbKuFGKcHObKGWAR9BEPyvFdHmsZZmdw5WMpKfi
Wgnuq2q6z9oVcK8qe96UK8GLE6J7jjdyxBy68JYwShBpj1iu65eh3v/hI/14
fcQj7rK9k0VYjSJL3S7BY2/e5BhisC9k5t+OzVKkLvLdkkYxuGb0DVfflWJ3
z3zH8a00LLNXLTuTTiLH3RJAPKcw917XeiLWDaWVwbsatBS6dL3f7N1GYaxL
c/KSFwXdrW/zE3Q0Sl4e7kj5hELsxDw/MlMcxpS1ELksdty56Z4oodD66fG4
S0vkeNW6OtJVT6FXPCN3f5MCaaWv3YhzNA4OZM13msPDW/xBad5lBrrGtNZ2
dwER+6NXpi6VIU+8Zd2TEmFy7xtyNG+vrCByBNSyYXWvnDkEekwTGQoFKBpH
Y0TgsaFi/IBrBfzrQy0g29llr1XPwy3ztoX3USKkZ2BWfg+HblNa9rNqJcK/
9yja9FiB9/4ift8B2xU5/Ks/ej3qKkwx+Ve8T81dfnIeDYeynI6cvK0cCsnm
QLOOR/SZhe8O1MpRvGf4lDWAh8GQcuiXUhl0bafHgr/i4bXPTzRcxOLC0qfR
5Z0cWrpHVGNvGFxPTnKySTj0+dYvWqBmwLb3zK0kFUjUVm/XDtIwbQvVeHbI
sKYlY/M7ZwYfen9eYCtgp1g178VFq4HBjLOeUZohGs3pK9oeaGnMs0w/3RvK
YNfK1OxwFQWzOr84mWahm/V1jA1uaFR4/pTUxMIr+k+2XksiqqjB26lTBvvB
mIqEISksJXpz8qgcRz87/8OwQwrT27ovE/QKZDakBFeNSeES//PHYj8OxX3G
kSNiEr8GJHxxoIHDmoXxtM2PhHnQGrIxiIe9XBWavp6E+DcuMaRs3M+zilqf
DBJrM4uzkkkBQceePLT2/ce3z5cX9l+lJ//9gfx/HDhYdbKfZad8ved/AFKJ
jN4=
             "], {{9.72359, 4.45312}, {9.264159999999999, 4.45312}, {
             9.264159999999999, 7.6084}, {9.72363, 7.6084}}, {{
             12.973590000000002`, 5.846680000000001}, {11.51221, 
             5.846680000000001}, {11.51221, 4.45312}, {11.05321, 4.45312}, {
             11.05321, 7.6084}, {13.21044, 7.6084}, {13.21044, 
             7.268550000000001}, {11.51221, 7.268550000000001}, {11.51221, 
             6.186549999999999}, {12.973630000000002`, 6.186549999999999}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerHTMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           FilledCurveBox[CompressedData["
1:eJy9VNEOgCAIxOhH+qU+wcde+v+3XG2tDkF06kabhsBxp2zx3CMTUUjfsRDd
65UD/yy5YQt/PC6Zx2ky6q1il4Pw7+FaJE+s5MHZXbYuJMz2ooG3OZGw25gH
GJC5Wb4uNiitv7qUw5BvHAwNVRGA7YIbqzU4QS//A9dwNtxb7cl0FNQvjba1
h3BxtoxAbktjs+oZkhPYrmpQ2gUPPRDZ
            "], CompressedData["
1:eJxkfQV0FNvSdXAIEGCi4909g7tbAhuHAMGDBwgOwd3dJbi7uwR3D+7BITgE
dwv27+qe+/Gv9e5ab71XryctR6r2rtp1rhrZpXbrZF5eXkn4nzEpvbyS8r/L
fGh5rmnazEhXNXhJlLcZP5a03fYyWWZc2P47Z870ZkTn75Nb/evG3WXnUs5N
bkaGtxdud/rmxtcaXbcuS2lGxN2Kyfq+cmN8cJW9bUxmHN+ap/Pyh24sy5hk
TM3MZsw6cydT2B03Xjb/vfhYsBnxk7s2en+F9/vctnTt8mbsrHGyZcozbuyu
MDd9gSpmxD48t/nZYTf63/9+u2BVM1pML/xS3evGzc77LjWpZAYty72tbvxa
++FK9bJmzH1f9ff+tW4Er5unvCxlRq+6hcvELeTf/4pfVbqkGY2v7n/sR7vY
p/XFUdOMEk/a7E4S7UbSNOOdLcPMaL7qTbOG49zovWfsu+PVzPg8jh8y2o3E
fnWmepczY23lUVtHDXUDtcuPrsf375sy/W/fgW7EzLk5sAnv3/vgYkveQW7s
f1O2x8KKZmwO2eYG7aDk4T65a5uR8mq+geX5+y0X8isDmprhdrVtUWOAG6GZ
zOEf2pjBt1ns7M3xiLgStLGlGWtuJdt4uKsbOzn81TuYUaB7wNftLd14/2yt
z55+ZvjNj+5Yrp4bnX0ynrs8wowbO7NtK1PRjb11SjT4O8aMZrzN8hJujG72
8nn1UWZjXgq4kadywYDqbc2Y09k04nAONyb/OnK4Rw0zlu0Jc+XO7Ma5CgOz
tgkx48ntmvkvODlfz6tXyMHxeNOq64z9FjcuONqlGE1bXm+KvxsLBm47P4nz
laT6yPQ1MriRY/DEPR1pT7l9/PRvHzeut1+x8mO4Gf2/nRxwzduNsQNyDUqI
NKP9z/rh85K7kfFOQOsi7cx4tP1BhWZJ3Bictc2BIH7vm0XBueISXcgV+2N+
TV7PLOP104WRibOKN+1txqqsuT4MTerGx6cpblZabUbxF4Med+TzVyTZn8IU
Z0bdnu7ZfxU3svXrNTnJDzP49iVO0j74YUfbWcktyJbwdVpskBu5SqU43Del
BQdW5G9Uid/jV2Lz1qp+FsTmqXWgcEauj7+NT0/ObUHKfS3uLEvH7zkzstnL
ShZjfPk9h5dPcl2PtKBBcv7wjwttHD9GDGtrwaQFo0LevHfh9sPNpy0zLfAd
vHZx0acuhNbtkj6K9rH3mfJnfuTCkgo7P/2eYcGfcolvXj1w4f2V6pEZ51gw
qvzt2MU3XShfaO+Im3MtUM8Ebp9yyYWkcXExOxZZEHfr9INsp/k8+WeVBQXr
5cux9pgL+dZ0mXt1pQUXfnXwybjfhTy21KeT8vq3PbfH/97hQsC2iHRPV1hQ
tOFyx7KlLrwdFt781DoLVhy9WXbKCBeObtzXb91yC6aV4IwOckHf6Of/105s
MfJ9ux4uHFe2dG93md+T/vuvfN35PUX91+a7bkH2EtPODmnnQuoL5lq3f1pQ
qCrfPJLvU/ztDJ+vFoi7SFuXf2/KkG2+yQptcq9u1uouPGma51HJTFbkXd6g
c/sKLtTe7Rj1irazYuroIqVc+LOfO5F2mmVvk00p4cL+s1ywWawoOXZh9p68
vt2N6rlLWhGWstLp9QVdCHrepaxa1oohlQ8NsmdzIYe8V2UrPvYeeXV4oAtN
BnoP/VDNiqDiaQfczsTvb39kwsFIKzq3L+x+Szv5Yj65ixV3vlzxSxLgwozY
dvZ6nay4f4eOy+JC8P0ak2Z3tiIkV9y8Z3YXuv49Ezq9uxVxfQbXGs7fH67c
7uyenlZcDMjYKEMGF5YdG9gvSW8rrv8tfm52KhcONjneJ5J2lqALhc95uRA1
5lCWjvz9uo8hrkyJGup67z2wopsVR20hg7t80nDm+zdzIJ+35bTlS8Y3GmKu
rPDr2diKL3duDOvxTDP8He2BLQrUy3dbM76zvhUH883NEXRNw+dTznTBtAdd
2tbwy2kNVwpP77KzoRXZbter/IO2aWnoeUc7KyIONS8atU/z+AsrZJdt2qDh
a8NFqfrQDmkxLtWMhRr2z19NV2pF2l4NHs6arcG7U/HZjzpYsT2gzdKF0zVU
i1jYEvy+/BseTTpHO2jXZa/44VYsbFdffTpGw5KXU+Y/HG3FqOix2af21BBe
+UeVHdFWmAt9rtG1m4bBhVOlfrbGil6/h9/b0kmDz9Py+7zXWrH4ab+ufdpo
yCb+hnan8EGbdkb+ux50Zlxvf9p5Gr+aMHKWFd1vmD6W6aIhIf5Y5pMLrYb/
6M7xy16/7+wJVjS80a74pY6a4RfHW2G9HPLK0lpDlq6vOi+iXbLjrqbtIjQM
lHjE3y+W9w7XYMt7z51ymBVz0hc4faqKhhUMj61GWrFTj2MacPbTg7dRHN9N
OX5uqqxh3pfIbFkbWfEr9saihrX5vcNPPDxXg/NbKJ0zUx0NLyWgBPN7erTs
f5TXKxbL3fdyUSs2S9yorqGmK/fMXS6u/9Up8iaG0jb/LfVYs+JRg8Bdl6Eh
McOLXZt5vXFI1gNdgjU86u+3qVIZK0oxHFUP0TDeUu3Y+1pcf/eCr6mlNSzK
M2Hcec7nldr9Sh4to6HRMHV940FWfNu8oVD2CpyvmL3Xekyz4sChMgO+8Hs6
fMjuFTvdirl+zsVT+D7IVyn6/nyuh/n1Fq+nHbZe7Ra90oqs5Q+rdfn7oVmO
jl69y4qtd690qMz32b97Usr3O63Yfe5FzJxiGopYDjdWlnL8b171GZKb4/2t
pF+KeVYMTXN37/xADVrw7WKRk6x4/eVt9DdvzROXrRjxZYjPpy8qKvIxa/tZ
0WxvlXRJX6l4JNuR+y9gf0LOyo9VnJs8Cfu5X053W91zS7yK7w56oLpWqNMn
Lhh1T0VEgO/86KpWzFLpgO6oqPl95eD4Qlbsp7s/d12FIs/PbUWhGwxkV1Sk
a5m2jE8OKyIJYwaeVvGrMB0px/9a5apP35xS8cD/yN9w+rPEXBdH7DumonnE
0EE9vf/ZxWTheVlxKuLdn76HVJwRx/Tbgu7jJz/5SPvZpsxPRvyh/5R1vUfF
qU6Fhu7i7/V5jlFh8isde/eLBTnOZjy5d7eKNbM2fqmQ1IrZf6cM/rlORRjh
2xl/qxE31qroHFMxpHw5Kx4/GTxm2RQVjAKtv5W3AotPTV8xQDXWK+21+XZm
fNJVxd1nsZ9HZrbi6sQKV281VHG4ddjsE24rMq/blXJnqGrML6/r+KUqn78i
DL5cXxP8C88ZXUbFnEIVX60J5ffuLlJ3YkEV15d3DfGmv5lQtED0L1XFQU7X
rZZcr7OJrGgP9fXO1HWsFV127skfQrv5gz3funL/1mkRpZ6ivUDW50krJh4c
Xqgl7cjJjkO7Xlghy90rC+1pU7dtSWXDvbODuvtlU3Fz9Phuf7LYkPPW1kxj
s6pYNvlkuroVbbje48rPWNqOoXFZwsL+2bLsqof/+32DE9a5lSJsGPohnSUx
UMXoZGrDw61sCJz3qtAVk4rue3NlKTLEhkbyh78ViFu+SrtknYT9sfEKYsuk
KdiJdkbBxycVfM446a3S24a5efMeLrVOQaj78tlstCOWP0WGlQpuNutdw0F7
5QnzsQVLFPRedanfpEE2ww8uVpCjQ770x8b8s4tc3lT2TLQNNeDb4thyBbLM
C86yQdxn+c0KppjXTByy2IYNG3ln2mfS1Y09tJn2hDvtvGhfis3U8cNpGxzj
kw7SaI+/8SVt78f/fp+y1eY+Q37Z0KHL+1GntyuIOZ7szCra7ZYU+DNop4Lu
Vxf/rvzBhhjC+yT7FazrMHzNTy87xD1ueqygP+HWrbR2jFnGFUb7YP2N1b5n
tuMHUXzSJ7R9CUAq2DGC0XeQv4oiXBZHmv+zTTJuff7Zo4c9jz826n/tibmT
F8/2UMGiu+9q+o21Q+DeFI6/z/q+rk+0+84vGuZ9leP5qe6YuxPt6FR3dbKG
nI9NeU23u0+2Y0CSr5fX7uN1iSuT7CjI1zi8/J+t+8+BChq8zrsva7Qd/Z5k
SLloAOeXw5ed73sxg2tkJdpxfV9kyV/ZjvcFibTaKyj0o818a0E7BD7fb8Xx
6n6oXC3FjsNZOsaVoz3r4sfg3VY7ehcoFhrRlPO/Zky7nqns+CzxO5z2Tdlp
drxMGtHmZk0FA+U9OZ755hwq+yyU87vke/5nPrRzrPW9VF7BMwmUGe0YV6b5
00sFFATvub80G+3vvR4syJRZQRYzgU2iDdX3HN3XxE/BPIlTP2w4db5rslIZ
FHjrC91m8KP0Cio/ZMDg+/hea5yscQoFF+genqSzgyTvar67TmS7H9WjpcUO
rSgRH+3DyTvfO8/vDRb8ddCJyYJ7a9pxmjDj2yYnks5LbV0Uwe+fk7uh/1In
knM7Je9sx8gLHV+bZjrRk9vwxmA7Qvo1WFN4khNbmm2x7uT4t+44aOqlWU6Y
jhJgz7JjXbnOo61TnLhNunBqhR2Ndl4PTMPfx/G17WvteBz2ovnvIU5kRAff
rLvsoNfE8OFOg18etyPw1oVvdUY4YTnRver6h3asHJtufV/aunv/Y0dU3/4r
c9HuHXl9wlKbAx9utJrUf6wTo5VUmc8VciDfsMZ9Ps1wYlrWKjeqlXKAg3/z
Pe0YCVSNHShbInjkh+lO+NWfOah+KwfcTU65dk91olHq7jWPRjnQazqZ4GS+
/4/BHfb3dKBRq5JEjk7ME/jU14HV9c8UOM7fR7oybn7VxwFGy7stxznhk3bH
qn5jHIiaXcQ2a7QThUZx4GIc+Pby8dJ3i5wQdzLrjgNECfWnxDpx7nqitvSN
A3tJYzfccOIoYVzjzw60+fVzYtrnvL84oAQHvjdIvJTiixP6cvvqQLUHRASc
788tzzWtmtqJojV6nTqfkfvlxGqvoLxOXClBYp1DQd2gxqm75+O8CwEuqCD8
a9NMv3g9vSUx6+5i3B/1Wt/3V52otaTGkyplFaypvS1VI9pP53fqXK0G75fe
//Gv3E7I6r3ZXAHJutda2jov60n/1G9S02WJDnB3t1g1ib9/vuLbpAxOAx+N
UJBa/JPNie1Pm4xfP15BticjFp3P4TT80UTP88o4kaz8kYnZxyo4R/i1IYTr
5HK3wjH8+97cFitpn6yoRNwYonjwkROn1vdId2qygivanR+DQ52YlDZV2Rj6
4+Ezy02IquTEhnu9l+7ZRH96MOfwv9WdOCRxkf6xSPCB2rP494NmPT9yb4+C
yeKXaPeShX+Q7798XZplYU7MvTd9zKgz3J8jRv9JQzt83ozhne/zfoTxk2gP
qX59zZgE7s+yzwv3zu7Ewj+vK43/TttU5XMBft9z++qEyn8UlC/OAEA7TPx/
MhW9xZGUcmLWzCwrl6T9Z+twsoCKLYRxKfi9Ou1lfHyyLubd+AcO5BFAU1jF
y3KBcbs2OOB1umfC52AVHzlc92Y5kKa6qeqZCiriCROLjnBgvfxZDdXArd0d
yJ/+WKXjdVXUvpa81rcWDtl130rSnjEv5JJ3NQeOP3t8u2YLFVdm9ci+KdRh
+E3iizmP+AK07yzccSdPTxU5VvxacbutA4fSjEpdjHaExP9xtMVf0m5zNO+X
T6scSCHzHqUiHy1thwNEg+tmtldBNnyw8ql/9uRp9Z8HXXJA0iMn2qk4/iVb
k+ikTvzJV7bv9loqSvy+Fe2XyYkTf2IGfKypGvmpCk5MHLlzQVVeX8TXKrTL
iaaCJ4mPGmVuYLuw34nADtU/TV7O8XgpmQYn6qRYPq3EUhUZ62jjIp7RT6Qu
NjLHShUp+X8neUM/wOHwo11z2qa5Az9xfc3ZN2vKZuKbbsU+rf/hxPLtRb8f
3U6b9OhrohOXScf27FUx5sfHpK+TKVjWv2Pz9ccZDzn947kvFxRctr0o8WXV
6bUvvaEdM56A6pyKMnGDvGqnVcAou3LwBdXA4fTjHYVH8u9rrBtUwuGrYIUQ
eNrZLmX96DYrmLtoCyO7ClmGeWmfkv1wUcWuXtz5QQq6SJy/rMK2M/eZKEVB
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
AP/nC/0B0DiClA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmIBKK1/V4WtUVTBgQEMBBx8fZvMlyRKO0wILlGZ/p/f
4e7s+wYXBcQdzDaENh19KOTwIOM4735rUYcNM2s2n/UVd3hiuv7VmjRhB43m
xU+u7pR2WLC2uXlvpohDvcGHO9UZCg4TxS89VDwj7uDy6+3rA5JKDvWNCg5t
etIOnEde/2I9reyQflnwwFklBYdQwTyjVT4qDhftwj7cjlByWF55XNMqSdnB
etUshVd9Kg6fVF7OOlmuBHWnmsPTT/KX8v0V4HwDkD+uSjusObqcQeK/qoPd
ZhWgX0QdlE3fJs2KVHZYoSR6TIxJwAHdvzA+mA5VdpDclqatf1LawfsEu+1s
ID/526a3W66KOxxgybt7llnJYeI1iRInDTEHp1kbM6x+yzvs21b363yViIPc
nblbb7+TdqgyuTr5Z7qoQwbX3Os3XMUdqr7FLFNrlHA4I5fB2qYj4vB/GsOf
4FnSDmbGQCAs6PBcvnbyMkUFB6HvEb8uqAo4aFy57P5AXcnhkAmPvOBloPxK
vp2SeioOfcrXHgU3CEPc3aDqkLM9NmNdsTicD/P/apmoFOt6VQe+22KpZi8U
HFazJeZ9F1J28PVy3D49RBnDvwBU6r8x
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQreD4MfnMXWkHLatJp+tPyDsY7Fbn5/4qi8Hvkk9+
F3VIxMHjYZXIOnY5hyX39/HNKRZ2mP1MdvmLDlmHDczPezR0hRw03/LuM5gp
4yC+/SLDPSdBh9p125LqZ0o75IaBWAIOGx++nLrJR8ohEqyA32F7Uv1N258S
DgxgIODQwuu/fspScYc9JZMlWK7xO6R9f5K4MEzMQSdV8lFEuIDDk+Z5Z1f5
izow+gJV6gs6aEtMvcKZIeJgbxq3y5NHyOHMu5OHnd4KO/hdnBjzz1kYaq6I
w10VtsapzSIOhjO1JKaKiMH5bqqlTLM4xByeXlC6/XOfsENUivV9f18xh9ML
Xbd9/ivkIKEWzLr4kphDua6i/JccIYc5RxQ2FGWIO+ybL6V/94kg1B0SDpZb
TpTtmy8I909km8W1o2sFHWRePzKTOiDpIJx4+LL2UkGHFce8zTsbpRzC+HQ3
zX0v6FB8XeiTI7+0A8camaiUaiGHdTfiy/znSTuAnNErLuxwZRYogKUd5tvo
AJnCDrD42rqs8rjmLhEHAIs2smM=
             "], CompressedData["
1:eJxdlHs01nccx81KWi3PzXPxXPyu1Amtm7Sy3l225VARpSKkqJzUqq2WiSLa
Gq3mJEORRiG7IOQRoiakVWs6OKZ1Gc1qrKto7ft7fs/xx77n/M5zvr/f8/1c
3u/X50uHblkaZmlhYeFHHuHX+oxu1Tojj7lxdxrSZimRbTepk0vkcXmUe8ay
LiWaT7xf9tidh8uh7BeTw1XIvEj9sK2HQ81uvdv6iypY7T0y/8tNHB6Uf/9m
t5caE9VHbo7uYVEzLnNqTqkalunW2uNBLD4oe/zq5gs1DKd6Frp0MbjtLATU
mOMyKL28ozorXYNvjKmHbF7SuPKosX6esx3Wxra576qgMfv80lT6oB00d1ao
yg/TMKV11OL3MSn5cWQfnOZlm9SkxY4lBmVEMo1OjlQWr0MVCRdVRuMdo6PN
mOl66Bvvz/n2NY2s2U430/P0KNsXfa1kJYOh/P4bixgDPFcmurVeYtBUP69o
Y5ABkd2D+f1TWJye3jJrsY8BCzZu6UvIZ9HgOeOLuSEG2Cf0+lQYOIQ/v7fm
hNKAVFJW92cc6p+OD/wqTo+0zbL42iYOuug1U5b16fCMvK57yon62utwNzfj
ItXHITOHPTf0oVY8P8gP79mOgZiIIR5uL+rWFVA67KzOIg7xYj9PdWLdOTxG
D2SvLynQY7LJUB4ThDQbDGi5QtZYHgVxPh7HLOzRdvW5791cTowXYg/NiOXj
nKdwGNGdNP5hiz1UC72H1CUsblcTAy2p4f4tTIuCn1DwHgbnkq36lNYUXAvf
8w+4TqNO5eA78qQ9Nn0ales0n0ZUw4R3v2424Jequwp9I4WXMRFVH8sNYtw4
SvS/XyfWu4/CzNZLkdNqtdg8bU85yPeTpP39pXYgpn+y1UiZedIg+SgRlKJh
kn2kRqyvmIbQRrFeDUKDj8dqBo+i50wPilJhqrDkLIjbf+gdVehTkgbTWPxN
8Cp6oEQsKStFzUHAoitGCXKq0iOJw8/hv3ZH9NpiaYUhofc6h+W7vysLjbU1
c8yhLZiQ1qrA4lDJiplPOMhyz19QOSgwcb+SSMyhobIi2eojOVatm9W1pIXD
YDMBuk4GU7p9HJzCCMn+MrF/jkNaZ8r+hHYp6hJP+TcVs/AP+LHmr+NS/BQp
CMLChGWRFNsOHLz3Tw0D7duCglLRRzC4zhBQ/pSisv3Aq7BbNLZvOPwwOlYm
chxDI36SV95bVnL0bj9rO+hJY17I/WtMhxwFBJ9Qbxpn83Y1TKhUIOK3rQcO
LqCG996C4POp4f+3n3kZGBlGYYZdbQD1hhzxBKs9eRRGCQPoJQOhOqvwIYVA
am7/2iQpBHtuLKLFup5LRJ6raNGnYxJ4uLymX7ky+PxJx629UyUI8iSTYWSw
OvLSv8WDNsP9i/xJIFxTxmcsgkdd1fi024C4NdaykBP58pWIfIAXeWSl5ny8
eK5VKuo/wgHpO8mEDcjMcR1wlFwTrhMV4txaOiCx0e/C6XsKs648TOkybPH/
+/I/ZYc7ZA==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJPEGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQnehv/cc0Utoh78Y2jc0P5R3KFu70U/aVxeDP2j1t
Av8tEQf7SMMY2QRZB6uXtY+z+4UdPNrbDepeyThMsytxrPUWcmioLXl1il3G
YQZIfZSgw4U7zoe+y0k7lHmxv/5fI+CQy7jw64enkg47Xp6vW8Ih4PDtZcUZ
h6USDleeZ2l/ExdwuHBx1bSSFHGHltA9EytZBBx45AWDlTTFHAq+zvmyrxDI
t/kup2cp6nDtUTBDj7ugQ1WXjFJenIhD1f0ft4y1hRxmJy5ec/+NsMOJuZcO
/ooXdmAAAxEHtfXnDBVmizgUXJ7/1+OjKJzfqmVaveCpqMO8/mznozeEHU7J
LUzzUBVzSDp8WTtVUtjh3gmbT+yLxRzamBUjD7QIOTy8ZPhcUlvc4QXDQRnb
f4IOj7NSwqOeiTvMkr4sPG2HINw/PoWhN8uPCjrszCk5558o6VCiMv3/hH2C
Do9KJq3VE5dySMpRPOHIKeRQ77G/VnaGlMOhlFUJIZOEHN4cV/spKC/t8OCw
6vG5RsIO8U6s7eIp0g4MJTP09YH+gMXXn6a7G3IvijgAAJv0uk0=
             "], {{8.27593, 5.600999999999999}, {8.27593, 
             4.0764499999999995`}, {7.7903, 4.0764499999999995`}, {7.7903, 
             7.970409999999999}, {9.149, 7.970409999999999}, {
             9.495699000000002, 7.990780000000001}, {9.836413, 7.8734}, {
             10.097, 7.643809999999998}, {10.32893, 7.4181300000000014`}, {
             10.453540000000002`, 7.104199999999999}, {10.43952, 
             6.780890000000001}, {10.46035, 6.45471}, {10.337919999999999`, 
             6.13566}, {10.10423, 5.90714}, {9.834327999999998, 
             5.687319999999998}, {9.491156, 5.57794}, {9.14383, 5.60102}}, {{
             8.27593, 6.020399999999999}, {9.149, 6.020399999999999}, {
             9.365609000000003, 6.0059000000000005`}, {9.579484000000003, 
             6.0753699999999995`}, {9.746219999999997, 6.2143999999999995`}, {
             9.892242000000001, 6.3635}, {9.967786000000002, 
             6.567780000000001}, {9.95391, 6.776010000000001}, {9.963729, 
             6.982559999999999}, {9.888697, 7.184149999999999}, {
             9.746219999999997, 7.334009999999999}, {9.592580000000002, 
             7.478730000000002}, {9.387888, 7.556730000000002}, {9.1769, 
             7.55095}, {8.2759, 7.55095}}, {{12.779349999999999`, 
             5.8757800000000024`}, {11.18246, 5.8757800000000024`}, {11.18246,
              4.495850000000001}, {13.037669999999999`, 4.495850000000001}, {
             13.037669999999999`, 4.0764499999999995`}, {10.69683, 
             4.0764499999999995`}, {10.69683, 7.970409999999999}, {13.01235, 
             7.970409999999999}, {13.01235, 7.5510100000000016`}, {11.18246, 
             7.5510100000000016`}, {11.18246, 6.29641}, {12.779349999999999`, 
             6.29641}}, CompressedData["
1:eJxlk2tMUwcYhos2RYXNnlLbCr1gClJ7enowKIg4eQUVNYgFB5F0Gmy8kCIQ
OorMxigbImZeQIMixcpFx7wEAaGwSbSiBfFSdU6wKAw3ZaZMhCETjbgds4k/
9iZfvjw/3zzfN0OXHrdxAovFmsfM+/1vAjHz/kLJgUQeZAL9yuGLNHj88NZH
RQSuOvjzz62nsSDmbuEX77ioxPFrh16qYSke0SmquKBtC+cbjWrEpZRsLY3g
YkaNIbnwOYV87+grgwQX5R4ubd8GCkvP2qtYIi4cLZas0TAVFE1rYr+ZzEVt
0C5HiooE33wgJXIjgebFIx02qxK59sc3z+V5IX9R0tM7BiWKK9tepP7IR/ze
4ZByjRKlLy8ONbgL8F2AamhnnBLL+grDRWuE4yxoFXwtrhchqKI+ZDRCiYrc
o9YdJ70xqOE/89qjRM+eRDrvoBj3nO29iukkBlLfnJfNkiLk6ZQXhnISzU37
OINZMnxLsUMVGSrkZK+9lCT0hU4R0BW/jIK849fVLE9fJGe61waNUJjdb9fE
8H1RUDY6u8+ixqZfpl3+2yrDidOTKwbkNEqOMnFK8ba105JYQSPbuN/N2S9B
qyam/swgDevw2M/Zp8T44IOVnsO2r/JBlCAwR+tOj3PVDZ1u2I3G6ci0PJ9A
MaR9NzxqbqvhHRl6t3qCBLWdF8J7TGp0aCdq/YslWNp+5ktPhRoFmbeemCkp
lnS7+zb8QKHY302v/0qKhs2H2d8vpzAzWNaZp5eix4+TU3RehTo/rKRMUtiy
OZ+MyVWopnldhgEJfn82ZDI7SHA5FtPUV2IUNrX9tDuNRA9TN6HOB9MrjZ/P
XUTijzSLqyDMGzUa5jCiSdi6Ey88bxGNs+OIMEm2/T9fESTyj83KXDdRgLIV
t6TJRhJsIakP3McHO+FTqq6bxLu/jL2lsV6gihrlpcEqBGcYLkXG8rA4oXFb
zHUVXOw5RHAzAeJtun/YJgrRGfHOrXYC5s/uTPFk+p74Myv3XguB212pwhIP
5n7bQx4+ekDA72b9GKll2FVgfszhYUHZluvTGH9PApiHoHkY6LeFyrvUcL3v
Y+KhkWNdUTOJxpvlDavafvvIvdv41VHrBdgtcDperab+x/OWRBleTxWN+/3A
/wB+8G7/
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMXIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerNBIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3fTo+Izdx3QcQlPvix78r+KgN2HBD8Nv+g5/JioZ
rZmk4fBh0XqFsx7aDp/Ymc/vna7p8OfFlannD2k7bI7jeeoSrefwr2J91MwE
dYeItT4/lubpONysiZHW+qbiMOeIwoYiDwOHqR/fG+v1KDlM8HQ7dwgo337E
dppdiIzD+e/Bj5cC9bs/rBJZ5y7r8AmoTGaGpoNyTkXV0jfCDjnndTgDJms4
TD91W9DPW8rhmF7gXlMGVYcYBcePyUB51ry7Z4NzFR2u/VJaqAvU39DULWqa
oeBwaMUSP4dgGYe603P0uj3FHTbNfb/8WLeSQ15Y7bptStIOX70i2yyA7pv0
tsbe9J6QwzFv805HoPslpl7hzADKH0lZlRAC9F/Dwbwb2zzEHbafeblpBtD/
/AJnLj5OV3AQWrr3oDgwfKYaXP62PkfRAQBEtY9z
             "], {{14.80901, 9.345419999999999}, {13.743519999999998`, 
             9.70987}, {13.016919999999999`, 10.654219999999999`}, {
             13.952580000000003`, 10.306610000000001`}}, {{11.37113, 
             7.1364199999999975`}, {10.71228, 6.004419999999998}, {10.71228, 
             7.177}, {11.39769, 8.1788}}, {{9.82133, 12.979130000000001`}, {
             8.690819999999999, 13.38113}, {8.03666, 14.26438}, {
             9.224139999999998, 13.742750000000001`}}, {{11.738219999999997`, 
             13.74254}, {12.92535, 14.26367}, {12.27094, 
             13.381170000000001`}, {11.140869999999998`, 12.97931}}, {{
             13.176730000000001`, 12.69978}, {12.60295, 11.88607}, {12.63669, 
             13.113}, {13.30869, 14.019279999999998`}}, {{10.48084, 
             7.6483799999999995`}, {9.600349999999999, 8.933119999999999}, {
             10.48084, 10.12788}, {11.36133, 8.933119999999999}}, {{8.82607, 
             11.30619}, {8.782, 12.866109999999999`}, {10.24941, 
             12.343890000000002`}, {10.24941, 10.82582}}, {{10.71228, 
             12.343890000000002`}, {12.17853, 12.866109999999999`}, {12.13679,
              11.30619}, {10.71228, 10.82582}}, {{7.78548, 12.70037}, {
             7.653829999999999, 14.01924}, {8.325000000000001, 13.113}, {
             8.35872, 11.886630000000002`}}, {{10.113909999999999`, 
             10.394459999999999`}, {9.233909999999998, 9.200330000000001}, {
             7.73775, 9.64138}, {8.6871, 10.875230000000002`}}, {{9.56485, 
             8.17925}, {10.24941, 7.17699}, {10.24941, 6.00399}, {
             9.588669999999999, 7.136619999999999}}, {{10.847769999999999`, 
             10.394459999999999`}, {12.27461, 10.875230000000002`}, {
             13.223969999999998`, 9.64138}, {11.727799999999998`, 
             9.200330000000001}}, {{15.12577, 12.00872}, {14.018169999999998`,
              10.766060000000001`}, {12.710669999999999`, 
             11.251830000000004`}, {13.495080000000002`, 12.36425}}, {{
             10.4809, 15.38392}, {11.32134, 13.94576}, {10.48092, 12.872}, {
             9.640999999999998, 13.945920000000001`}}, {{5.83618, 12.00977}, {
             7.467, 12.364930000000001`}, {8.251059999999999, 
             11.251930000000003`}, {6.94357, 10.766800000000002`}}, {{7.00905,
              10.30738}, {7.94515, 10.65472}, {7.2182, 9.70992}, {
             6.152049999999999, 9.34592}}, {{6.25151, 8.900640000000001}, {
             7.36125, 9.27952}, {8.546149999999999, 8.93023}, {
             7.5544899999999995`, 8.616499999999998}}, {{7.776040000000001, 
             8.210890000000001}, {9.1027, 8.630609999999999}, {
             9.136519999999999, 7.219290000000001}, {7.60984, 
             6.5491399999999995`}}, {{11.82447, 7.218990000000002}, {11.85887,
              8.630529999999998}, {13.1852, 8.21038}, {13.3511, 
             6.548449999999999}}, {{13.40685, 8.61593}, {12.41507, 8.93009}, {
             13.600359999999998`, 9.2795}, {14.710359999999998`, 8.89981}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPacletInfoIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}}}, {{{6., 13.5}, {6., 11.}, {10., 11.}, {10., 
             15.}, {7.5, 15.}, {6.671948, 14.999096000000002`}, {
             6.000903999999999, 14.328052}, {6., 13.5}}, {{9., 12.}, {7., 
             12.}, {7., 13.5}, {7.000358, 13.775994}, {7.224005999999999, 
             13.999642}, {7.5, 14.}, {9., 14.}}, {{13.5, 15.}, {11., 15.}, {
             11., 11.}, {15., 11.}, {15., 13.5}, {14.9991, 14.328052}, {
             14.32805, 14.999096000000002`}, {13.5, 15.}}, {{14., 12.}, {12., 
             12.}, {12., 14.}, {13.5, 14.}, {13.77599, 13.999642}, {
             13.999640000000001`, 13.775994}, {14., 13.5}}, {{6., 7.5}, {
             6.000903999999999, 6.671950000000001}, {6.671948, 6.0009}, {7.5, 
             6.}, {10., 6.}, {10., 10.}, {6., 10.}}, {{7., 9.}, {9., 9.}, {9.,
              7.}, {7.5, 7.}, {7.224005999999999, 7.000359999999999}, {
             7.000358, 7.22401}, {7., 7.5}}, {{11., 6.}, {13.5, 6.}, {
             14.32805, 6.0009}, {14.9991, 6.671950000000001}, {15., 7.5}, {
             15., 10.}, {11., 10.}}, {{12., 9.}, {14., 9.}, {14., 7.5}, {
             13.999640000000001`, 7.22401}, {13.77599, 7.000359999999999}, {
             13.5, 7.}, {12., 7.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPNGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {{{5.529, 5.57807}, {5.529, 
             4.053519999999999}, {5., 4.053519999999999}, {5., 
             7.947459999999998}, {6.48, 7.947459999999998}, {6.852703, 
             7.9696}, {7.220449, 7.853290000000001}, {7.51264, 
             7.620859999999999}, {7.761139, 7.404469999999998}, {7.898312, 
             7.0872199999999985`}, {7.88574, 6.757950000000001}, {
             7.9057260000000005`, 6.425880000000001}, {7.770876, 
             6.103259999999999}, {7.520519999999999, 5.88419}, {7.218853, 
             5.661900000000001}, {6.848291000000001, 5.553469999999999}, {
             6.47438, 5.57807}}, {{5.529, 5.9974799999999995`}, {6.48, 
             5.9974799999999995`}, {6.713101, 5.9819900000000015`}, {
             6.943998000000001, 6.0508500000000005`}, {7.13054, 6.19148}, {
             7.287083999999999, 6.33478}, {7.370268000000001, 6.54129}, {
             7.35676, 6.753090000000002}, {7.365949999999999, 6.96311}, {
             7.283390000000001, 7.16676}, {7.13054, 7.311090000000002}, {
             6.957866, 7.457780000000001}, {6.736853000000001, 7.5351}, {
             6.51039, 7.528030000000001}, {5.529, 7.528030000000001}}, {{
             11.87171, 4.05348}, {11.3399, 4.05348}, {9.319080000000001, 
             7.05438}, {9.319080000000001, 4.05348}, {8.787279999999999, 
             4.05348}, {8.787279999999999, 7.947459999999998}, {
             9.319080000000001, 7.947459999999998}, {11.345, 
             4.933299999999999}, {11.345, 7.947459999999998}, {
             11.871730000000001`, 7.947459999999998}}, CompressedData["
1:eJxlkXtMU3cUx6soT4V7y6MV6QOYj97LvZUFWAdGv0EkmJkNyibo8LkRO8qs
DzYsCr7oWHRCFUQRplINtloxomFqRAU6FohjAXEK69RKwaLjNcwgxamXGNkf
O8nJySe/nOT8vp/gDRpl+lQej6fgemK+rQVI9GlzeMfycfKZvtxWK0dtIH80
NYfEvzdMCbokOV5qkw95dhPoG95R/srKoqm9gDUWEbB5FZv2JrFYE3/J2k4R
+LZwSufzOgZCh6/28Asf7Jz+VZNBxmBzb8q23TwCjk6zM+1gGBR3/7lo5t4F
e4NKFozQyBMpNsYtI6C1+7ieUNMwDLjou+wEZOur+tf2UWgdeTxgziXx5FzN
4P7dFOx+ouaetXykGiN/jVlEQWpp9YvW+MJquONa9kIGe1dieOtJP+jVS35W
/CbD4Tj56dQBf0Q9Hml0b5PhiT2vwADBJNdYXFqqKoQw1UfMkNTLcFN/78KJ
4kBIZywcFXtTMFz5YKwhPwjH50zJyDBR2J/5dNxEilHp9ezz3jgafJ/55VvT
JcgYT1lx/L0wfNNYu7RsphSeOndFvieDLZ91Zi/lSaEuuDVXbWEwsZblIUVa
4qP3z+5gEdWu1MYYJDjoOhSQQMgRcew7W2iDGD9+xG0elWPh1Rj1T3+KMF3f
ZWnu5/xc4QQdC8I7fxVfb1r+iWI2XnVs75s7zE7y1dWq6rsPWGRZZSKzRAQu
tcVnXjNwrs8fUu0Tw8291zHsxaCB+zaZLEYIcfG5IDMMvztDKpmNYhi7w12O
tNHIQWcJbRVhRc0XoYSGhnnagcayR0G4vu9BWawb/TbPU7NRpywNLrxH4ctz
6z5VzgvEhJ6PbRTSrPEu288LJ1lVOs1oShdgT8vY6Kz7FCjhkQ4Phz+aJVzg
3jTEiVE9nho/bFUd6t+5i0ZtlfYXWbQvbqRcWD7WQ+NM6LWXBRF8/HGWO1AX
BktReDZTSSLn+/hsgmbg0MQGT60moWtV/8XXMXAviipMPU8iq3286f5DBkbl
ZbdV9SROZbb4P4xkEd2X260eJCEt/qFCl8si31n64eoAPlY+FerrbrJwclpL
NvDRcHvboO1vFiUJhqNJd/7jvMWRa64vC0B6cvUQK2D+xx0eqpDMMcGkr3f8
Bvidex8=
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerSVGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 
            2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{15., 10.}, {14., 
            10.}, {14.00113, 11.596388}, {12.921309999999998`, 12.991014}, {
            11.375490000000003`, 13.38965}, {11.62449, 14.3584}, {13.61224, 
            13.845852}, {15.00095, 12.052766}, {15., 10.}}, {{7., 10.}, {6., 
            10.}, {5.998837, 12.052669999999999`}, {7.387368, 
            13.845787000000001`}, {9.375000000000002, 14.3584}, {
            9.623999999999999, 13.38965}, {8.078326999999998, 
            12.990908999999998`}, {6.998712, 11.596276}, {7., 10.}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1,
              3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCwBmIQDQG6DhBay2HribJ983dpO0x7xRSXBuQnfi7MXTFD
yyFv6fW05LNaDm8emUkd0NaCqteB0ho4+NoORUeiariA/AWGk1eI79FyEFb/
bi3yVN3hVPuCrC9VWg5ZsqG+AlvVHaQOHvv63kvLwWC3Oj93q7qDBnd8/Gsp
LYe77wNEXjirOwRx+r/4+l8Taq463L0QWhnOh9ijBFcPsUcJbp4k2B4luH2a
YHEluHsg+hTh7oWYqwT3Dypfx0HTatLp+hXycL6KuxWz8no5h3XOpqqR87Uc
3n5ay//6rrQDX1429/nTmg5rXj0tn/VHwiGP73oWPzcwPA9YKntJizlcWud0
yh/ont3cU0QiGEQcyoVrLn/p1IbzYfEE43e+adbhLtOD69cP3Gu6Yas+3PwJ
HzWmfviiD7f/l4dXlYSUAdx9gXtO3VqWoI/mfj00/6Hz9eHhk3AuJ/yFsz48
/Mwq4qdyt+rDw/eZnSWXANA9sPC/8WXBApGn+vD4Ca++wc3KYIAWfzC+OpwP
i3+Yelj6gJkHSz8w+2DpC+YeWPqDuRc1faLz9dDSt57D6Zb4V8/XAtPFlZnV
HgX6DrLMm67v1tdxCDii1CarZOCgvE94c9waXYcPPdu0Ot/oO8xWeGXHoKnv
0NCwNev6FH2HDr0V+TOFDRwsfOfLFujqOWx5VbxV9Le+w8b7wq9DVuo4PL2g
dPvnOX0HraKOHZaq2g7zbXSuzGrTc3iSfV6HE56+EfkTAK7YJ3o=
             "], {{14.5, 15.}, {14.223859999999998`, 15.}, {14., 14.776142}, {
             14., 14.5}, {14., 14.223858}, {14.223859999999998`, 14.}, {14.5, 
             14.}, {14.77614, 14.}, {15., 14.223858}, {15., 14.5}, {14.99981, 
             14.776065000000001`}, {14.77606, 14.999812}, {14.5, 15.}}, {{10.,
              14.}, {11., 14.}, {11., 15.}, {10., 15.}}, {{6.5, 15.}, {
             6.223858, 15.}, {6., 14.776142}, {6., 14.5}, {6., 14.223858}, {
             6.223858, 14.}, {6.5, 14.}, {6.776142000000001, 14.}, {7., 
             14.223858}, {7., 14.5}, {6.999812, 14.776065000000001`}, {
             6.776065000000001, 14.999812}, {6.5, 15.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxdlHlUFWUYxvGqIJBwl7lzl1nuxTI1jmhFQAT4IAUEqCcDssRSkDCCEDFB
ELcEzRYkCNc4uRCulLJISqyCIhVbbIqmCCaLQQgoINY3d5A/mnPmzPnOzLzf
+7zP8/usAiOWBkuMjIx8yS08G/175l0M0cA/PisvcIEK1kN7b6SYqLGTbvn9
YYoKfOY9T5siGum9mRXe9mp4FsVzDplKuNxrOT3CarDkx9TgXXcoVLTm7thU
o0FIw1+h1hsoRDXJ+12rtVgofBhLIR/b2y43Mzgckt0V9SkFz9uxVJYJByvd
QJj/GAWLuee+653FY5+P8kuvLiWO5Ng/Km3n0evwhse6YRpma2aExVzQIcb8
udmbfdRYAsWqMoUePvafu67M0KA7Klc5aq6HsZxaUHFIi+TNo45rLfTQtC1T
nU9mcHGWpXnuXR1OVTf490Sw2H8xbY9lrA6rV7S6T3bgELSlxXmjWgdm+q25
e25xqAi33Xp+K4+5hgZ5vHQ3a2Z7GYd/gn5d4X2FR+qQ8Qf7nuEQWrA+RT1F
B/e8B2N/OLAYrfq7skyiw4lji0mHDM6MBISXP2En1mZNR9c6m3Fo3hblnmrH
osGUCMtnIbt8If8rYw6SA9OYdJ7F+95XTJwPctgQSToKZ7CeyKuy4THTeNu3
bl9oEXi40bY3hp/QXzvj+vDmUB6ZGy/PcaxTo7GcCIjmYa8tXq6fpEYcleVx
25GHoayfCh015IdCDttJG0MVNEgKZll6c+I8Ymi4sd1tdgdYPHEbud+9lcZb
Hx+IPtTGwK/k+LHFZB3Rl1Dp68qg5vXmvoGrNOYEJJUOHtci7rN5Pj94qTB4
vYko1GJVWb11sEaN4e+J8dkalA3ODkiSaMb306B+UaB02bAGS/P5hG7Z0/cM
AvSuZNRqXDpr88nRSSwSK31Ljq9W407GwUv6PhZC7IJuqGAYfxqHb6q2kGiq
YOf0y9I0Kx4Fgr1DtNhHIvHPb/4LJ96mIcTO4zaP0sTMd66eU4KnQxc9sNCh
a4qtzO4xBbczH92MNNOh5NVnveLcKJEDhQ6PSlefXEkpRH27eYSZEkUPZMgj
qc/ez6GnmPzwmkyss4nF2aKedKcwKe7YCQYwuHaaBGGqFMJYtcUaCJgMqaRw
WlybHFCoxo70305WK6WQFEyVU0Uq0WdvqZjzehqCuwU5UqTuTHiv/rFS5E0q
Q4YQKzclBn++tnssY3z/Amp8XnIxfy4UFq4kjjMKdHra/Gs1poBA2ZQBBYwM
F4Vy/U/r1tRSou7J9MSadEcioESRxaGXj5DvDXWW0/A1GKFAQ0zn8y9OU0Ea
a3fKZa8cQhw7alSwFQCWyPHhrqAVrRVqkY982YR+wzzKZRO8vim0lScDgd2y
M5rBzcjdX7f3yyDQF2/DIqm9X1cXIcfD9lWHG3NYcf9bctACcJMJT30DXu8m
KsQ8E46Esq2vUKgzuikxJbwJx0dsByXyUMKiSioAp0Rlx4Jjf7qwE7odDEYz
GCTVHNJo3J9eOH9/qHacIxX+f17+BzFaMpA=
             "], {{9.8738, 4.7586}, {10.959, 7.9704}, {11.507, 7.9704}, {
             10.098, 4.0765}, {9.6543, 4.0765}, {8.2481, 7.9704}, {8.7935, 
             7.9704}}, CompressedData["
1:eJxlU2dMFGEQPZUIMQb3jvPuvMYhSraiFAvB8myAjaJiUAEF0RAiajCIIhCI
QUDsioVqMELU06C5H1gCBiT2jlEBo4glF1GwYDsJfnsL5w8n2ezOfjvzZt57
6xG/YdGawTKZLJBc4l0KbxQfI7FMgcOzCte9vyxAeS64Pf2QHNF7G3roaAHW
EO8+j14KW61ePi6dPPjm4neGagqM+EEij6phQWNTZ1IQj81tHCbeDQx9KKdw
+vOjhfHhHJ68T+K+qym4mPXLEy6zaEw4vWqJor+eZqGNaNFlxFGYTeBtpxg4
d6tCwv9QOKhxWuoqMCiJrDhz9qgcw56e2Dj1Fo2VzG3qeroCd++Q2EVjblm2
V8MONwgXyrqqg2h0TZ4TnHJRCfXzez8We9IojyUFziosmFQwY9VYGq5144+x
UWpH7psmeLhbNBj3YszQnJE0cooIEdVa7P+YMX1CLI3jBTXt1iI9RonjfKER
5xs5nmWM0NkLGBSnlVZ6bnXHvOGDubylLLJD6jMNGhOqSq6Zanw5ibfhJviI
BLzhUO9a6lepNOFl2O4j6w/wSIhpCxpS6460ugrtOIMg6fHcCPfcDxG15QLM
ha2Jsi4DCDrZUADc4hofn9FjQD/ZhhynpjAdNiWSift4R87lqQgDPPK/tT7N
8dMjnMApGgnenZj5N5wNEr/JPFY8vtKhLDNI86t42OXwNUKkr+MkB8/WX1lJ
GUaExlNRAf4cHo4WXxhhubG5rqKYdZxfmksaOLPQk+rI7v7+ZxmsGfU6Sv1D
j6PrFduvzmOQtPDrnsUWHe6L7XUMVpyv7yyfosW33uYtVi8G/pWWST8bNI7c
7r9MdT8/DCbEikgqLKo1EoYYWJb1XGzZqURNCiHgCoPe76mvSiPcpPm0LOw2
DlNI+l1gsU00+CU5mkykIoJDi/l3dHKTXMKr4mC7/elmY4Nc+h9sHJo5ssEz
OVLFhUJ5rM1fHdM2VOHQL1B88FZIfn/A40jfviwb8afdH4ME5OcuJwz/y9vT
yQBxKrx9QIicxv2XBxD7/hqhceg7kP8F0n559w==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerKernelIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}}}, {{{19., 13.}, {19., 3.5}, {19., 
            3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 3.}, {7., 
            3.}, {7., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW91mNqfJH0HgVL5hitmCg7uU76xxe/Qd3Awjdvl
2aPskHpf9OD/ZToOd9kVtnYaKznseaHtYfxNy2HHqje7lSRUHfas9Gjd6Krp
INZuvH8WUP6Ot9TiUhM1hyk3FSb3APXXsGYeW9Sp5rCT3yFL2FzB4a4KW+NU
Z2UHK6kD0QqM8g42tyySdOtUHSwEJrH6MEg5iBo0RpcD5cPAFos4cL+KflYC
1B+0wP+J5yRhhx8iDI8lgeYzaLeL3TzH6ZDB2rYmD2h/wdc5X/YZ8jsI/slX
tQa67wS77ezQ+cwOem8y2/cD3W+w2i48GiifGnvHjRnoP47iLz/2nuV06HRM
eHoB6H+zs9Z+FycKOyx++SalIMTQ4dRT+yX3/4k4pJqdUFE2N3CQOwkU+C/p
ILrO/WEVUH7NLIVXdgzyDgCwloC6
             "], {{14.356890000000002`, 8.80715}, {15.26808, 9.20715}, {
             14.75798, 8.51929}, {13.889980000000001`, 8.210630000000002}}, {{
             15.50572, 9.055660000000001}, {15.40481, 8.047169999999998}, {
             14.95886, 7.41475}, {14.98468, 8.353030000000002}}, {{14.69925, 
             8.2}, {14.66778, 7.05536}, {13.62143, 6.702780000000002}, {
             13.62143, 7.816750000000001}}, {{13.48092, 9.9899}, {14.09851, 
             8.93313}, {13.48093, 8.144059999999998}, {12.86377, 
             8.933209999999999}}, {{12.60539, 8.80729}, {13.07211, 8.2105}, {
             12.20383, 8.51926}, {11.69399, 9.207640000000001}}, {{13.34039, 
             7.816750000000001}, {13.34039, 6.702810000000001}, {
             12.293999999999999`, 7.055390000000001}, {12.262530000000002`, 
             8.2}}, {{11.97714, 8.353090000000002}, {12.00295, 
             7.415180000000001}, {11.55736, 8.047659999999999}, {
             11.456740000000002`, 9.055730000000002}}, {{10.16199, 
             7.578840000000001}, {11.359990000000002`, 7.839730000000001}, {
             11.93624, 7.021730000000002}, {10.97586, 6.66539}}, {{
             11.016440000000001`, 6.38067}, {11.74664, 6.651610000000002}, {
             11.18759, 5.92502}, {10.357750000000001`, 5.64171}}, {{
             10.419440000000002`, 5.365740000000002}, {11.27625, 5.65826}, {
             12.181249999999999`, 5.391480000000001}, {11.41413, 5.14879}}, {{
             11.429440000000001`, 3.6768399999999986`}, {11.551440000000001`, 
             4.897399999999999}, {12.526169999999999`, 5.205770000000001}, {
             12.55101, 4.16919}}, {{12.60754, 5.558840000000002}, {
             11.509590000000001`, 5.88251}, {12.20647, 6.788230000000002}, {
             13.253540000000001`, 6.435409999999999}}, {{13.34042, 
             3.2504900000000028`}, {12.833490000000001`, 4.117919999999998}, {
             12.814119999999999`, 4.925980000000001}, {13.34042, 4.15807}}, {{
             13.48096, 4.450240000000001}, {12.83467, 5.3932400000000005`}, {
             13.48096, 6.270240000000001}, {14.127249999999998`, 
             5.3932400000000005`}}, {{14.127959999999998`, 
             4.117769999999998}, {13.62153, 3.250720000000001}, {13.62153, 
             4.15807}, {14.147639999999999`, 4.925700000000001}}, {{
             13.708409999999999`, 6.435409999999999}, {14.755480000000002`, 
             6.788230000000002}, {15.45236, 5.88251}, {14.35436, 
             5.558840000000002}}, {{14.41041, 4.168940000000001}, {14.43565, 
             5.205680000000003}, {15.41, 4.897}, {15.531869999999998`, 
             3.6763200000000005`}}, {{15.547509999999999`, 
             5.1483599999999985`}, {14.780389999999999`, 5.391360000000001}, {
             15.68567, 5.65821}, {16.542669999999998`, 5.365090000000002}}, {{
             16.60379, 5.641249999999999}, {15.774359999999998`, 
             5.924939999999999}, {15.21554, 6.651240000000001}, {
             15.945540000000001`, 6.380030000000001}}, {{15.98616, 6.66484}, {
             15.025730000000001`, 7.021660000000001}, {15.602219999999999`, 
             7.8392}, {16.8, 7.578090000000001}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           FilledCurveBox[{CompressedData["
1:eJxTTMoPSmJiYGDYBsTMQMzIwszIDEUMjAxw9qjIgDtgkIgAAMeOBqk=
             "], {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1: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
             "], {{13.48089, 1.9509299999999996`}, {10.96851, 
             1.9509499999999989`}, {8.931845, 3.9876499999999986`}, {
             8.931859999999999, 6.500030000000001}, {8.931874999999998, 
             9.0124}, {10.96857, 11.049077}, {13.48094, 
             11.049069999999999`}, {15.993319999999999`, 
             11.049062999999999`}, {18.03, 9.01238}, {18.03, 6.5}, {18.03, 
             5.2935}, {17.55072, 4.1364199999999975`}, {16.6976, 
             3.2833000000000006`}, {15.84447, 2.4301899999999996`}, {
             14.687389999999999`, 1.95092}, {13.48089, 
             1.9509299999999996`}}}]}, 
          FaceForm[
           GrayLevel[0.53726]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDocumentationIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 13.}, {19., 
            3.5}, {19., 3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 
            3.}, {10., 3.}, {10., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {19., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGZigAFjBz2T65lLlqo6wPg3sjzuJGdyOqScifU+
8d/I4YfNDutscxaHy/P/eghWGjmssHqStoORwUF81muTS5cMofoYHNzOHZpX
VqEB5xclVx0Sqld3YNgxSVYaqD7rccfWH1vUHDR2RAQ2azI7/Oxdb7sZyC8A
qeNnh/On8l37b2mjBlf/OtxKfp6pOsK8oNkWO/+ro9mn4TC3Qe1QW7shnP+p
eva/N88NHTY4m6pGAtVH7n7rVGxr5NC6y2OhTou6w+0v6fZBMUYO61+Lv2k7
q+agNdFFf3GCkQPPGS7XXefVHNgWT7JiTDVy+CqUPLPuoprDUYUNRRmZRg4S
YH+rOSxymH9i8h4jh/5/07MvAvk7g60i/gPDa/Hx97m/vNUc0MMXAJkejkw=

            "]]}, 
          FaceForm[
           GrayLevel[0.53726]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}}}, {{{17.824, 11.118}, {17.823, 
            11.28}, {17.692, 11.412}, {17.529, 11.412}, {12.235, 11.412}, {
            12.073, 11.412}, {11.941, 11.28}, {11.941, 11.118}, {11.941, 
            2.8823}, {11.942, 2.8372}, {11.953, 2.7929}, {11.974, 2.7531}, {
            12.045, 3.002}, {12.271, 3.1746}, {12.529, 3.1765}, {17.824, 
            3.1765}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
             4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.04675, 6.052660000000001}, {
             14.98306, 6.096589999999999}, {14.9068, 6.11858}, {
             14.829500000000001`, 6.115309999999999}, {14.83814, 6.15225}, {
             14.84931, 6.188549999999999}, {14.862930000000002`, 6.22396}, {
             14.989640000000001`, 6.231980000000002}, {15.1139, 
             6.186519999999998}, {15.20552, 6.09862}, {15.130299999999998`, 
             6.077719999999999}, {15.121929999999999`, 6.073559999999999}, {
             15.04675, 6.052660000000001}}, {{16.107940000000003`, 
             7.377000000000001}, {16.689980000000002`, 6.79499}, {16.77984, 
             5.8828700000000005`}, {16.32256, 5.198469999999999}, {
             15.865280000000002`, 4.5140699999999985`}, {14.988219999999998`, 
             4.247999999999999}, {14.227759999999998`, 4.562980000000001}, {
             13.4673, 4.87796}, {13.03524, 5.686269999999999}, {13.19582, 
             6.493559999999999}, {13.356390000000001`, 7.30086}, {14.06488, 
             7.882300000000001}, {14.88799, 7.882300000000001}, {15.34556, 
             7.88232}, {15.784389999999998`, 7.70055}, {16.107940000000003`, 
             7.377000000000001}}, CompressedData["
1:eJxlU31MzHEcvvKWRnSX7+9XXaULdfr+7kShOD3GSpzcctRizcupVja3y+at
MJQQtVO3it6U90Niul4c5b2oE5bJEpGGpdKLzNuvf/zjj88+e/Zsn8+z59nj
vmFL2CZrgUAwk5/h3f4gu8pgkaHuVqNJO1mEKd8euo17zaGj/ZXKJ5TAVTX7
g206B1JW+SIhjCArV2GxTePALpCcWczjbpVDp+gQj1s/SMwrCaoNGRN2pnCI
9rk6ZFpNUPyz5NVZEYeuz7f9PeII0vXhH9lCCrYnL7t/A8HH83YVjjIKdeCW
6WELCRx26Lc+8aXo/jpLJn5IMPfAdL9dKgrZkllkeTADfdrJZEUSRWbrHPOA
kcGYqY+v/1pDsbjKVhr4iMGNGMPIc/4UGVcU16a0MQiRdg7oCcW7p/ft43sY
bB47VBjjQaFL3laRuoJFwGjNlW0FFO/XHr5YZ2Zxn+wTZ5ZS2ChOrCqoZ7Ho
i7LoWy5Fl29T2I4TLExWBW5BqRSFxx6MU0ezyB0xMqFvO0WEZt6bFRwLRUhl
dG8ehYTLKvcQs9B2Jz9S1/D3dx88hT8M/EpX7bv3liLf/vTNmmYGz1zuNjhU
Ulx3k0ruHGaw7rjfJ3f+n9EfM4LlDEqG/dvP62ku1irqCMbqVLXKKoqOaF7J
G4ISq+pRwj6Kl8LehY0dBE8ifPPyKAdrtrGwiOdFkraJFzLlSLGvLT66keCy
kNrFNMihnKkjA33/48Ra4QSvKjm2V6R+vbuZ9zdH854a5ehkM262JjE4oLES
mfpleH2rrKlEzUJvMSRIQ2VI7C1VxUc6oty8JLa+gkN3s+bozlQneNGevWU5
HAw9fKDznRHVxF4qjuOgbj2mjSwVQ3IoKuiqksP3QUfGTuOC5ZPSln56Tv/x
jvd0yy7y/k3zsTGKI53RbloZELGHIvRCUoBrghMaZs854/nFG4gTeQ62sAgv
2+gxMd0bAst6c7WAgVN+lLRe643Mtb8X/Rg/CRZJy9DuAIpIeYru1C8hvEKa
lWZe3w9XmX+XrxDO49u4DL4PW41HWmL5PvwFn0hNig==
             "], {{14.929780000000001`, 6.679259999999999}, {14.99634, 
             6.637309999999998}, {15.059230000000001`, 6.58981}, {15.11778, 
             6.537259999999998}, {15.13069, 6.72777}, {15.13348, 
             6.918830000000002}, {15.12614, 7.109630000000001}, {15.0175, 
             7.005190000000001}, {15.00081, 6.98846}, {14.888, 
             6.879850000000001}, {14.90472, 6.82555}, {14.929780000000001`, 
             6.679309999999999}, {14.929780000000001`, 
             6.679309999999999}}, CompressedData["
1:eJxTTMoPSmViYGBQB2IQ/fq/zLPT0QYOjyLEt19cIOGgUm/w4Q6QH8NRFHCI
R9pBfUHnhoc/9R1mxZ9lbLKUdXh/ZI248009hxjjn2mzpeUcdr48X7dkh66D
zQ7r7O1/5Rx6X3J62xToODQUu035libnsG5mzeazc7UdJhznCTk2X8bhvOd7
6fjTWg5zpC8LT7sh5TAr5YnOm5laDgpbOyf/tpVwkFpcGmKqqO1wQi9wr6mA
mMNXV6foc6naDhsy7xV2nRN3sBBdabDtgrbDsSkei6YXSjqw/HKZpxKr43Bj
XqTQgmdSDiBjZLt0HDy2+h9PVpNxMOuL6PZ/qOOgJTH1CqeHrIP6VTvZ/khd
h3XMz3s0dOUcIu6+snxZq+tg8kpR6q6jrMOaFQdNePp1HY6JNclM+SDj8Dux
5UPGZl0Hn797VnqwyjgIlMo3XGHTc7CadLreA+ifblHTGW2Ceg51QW8vf9wh
47BQ44L6pxQ9h1UVyp9PxMs6fFs1lXN/iZ7Dr1vG3kwmMg7qntd99lXqOdz6
8MUrkk3aIcvjTvLLYj2HOeVzFinflHQIm7967Y3/eg4JKluexryScFjkMP/E
5Cn6DkElKtP/C0g49MYuqsqWMHCYsOCH4TM/cYdN13fb32M2cPiRpKF+66qY
w8zGUz++39R3MDqyUS8vWcxB694Jm0/L9R1SPhfmrvgh6vCsR+Mtb52+A0vx
lx9734o6+L9M+Ds/GMHnnnFg7W5NhPolBbZc14P1HOZ92fdxq7qYg+D9zkj9
MKD58xyd/y8Rdqg71sqsKGngcM2SLWX9dhEHI+apH98D08+WnLX6QrPEHCoj
VpieBfKPPTyz/hkwfQEAdeMU4A==
             "], {{13.11765, 9.647049999999998}, {16.647060000000003`, 
             9.647049999999998}, {16.647060000000003`, 10.23529}, {13.11765, 
             10.23529}}, {{13.11765, 8.47058}, {16.647060000000003`, 
             8.47058}, {16.647060000000003`, 9.058810000000001}, {13.11765, 
             9.058810000000001}}}]}, {
           EdgeForm[
            CapForm["Butt"]], 
           EdgeForm[
            JoinForm[{"Miter", 10.}]], 
           EdgeForm[
            Thickness[0.]], 
           EdgeForm[
            GrayLevel[0.65098]], 
           FaceForm[
            GrayLevel[0.65098]]}]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTIFFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}}}, {{{7.476430000000001, 7.56917}, {6.447, 7.56917}, {
             6.447, 4.}, {6.027209999999999, 4.}, {6.027209999999999, 
             7.56917}, {5., 7.56917}, {5., 8.}, {7.476430000000001, 8.}}, {{
             8.85472, 4.}, {8.43225, 4.}, {8.43225, 8.}, {8.85472, 8.}}, {{
             11.84251, 5.766640000000002}, {10.49879, 5.766640000000002}, {
             10.49879, 4.}, {10.07679, 4.}, {10.07679, 8.}, {12.06027, 8.}, {
             12.06027, 7.56917}, {10.49879, 7.56917}, {10.49879, 
             6.197459999999998}, {11.84251, 6.197459999999998}}, {{
             14.782259999999999`, 5.766640000000002}, {13.43854, 
             5.766640000000002}, {13.43854, 4.}, {13.01654, 4.}, {13.01654, 
             8.}, {15., 8.}, {15., 7.56917}, {13.43854, 7.56917}, {13.43854, 
             6.197459999999998}, {14.782259999999999`, 6.197459999999998}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerUnknownIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGBQB2IQHTjbYud9Rz2HG+e+Bz9eyu5wzDjjxfwJBg4r1tVM
e87I4uCr4XJA8Y2BwwHdUzkTOFkcdLZvkRKyN3QoCExr9tnE6sC86fpu+zRD
hx2SeQeeu3M4rLfdrOLw1cAhQPK/3eMmdofDjRN0EibpO2wou936rIrLYef9
hRoX9A0dElo+ZDw+wevAAAINhg4bLnt4P33LA+c7vPFZ+HmXgINTwtMLStGG
DueSkj4XvhVw2NV8Y6ZTvYHDHR7zB5+TReHqWwI95zY8E4bz+yK6/RkNxBy2
nijbN1/JwOHa0VyTBnMJBz7dTXPf8xs6NKzbllRfKeuwM9gq4n+9oYPHmqPL
GSQQfD52p00NnvIOohMTRfNtDB0ObH95vq5FHm6+ptWk0/Ucqgj7JFf01Mer
OrzdrfTj/i1dhw2gcJBVhsgzaENpDYdWLdPqBaoaDi8M4uMagPLXQe76ruRw
R1N2zf9kVYg725UdFrTM3FbfKu+wepbCKzsGGQe2AxVsvLKyDkvMCov2H1Z0
cOnOef57pQjUXBmHDd23MxjyORy8zTsdE0Rh9rI4vH5kJnXgtgqcvy7luJvC
PnWHDztvdf0FxvfB5+2Chw6rw+Xr7oUsOcShBefPWPvV1em1hkNA7/Q8oWYu
uH++mC8UYHwu5NDGrBh5QEQXLj/v0sFf9t+14forlT+fkLfRg/MB09PfBQ==

             "], {{16.686, 7.765140000000002}, {16.00777, 
             6.803710000000001}, {16.04777, 8.25342}, {16.841960000000004`, 
             9.32471}}, {{14.986, 8.997559999999998}, {16.38884, 9.61328}, {
             15.61564, 8.57028}, {14.28, 8.0957}}, {{12.01489, 8.998}, {
             12.720699999999999`, 8.09516}, {11.38452, 8.57026}, {
             10.611329999999999`, 9.614259999999998}}, {{10.952150000000001`, 
             8.253860000000001}, {10.99215, 6.80415}, {10.31441, 
             7.766060000000001}, {10.1589, 9.32466}}, {{8.01074, 6.94966}, {
             9.938229999999999, 7.369580000000001}, {10.86475, 6.05415}, {
             9.319580000000002, 5.481}}, {{9.397, 4.937999999999999}, {
             10.50345, 5.348640000000001}, {9.643999999999998, 
             4.231930000000002}, {8.38424, 3.8017600000000016`}}, {{10.04153, 
             2.939460000000004}, {8.50174, 3.275400000000001}, {9.81326, 
             3.723149999999997}, {11.21365, 3.3105600000000024`}}, {{12.0264, 
             3.6294000000000004`}, {10.25809, 4.15089}, {11.38016, 
             5.608890000000001}, {13.066440000000002`, 5.04102}}, {{13.22659, 
             5.550790000000001}, {11.544459999999999`, 6.118169999999999}, {
             11.49222, 7.961920000000001}, {13.22659, 7.34474}}, {{12.50759, 
             9.23779}, {13.5, 10.937499999999998`}, {14.49341, 9.23779}, {
             13.5, 7.968750000000002}}, {{13.77346, 7.34473}, {
             15.506369999999999`, 7.961910000000001}, {15.457, 6.11816}, {
             13.77341, 5.550780000000001}}, {{13.93361, 5.04102}, {15.61989, 
             5.608890000000001}, {16.741960000000002`, 4.15089}, {
             14.973650000000001`, 3.6294000000000004`}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerWLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerXMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.726999999999999, 6.01648}, {
             7.884519999999999, 4.}, {7.323999999999999, 4.}, {
             6.443760000000001, 5.560419999999999}, {5.55859, 4.}, {5., 4.}, {
             6.160519999999999, 6.01648}, {5.027529999999999, 8.}, {
             5.580260000000001, 8.}, {6.44373, 6.4670000000000005`}, {7.30133,
              8.}, {7.858, 8.}}, {{10.21241, 4.736269999999999}, {9.04211, 
             8.}, {8.43231, 8.}, {8.43231, 4.}, {8.90442, 4.}, {8.90442, 
             5.558230000000002}, {8.85815, 7.23077}, {10.03149, 4.}, {
             10.392400000000002`, 4.}, {11.56769, 7.239559999999999}, {
             11.52338, 5.558230000000002}, {11.52338, 4.}, {
             11.995480000000002`, 4.}, {11.995480000000002`, 8.}, {
             11.382750000000001`, 8.}}, {{13.303540000000002`, 4.43079}, {
             13.303540000000002`, 8.}, {12.82854, 8.}, {12.82854, 4.}, {15., 
             4.}, {15., 4.43079}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTXTIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
            1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
            0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0,
             2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
            0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0,
             1, 0}}}, CompressedData["
1:eJx10DEKgDAQRNFFbexTWGyhSwgp9hA5g0cQrL1/Z8Bs4cAIYXjwhZDjes57
FpG1n6WfSeLb27c2Volz+/dhBxtxrIPL2Ar/oQtZg16JsQ879Gyxx3vEuygx
3iPs0Fdi7NHb2EycoA8b9EqMfWovO5kdXA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerFileOpenerTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TagBox[
         PaneBox[#, ImageSize -> {Full, Automatic}], 
         EventHandlerTag[{{"MouseClicked", 1} :> 
           DefinitionNotebookClient`FileTreeOpen[
             EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
           Automatic, PassEventsUp -> True}]], 
        MouseAppearanceTag["LinkHand"]]& )}], 
   Cell[
    StyleData["HintPodTitleBar"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{
            Offset[{0, -3}, {1, 1}], 
            Offset[{0, -1.3443}, {1, 1}], 
            Offset[{-1.3443, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{1.3443, 0}, {-1, 1}], 
            Offset[{0, -1.3443}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], {-1, -1}, {-1, -1}, {-1, -1}, {1, -1}, {
            1, -1}}]], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"Notebook Analysis\"", FontColor -> GrayLevel[0.4], FontColor -> 
            GrayLevel[0.4], FontFamily -> "Source Sans Pro", FontWeight -> 
            Plain, FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          Offset[{8, 0}, {-1, 0}], 
          NCache[
           ImageScaled[{0, 1/2}], 
           ImageScaled[{0, 0.5}]]], 
         TagBox[
          TagBox[
           TooltipBox[{
             GrayLevel[0.6], 
             DiskBox[
              Offset[{-13, -10}, {1, 1}], 
              Offset[6]], 
             GrayLevel[0.97], 
             AbsoluteThickness[1.5], 
             CapForm["Round"], 
             LineBox[{{
                Offset[{-15, -8}, {1, 1}], 
                Offset[{-11, -12}, {1, 1}]}, {
                Offset[{-15, -12}, {1, 1}], 
                Offset[{-11, -8}, {1, 1}]}}]}, 
            FrameBox[
             StyleBox[
             "\"Close analysis pod\"", "Text", FontColor -> 
              RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
              "Plain", FontTracking -> "Plain", StripOnInput -> False], 
             Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
             RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
             StripOnInput -> False], TooltipDelay -> 0.1, 
            TooltipStyle -> {Background -> None, CellFrame -> 0}], 
           Annotation[#, "Close analysis pod", "Tooltip"]& ], 
          EventHandlerTag[{"MouseClicked" :> NotebookDelete[
              EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
            Automatic, PassEventsUp -> True}]]}, AspectRatio -> Full, 
        ImageSize -> {Full, 20}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 0}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterTop"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {4, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterBottom"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {0, 4}}]& )}], 
   Cell[
    StyleData["HintPodFooter"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{{-1, 1}, {-1, 1}, 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 1.3443}, {-1, -1}], 
            Offset[{1.3443, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-1.3443, 0}, {1, -1}], 
            Offset[{0, 1.3443}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], {1, 1}, {1, 1}}]], 
         InsetBox[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{3}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False], 
              
              StyleBox[#, FontColor -> GrayLevel[0.4], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 12, 
               StripOnInput -> False], 
              StyleBox[
               TemplateBox[{5}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          Offset[{5, 2.5}, {-1, 0}], {-1, 0}]}, AspectRatio -> Full, 
        ImageSize -> {Full, 21}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 3}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodMenuItems"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       TemplateBox[{#, FrameMargins -> 3, Background -> GrayLevel[1], 
         RoundingRadius -> 0, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           RGBColor[0.75686, 0.82745, 0.88235]], ImageMargins -> #2}, 
        "Highlighted"]& )}], 
   Cell[
    StyleData["HintPodActionMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], #2}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          Dynamic[
            If[
             CurrentValue["MouseOver"], 
             GrayLevel[0.96], 
             GrayLevel[1.]]]}, "Highlighted"], ButtonFunction :> 
        ReleaseHold[#3], 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["HintPodDisabledMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], 
              StyleBox[#2, FontOpacity -> 0.4]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          GrayLevel[1.]}, "Highlighted"], ButtonFunction :> Null, 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic, Enabled -> False]& )}], 
   Cell[
    StyleData["HintPodActionLabel"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[#, FontColor -> GrayLevel[0.2], FontFamily -> 
         "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, LineIndent -> 
         0, StripOnInput -> False], FrameMargins -> 0, ImageMargins -> 0, 
        BaselinePosition -> Baseline, ImageSize -> Full]& )}], 
   Cell[
    StyleData["HintPodMenuDelimiter"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[
         GraphicsBox[{
           CapForm["Round"], 
           GrayLevel[0.9], 
           AbsoluteThickness[1], 
           LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
          PlotRange -> {{-1, 1}, {-1, 1}}, ImageMargins -> {{0, 0}, {2, 2}}, 
          ImagePadding -> {{5, 5}, {0, 0}}, ImageSize -> {Full, 2}], 
         LineIndent -> 0, StripOnInput -> False], FrameMargins -> 0, 
        ImageMargins -> 0, BaselinePosition -> Baseline, ImageSize -> 
        Full]& )}], 
   Cell[
    StyleData["HintPodIconChevron"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.2], 
         AbsoluteThickness[1.8], 
         CapForm["Round"], 
         JoinForm["Miter"], 
         LineBox[{{-0.5, 1}, {0.5, 0}, {-0.5, -1}}]}, AspectRatio -> Full, 
        BaselinePosition -> Bottom, ImageMargins -> {{0, 4}, {0, 0}}, 
        ImageSize -> {5.6, 7.7}]& )}], 
   Cell[
    StyleData["HintPodIconPopOut"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4h1yra8Dd6g4rHN/WCWip+KwRiYqxXq+isNk
CZYwvlwEDROHqYPpKwUrUHFgAIEDKg5nzwDBG2VU/hlluPogMEMCzm9kOdpv
aC6OJi/mINR84NRCVwQfIq8M519wufHhi5Yymn4lNPOVHNLAQBHO/6YR03/o
K5eDB9Ab69wFHJoeHZ+xexqng8r0/xPqfvM5cG9dVnl8JacD0FO6m+byOPxL
/f4kUZHbQZr3ge4EBW6HD2IeAX9m8Dhkzyqfs2gxp8ONxmK3Kd/4HOYsUt75
p50Tbi6YesgF9b8ShJ+oCOfD3Anjw/zx9JP8pXx7hD9h4QfjqxtyAKNCBU0e
EY4wPqr5iHh4/nvlx0tnVRyYObvkk98pOwA9+X75MRUHWWD03udHxCssngGf
XO7X
          "]]}, AspectRatio -> Automatic, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconWrench"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.4], 
         AbsoluteThickness[1], 
         Opacity[1.], 
         JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGYCYmWv6mZ9n3/2cmJZvp/5BBzci37yv9wu6/Au
ysnuhaQynG8at8uT55AGXJwBDHQdPl3yTRKIUIfzo1Ks7/vzajiosjVOdfbW
ccjaUzJZokUFrv8ySLmlqoPbts9/r1iowsVh6mD6zp4BAh4NnPbA3AHTr+ss
8/rRNoS7YXyYv2D+7H/ySf5SPrdD7D/nX29ff7H/6hXZZnGNGc6HqYPRMPED
b+bZ6FxBqAPpOprL7YAefgCtVISU
          "], CurveClosed -> {1}]}, AspectRatio -> Automatic, 
        BaselinePosition -> Scaled[0.2], ImagePadding -> 0.5, 
        ImageSize -> {16., 16.}, PlotRange -> {{0., 16.}, {0., 16.}}]& )}], 
   Cell[
    StyleData["HintPodIconInfo"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.81, 13.}, {
           3.3914, 13.}, {0.62, 10.229}, {0.62, 6.81}, {0.62, 3.3914}, {
           3.3914, 0.62}, {6.81, 0.62}, {10.229, 0.62}, {13., 3.3914}, {13., 
           6.81}, {13., 10.229}, {10.229, 13.}, {6.81, 13.}}, CompressedData["
1:eJxTTMoPSmViYGCQB2IQbct1fXGBrbRD6+vAHXKtvA7r3B9WiayTdoCI8zgc
/qoR039IHkoLOjCAgYKDB0iZu4CDPFijgsOsmSDAC1UnCzWPE0rLQMXZHV6x
mAia1Ug56E1Y8MMwjdXh685bXX9VJRx4Jq9sCvRkcTh7BgREHfoPgTSwOAQB
db8OFHYAO4eLFeo+IQcRMIMLzoe4h9dBW2LqFc4MYYd4zdMCx38JOviYdzom
pIo4PJgjuHSvo6jDkgKQz0QdCsEelHDQjAHZJAa1VxIqLwH3Jzofok8S4i9W
RQews67LQsJhnoKDMRjIQ9Q3wMJJwQFMJULDSRJmrhzUPKh6Blmof+QcwM6K
kXb4Bgq2rzJQcXFovMhA5UUdciqqluo0SztsKMqY+NZG2OHV1E08hTrSDquA
oTmXQdABPX4BaWq/EA==
           "], {{8.81, 9.79}, {8.8101, 9.5122}, {8.5878, 9.2854}, {8.31, 
           9.28}, {7.51, 9.28}, {7.2283, 9.28}, {7., 9.5083}, {7., 9.79}, {7.,
            10.62}, {7.0054, 10.898}, {7.2322, 11.12}, {7.51, 11.12}, {8.35, 
           11.12}, {8.6239, 11.115}, {8.8447, 10.894}, {8.85, 10.62}}}]}, 
        AspectRatio -> Automatic, ImagePadding -> 0.5, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconNone"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       GraphicsBox[{}, AspectRatio -> Automatic, ImageSize -> {16., 16.}, 
        PlotRange -> {{0., 16.}, {0., 16.}}, BaselinePosition -> Scaled[0.2], 
        ImagePadding -> 0.5]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreAlways"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYCYpF17g+rROQcbLmuLy6wlXaoBguoOvQf+qoR
w6/i8CZwh1zralWH4oyJb2vsVRx0N819v/yYqoO0/l0VtkYEv/U1UOFRBP/D
8mPe5pyqcP0z8oSaD3ipws2H0famcbs8fVQd2BqnOnevUXUAa+dWdUgSiLDc
ckLVwQPounXHVeB8kK1TmxH8gN7peULOKnD9EP+owM2H+QvmzyUFIBEeuHxC
mb+c2CtuuP75NjpXZj3jgpsP0s11nRPO5+feuqzyOAec73dxYsy/w+xw/WDr
uNjh5n9MPhPr7cEG93+V2Wq78Nus8PCB8WHhB+PDwhemHxb+MPNh8ZMGBhJw
f8Lkv2nEAJXwOGyu/rQh4DWrwwrTs9Z+F7kdvHiYtNunsTrYgrwpy+XQteHh
y6lGbA6HxNWCWRdzOJwKObhiyTk2B3fmCm4VDXaouRwOEaeMjmzUY4OHhybI
eA02eHgt/GH4bJ0qm4PT+bSrz4Hh+Z0tfobPVDZ4eIOVx7DD3QlzNwMYIPx1
smzffCl9FUg4u7M5hPEBU1S+isPs0Pmr195gdTAGgc0qUHewOswDJhfv7yoO
/g7CiYcvszoAU9vrQAtVh6V+QAFnNqg9iHj5dMk3SWAGIt78wBGJiFcYH+ZP
GB/mT5h+WLqBmQ/zJwC4F0s3
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInCell"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
            0}}}, {{{11.69, 13.37}, {7.57, 13.37}, {7.57, 12.37}, {7.76, 
           12.37}, {11.19, 8.93}, {11.19, 1.25}, {7.57, 1.25}, {7.57, 0.25}, {
           12.19, 0.25}, {12.19, 13.37}}, {{9.17, 12.37}, {11.17, 12.37}, {
           11.17, 10.37}}}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIjIGYCYo+HVSLr3EUdbLmuLy6wlXZYUgBiyTlAxJUc
kt9FOdllyDuU6yrKf1mD4LM879F466sMV28MApuVHX7yv9y+3lkOQj9WdngU
Ib794gFZh/Dojfvf/FN22CHX+jrQAsHvf/JJ/tJ6GTgfbI+ODFz/2TMgIA03
vxroqodVQg5gSkQO6m4mVPubGR1E7I/d2fpE2cHy2tFckwYGB2n9uypsjCoO
YG89/GcP4wd5zm1QO/QHzr9wNeyN/u5f9jD9kHD4aQ8zX+z36XcnD3+3v8fE
2SXfrOygvqBzw8OX3+yDQAxHBB/srr9KcL7mW959BjuV4PrnCi7de7BcCW4+
LLwhND88PmDyEHcLOjg2PTo+Y/d3+/21shbpLYIOTglPLyjd/mZ//wH35JVM
CD4knATgfL0JC34YPuOH688Nq1237REf3HzNmP5DXzX4HLhVNOp6dv6yP3xZ
O1UyiRcePrlH/22q/sQDD79vGiANPA5yy1946NUzOOy61fU39TuPw5GNenmL
GxkdwPal8cLjB2Y+LP7SwEDCgQEMZODyf7+VPpgTKOOw9ldM7tE6XgfmCqCL
9sk43PfvnZ4nxAuJZ2NZB5j9UV933uraK+swf/XaG/HfeCDudZJzuA1yTgov
PH3CzBcAJg/mdHmHVElQyuSH851lXj8ykxKEq4eFNwCKHGBr
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInNotebook"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYC4qAdcq2vAwUcbLmuLy6wFXdYUgBiSTp4PKwS
Weeu4GCgtVL4AouUw1zBpXsPlis4vDlgqexlLeWg+ZZ3n8FOBB+s/y+CH6S+
oHODoyJc/z0mzi75ZkW4+cYgsFnRoanYbco3N0kHEftjd7Y+UXRYeM3kvcVR
CYeQx0tnH2FQgroLwb9pWxmxYqs4nP9zQfrmV8bicP0g1VzXxeDmf9OI6T/0
lcsB6Bmgj6QcGMDggz1MvoTnRNz7f2/sf/K/3L7+saLDzmCriP/PX9iHR2/c
/+YfzL1P4Pz+Xoc96+IfwPkrVqZm1068AdcPtAxo4yW4+ccenln/jOGkPcz/
MjWJRqEGh+xh4QPjw8IPxoeFL0w/LPxh5sPiB0KzwuNPHhibO+Su2h8GKTvE
7aAYeYAl7+5Z+/rfVgXnOLgdPu6qO5h345j9voPiasGsXHA+JJw44Hy9CQt+
GD5jh+vPDatdt+0RG9x8TZByDTYH/uky5V7st+21JaZe4cxgdZgp5PnFqOuh
vQY/99ZlP1kcIO54CjWfxeFeX0HUh0Uv7bdEft15i4vVoa2/Q3Oiy1t77Xax
m+fKWeHxAzMfFn9pYCACj1+YfMeX29cbgfF/+LJ2qmQSKzx95B79t6n6Ews8
/cDsB3O5JB1Upv+fUPebxeHIRr28xQeB6e+Cy40PX1gdnjTPO7uKX8qh/8kn
+Uv57A4sYXy6m2KlHDjBCY3DwV9OLMvXGJjeda7MejaXC56eYeENAPSkchE=

          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYC4qAdcq2vL6o52HJdX1ywVwtC24rB+YdTViWE
XBKE86tF1rk/rOJxMAaBzxpwPkReDY2vCDVPCMpXhvPB+jerwfnPf6/8eOms
ukPDdoemR+wiUHkNuHtgfJh7YXy2xqnO3W/U0eQ14ObB+DD7YHzNmP5DXzWY
4PzY3KP/NlX/toeZBxYP/GIPsw/GBzuHSxrOX7TF/MchFSkH9g9iHgF/Ptmb
vrdwdTeSdNjZywYU+WQPcb8E1B+f7H8EP146m0XcYeE1E6DKT/Z9IGUXRB02
V3/aEJD92R5s7A4Rh1kzQeCr/YQFPwyfvRN2+Put9MEcwe/2894vP+ZtLuxw
3793ep7QT3uIOiEHkC651t/2YH8a80LtY3NA5TPB+RPrflsVnPtkL/8lJ6xW
T8jhTSDYo1DzxOB8BjBQh/O/aQADzlQTTV4bbh6MD7MPxoeFfwDI2czaDmfP
gAA0nCdqOTglPL2gdFvDweNhlci645oO8iAPzdOEmPNXw+EPMDp9k7Qc4nZ5
8jC9VncAG39KywE9/QIAH6UuJw==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
          5.63, 11.05}, {5.63, 10.44}, {6.0569, 10.539}, {6.5048, 10.49}, {
          6.9, 10.3}, {9.53, 10.3}, {9.53, 11.05}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{7.92, 3.73}, {
          8.0396, 3.4994}, {8.0784, 3.2353}, {8.03, 2.98}, {9.41, 2.98}, {
          9.41, 3.73}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {{{6.73, 6.21}, {6.2, 5.82}, {6.67, 5.46}, {11.22, 5.46}, {
          11.22, 6.21}, {6.73, 6.21}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 8.7}, {
          8.0514, 8.4458}, {8.0162, 8.1818}, {7.9, 7.95}, {10.25, 7.95}, {
          10.25, 8.7}}}]}, AspectRatio -> Automatic, ImagePadding -> 0.75, 
        ImageSize -> {15., 15.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconHint"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[#], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{9.015, 17.37}, {4.4559, 17.37}, {0.76, 
           13.645}, {0.76, 9.05}, {0.76, 4.455}, {4.4559, 0.73}, {9.015, 
           0.73}, {13.574, 0.73}, {17.27, 4.455}, {17.27, 9.05}, {17.27, 
           13.645}, {13.574, 17.37}, {9.015, 17.37}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQbcixRiYqRcVh3bak+pu23A5rf8XkHt2n7OC/fkpq
x2MOB8+5DWqHnik5nP8e/HjpbHYHj4dVIuvYlRyAiisjVrA78Bau6b6toegQ
ApQ9soDdQepAtIJjoILDJ8fzaVefczgs6Nzw8GWoPNx84yMb9fIeyzr831T9
acMFXod1N+LL/OVkHV5uX8/8/IyAw7Fck4btDrIOZQ/mCC7dK+TAXMGtomEn
6/DP+dfb1w0iDkIi9sfufJV1ePRy6iYeQzGHac7dOc+t5R3SwEDcwe7FzTW/
bBQc9kybwF+1TcLh7TwbnStSig7Hd+3oZSuQdDjab1iuy6jk0MIL8qGkg8f+
WlmL50oO9uHRG/fnSDr4fu4LLjmi7HDw1ELXbZslHGDhAzO//9BXjRh+VQeG
iXW/rQzEHKzv+/dOz1N1uFfY1fekSMRhzhGFDUUZqhB/LhaCmFOs6sC0h1VI
ZL+Ag8g6d2AIqjqYCJrZ7L3E64Ae/gDrrapT
           "], CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/emSb5KAhJoDAwg0aDhYbjlRtu++isNudX7urWpK
DrX2pnG7Tqo4TFPsKy2sVnRQvv2zLqtGBULfUXAI6J2eJ8Ss4mDSsN2hKUnB
Ia0jOfZOmrKD/l0Vtsar8g5Gz9apPlms5GDgs4zLLVXeweLHoZRVDxQdnNdm
3ivskneQW/7CQ09e0aHEbco3tnh5h+jLex6LxCo4FErzPtC9IO+wVfT36Xed
8nDzH5tJHYheIOeQBxJ4pOCgu2nu++Vscg75Qs0HTjUqOjDkN7IcPS/rcObd
ycNOukoObqqlTLM4ZOD+O7JRL2/xQWkHHibtdrFITYeb8WX+ctOkHQ6eWui6
zVjLQfD4rh29bdIO/Ye+asTwazuAnJswRdohaIdc6+uL2g6qbI1TnbtlHGy5
ri8uqNVxEIgAhtg3WYj5B3QcgKEkzcsAdOfS2UcUDHQdEp5eULotqehw89z3
4Mepug63pGsSjUyVHMr3zZfSj9V1uKKdKvkoQtmhOGPi25p6XQeQ8p91KhB9
lroOIGH7UlWH+qw9JZNn6EDs54bGF4OOA9AVtlzhag6KG4oyJupqO4CCYaGr
mgM4XiO0HK5WvFQz9FBzuAzi7tR0cNv2+e8VCzUHJ5AF0poO6PEPAFdvzZk=

           "]}]}, AspectRatio -> Automatic, BaselinePosition -> Scaled[0.1], 
        ImagePadding -> 0.5, ImageSize -> {14., 14.778}, 
        PlotRange -> {{0.76, 17.27}, {0.73, 17.37}}]& )}], 
   Cell[
    StyleData["FileManagerFile", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{60, Inherited}, {0, 0}}, Deployed -> True, Evaluatable -> 
    True, CellGroupingRules -> {"SectionGrouping", 100}, 
    CellFrameMargins -> {{5, 5}, {2, 2}}, 
    CellFrameLabelMargins -> {{0, Inherited}, {Inherited, Inherited}}, 
    ContextMenu -> {
      MenuItem["Open", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, ShowStringCharacters -> 
    False, Background :> FEPrivate`If[
      CurrentValue["MouseOver"], 
      GrayLevel[0.92], 
      GrayLevel[0.99]]], 
   Cell[
    StyleData[
    "FileManagerDirectory", StyleDefinitions -> StyleData["FileManagerFile"]],
     ShowGroupOpener -> "Inline", Evaluatable -> False, CellEventActions -> 
    None, CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
        None], None}, {None, None}}, ContextMenu -> {
      MenuItem["Open/Close Group", 
       KernelExecute[SelectionMove[
          EvaluationCell[], All, Cell]; FrontEndTokenExecute[
          EvaluationNotebook[], "OpenCloseGroup"]], MenuEvaluator -> 
       Automatic, Method -> "Queued"], 
      MenuItem["Open Directory", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, Background -> 
    GrayLevel[0.99]], 
   Cell[
    StyleData[
    "FileManagerEmptyDirectory", StyleDefinitions -> 
     StyleData["FileManagerDirectory"]], CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerEmptyDirectoryIconTemplate"]], 
        Background -> None], None}, {None, None}}], 
   Cell[
    StyleData["FileManagerBottomSpacer"], ShowCellBracket -> False], 
   Cell[
    StyleData["FileManagerTopSpacer"], CellMargins -> 0, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    CellOpen -> False], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["ExampleImage"], PageWidth :> First[{650}], 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", 
    PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 1053094956087266899; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[1053094956087266899]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 4898876371082581810; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[4898876371082581810]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["RelatedSymbol", StyleDefinitions -> StyleData["Item"]], 
    DefaultNewCellStyle -> {"RelatedSymbol", FontFamily -> "Source Sans Pro"},
     DefaultFormatType -> DefaultInputFormatType, FormatType -> InputForm], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["Input"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["Code"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[
      Rational[16, 17]]], 
   Cell[
    StyleData["DisclosureDetails"], CellMargins -> {{94, Inherited}, {10, 0}},
     FontSize -> 12, FontColor -> GrayLevel[0.5]], 
   Cell[
    StyleData[
    "PacletDirectoryChooser", StyleDefinitions -> StyleData["Output"]], 
    Deletable -> False, CellMargins -> {{50, 40}, {Inherited, Inherited}}], 
   Cell[
    StyleData["PacletDirectoryChooserTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        PaneSelectorBox[{"Notebook" -> TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                    StyleBox[
                    "\"Paclet Directory\"", "Text", FontWeight -> "SemiBold", 
                    StripOnInput -> False], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, {
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Notebook"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox["\"Same as Notebook\"", "RadioButtonBarLabel", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}], "  ", 
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Custom"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Other\"", "RadioButtonBarLabel", StripOnInput -> 
                    False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}]}], "Deploy"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = 
                    RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {
                    "Notebook" -> "Same as Notebook", "Custom" -> "Other"}, 
                    Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]]], 
                    "Text", FontSize -> 13, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ItemBox[
                    TemplateBox[{
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.273, 20.84}, {16.273, 
                    13.062}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionOpenAllGroups"]; 
                    SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Expand folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionCloseAllGroups"]; 
                    FrontEndTokenExecute[
                    EvaluationNotebook[], "OpenCloseGroup"]; SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Collapse folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    DynamicModuleBox[{RSNB`r$$ = 0}, 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}]}, ImageSize -> 
                    14, ImagePadding -> 1, PlotRange -> 1.3], True -> 
                    OverlayBox[{
                    AnimatorBox[
                    Dynamic[
                    BoxForm`RemapVariable[RSNB`r$$, {0, (-2) Pi}], 
                    BoxForm`RemapValue[#, RSNB`r$$, {0, (-2) Pi}]& ], {0, 1}, 
                    AppearanceElements -> {}, DefaultDuration -> 1, ImageSize -> 
                    0.1], 
                    GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}], {{{
                    Cos[
                    Dynamic[RSNB`r$$]], -Sin[
                    Dynamic[RSNB`r$$]]}, {
                    Sin[
                    Dynamic[RSNB`r$$]], 
                    Cos[
                    Dynamic[RSNB`r$$]]}}, {0, 0}}], {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, ImageSize -> 14, ImagePadding -> 1, PlotRange -> 
                    1.3]}]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]], 
                    ContentPadding -> False], Initialization :> (CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}] = False), 
                    DynamicModuleValues :> {}], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    If[
                    And[CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}] === 
                    "Notebook", 
                    Not[
                    DirectoryQ[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Appearance -> None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Queued", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Refresh files\""}, "PrettyTooltipTemplate"]}, 
                    "RowDefault"], ItemSize -> Fit, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Right}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
             DefaultBaseStyle -> "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"], "Custom" -> TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                    StyleBox[
                    "\"Paclet Directory\"", "Text", FontWeight -> "SemiBold", 
                    StripOnInput -> False], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, {
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Notebook"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Same as Notebook\"", "RadioButtonBarLabel", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}], "  ", 
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Custom"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Other\"", "RadioButtonBarLabel", StripOnInput -> 
                    False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}]}], "Deploy"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = 
                    RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {
                    "Notebook" -> "Same as Notebook", "Custom" -> "Other"}, 
                    Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]]], 
                    "Text", FontSize -> 13, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ItemBox[
                    TemplateBox[{
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.273, 20.84}, {16.273, 
                    13.062}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionOpenAllGroups"]; 
                    SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Expand folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionCloseAllGroups"]; 
                    FrontEndTokenExecute[
                    EvaluationNotebook[], "OpenCloseGroup"]; SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Collapse folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    DynamicModuleBox[{RSNB`r$$ = 0}, 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}]}, ImageSize -> 
                    14, ImagePadding -> 1, PlotRange -> 1.3], True -> 
                    OverlayBox[{
                    AnimatorBox[
                    Dynamic[
                    BoxForm`RemapVariable[RSNB`r$$, {0, (-2) Pi}], 
                    BoxForm`RemapValue[#, RSNB`r$$, {0, (-2) Pi}]& ], {0, 1}, 
                    AppearanceElements -> {}, DefaultDuration -> 1, ImageSize -> 
                    0.1], 
                    GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}], {{{
                    Cos[
                    Dynamic[RSNB`r$$]], -Sin[
                    Dynamic[RSNB`r$$]]}, {
                    Sin[
                    Dynamic[RSNB`r$$]], 
                    Cos[
                    Dynamic[RSNB`r$$]]}}, {0, 0}}], {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, ImageSize -> 14, ImagePadding -> 1, PlotRange -> 
                    1.3]}]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]], 
                    ContentPadding -> False], Initialization :> (CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}] = False), 
                    DynamicModuleValues :> {}], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    If[
                    And[CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}] === 
                    "Notebook", 
                    Not[
                    DirectoryQ[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Appearance -> None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Queued", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Refresh files\""}, "PrettyTooltipTemplate"]}, 
                    "RowDefault"], ItemSize -> Fit, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Right}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"]}, {
               TagBox[
                GridBox[{{
                   InputFieldBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectory"}]], 
                    String, FieldHint -> "Choose paclet directory", 
                    BaseStyle -> {
                    FontSize -> 12, FontColor -> GrayLevel[0.25]}, 
                    ImageSize -> {Full, 24}, BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 3}, {1, 1}}], 
                   ButtonBox[
                    StyleBox[
                    "\"Browse\[Ellipsis]\"", "Text", FontSize -> 12, 
                    StripOnInput -> False], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    Replace[
                    SystemDialogInput["Directory", 
                    Replace[
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}], Except[
                    PatternTest[
                    Blank[], DirectoryQ]] :> Replace[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]], Except[
                    PatternTest[
                    Blank[], DirectoryQ]] :> Directory[]]]], Pattern[RSNB`s, 
                    Blank[String]] :> With[{RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]]}, 
                    If[RSNB`nbDir === RSNB`s, 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = 
                    "Notebook"; Null, 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = RSNB`s; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = 
                    "Custom"; Null]; If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`s]]]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Method -> "Queued", ImageSize -> {Automatic, 24},
                     Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    Appearance -> Automatic, Evaluator -> Automatic]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {"Text"}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"]}, 
         Dynamic[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "PacletDirectoryType"}]], 
         ImageSize -> Automatic], Background -> GrayLevel[0.98], FrameMargins -> 
        10, FrameStyle -> GrayLevel[0.8], ImageSize -> {
          Scaled[1], Automatic}, StripOnInput -> False]& )}], 
   Cell[
    StyleData["PacletDirectoryChooserErrorTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            GraphicsBox[{
              Thickness[0.028571], 
              StyleBox[{
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
                   3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 
                  1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQfbJs33yp88YO51advxqWI+LApN0udvOdsYOre9FP
/pciDhGWW06U/TN26EiOvePWLArnb35VvFXUWgzOtzeN2+WZowTnX614qWZ4
QgluXmvNhc2RosoOMPsOnlroui1Y2SGMT3fT3PXGDn8kiq8LTVJ24Lq+uMC2
y9ihx+sVi8lGZYenF5Ru/4xD8EHW8Djpw/lvAnfItb7Wg/NDHi+dfWSBHty8
fKHmA6cS9eD2/Vn58ZKvkh7cPQG90/OEmPXg7oXxYf6B8WH+hfFh4QEzDxZe
MPtg4QlzD9if74Xh7pU6EK3guFEY7h8YH+ZfGB8WHjA+LLxg5qHHHwAbtMYJ

                  "], CompressedData["
1:eJxTTMoPSmViYGCQBWIQfdzbvNPxgLEDSxif7qa7Gg6WW06U7btv7HC14qWa
IYemw78rQMZHY4cIkISdpoPIOveHVV+MHRhAoEHToXSyBEuYn4nDwVMLXbdN
NoXznRKeXlDabQox19bE4V2NvWncLVMH5ds/67JkTKDmmsLNz5j4tsZe1Mxh
2+e/VypOGjs0TnXuzlE3c9g3X0r/7hIEv/kAyCI9OB9kHV8ugg+2T1YPbt4u
Tx4m7eO6cPt+BD9eOrtFF+4e8Zvnvgcn6zpot4vdPLcdwa8FSu/qNHU4ewYI
ePTg/oXxYeEBCg4RPT14eBXacl1fXKAHD09jENis57Bs9hGFDZs0HAJ6p+cJ
MetD5OdqOIDDPwHBjwM52NsYzp81EwgqEXyQ9uYFxnDz0OMPAAfUunk=
                  "], CompressedData["
1:eJxTTMoPSmViYGBQAmIQbcixRibqiJFD41Tn7pzl9g58upvmvlc3drA3jdvl
mWPv0Hzg1ELXMmOHaUDp59L2Dkza7WI31xlDxLfZOQT0Ts8TCnZ0MAo10Fop
zOsQlWJ937/X0eFMvcf+2rlsDue/Bz9e2u3okLoqISRIncFhnfvDKhE/R4c/
Kz9e8k36bJ8vBDTJ0NHh5OQl2Wr3X9k7JTy9oMTt6PDE85Lp5PyH9uogB95y
cHilKHXX8c0Vex6QA1Y6OOgfsLMqfbrb3i9JIMKyxMGBAQqArl9+zBrB318r
a5HuwgLnV0asMD27mwHOjxTffpHh3i97mHmb9PIWM+75Yg+zz/Dyt/VrTN7a
w9wzU8jzi1HXY3uYe4Gh8nvlxxv2MP8YXD0TxeWxfT/Mv9M49185P3vXflh4
/LrA+lW3+Jo9LLzA+hbpwcPzV13WnhJhfXh4P146+4jCBn14fIDD09oAHl/F
GRPf1sw3cDj8VSOm/5G9w5vAHXKt3IZQ/0HDoQHBFwFFwBcEHxR9zQlGcP3o
6QEAaQXeGQ==
                  "]}]}, {
                FaceForm[
                 RGBColor[0.85098, 0., 0.10588, 1.]]}, StripOnInput -> 
               False]}, {
             ImageSize -> 12, BaselinePosition -> Scaled[0.05], ImageSize -> 
              16}], #}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
          False, GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], FontColor -> 
        RGBColor[0.86667, 0.06667, 0.], FontSize -> 13, FontFamily -> 
        "Source Sans Pro", StripOnInput -> False]& )}], 
   Cell[
    StyleData["PacletDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (OverlayBox[{
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"], 
         GraphicsBox[{
           Thickness[0.041667], {
            FaceForm[{
              RGBColor[0.961, 0.961, 0.961], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.545, 22.597}, {
             7.5464, 20.5}, {2.5454, 18.402}, {2.5454, 12.598}, {2.5454, 
             12.597}, {2.5454, 6.7952}, {7.5454, 4.6962}, {7.546, 4.6972}, {
             12.545, 2.5992}, {17.545, 4.6972}, {17.545, 4.6962}, {22.545, 
             6.7952}, {22.545, 12.597}, {22.545, 12.598}, {22.545, 
             18.402}}}]}, {
            FaceForm[{
              RGBColor[0.898, 0.898, 0.898], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 14.057}, {
             16.875, 14.057}, {16.875, 8.3359}, {17., 8.1169}, {21.952, 
             6.0399}, {22.049, 6.2709}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.057}, {6.875, 
             14.057}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 6.0399}, {7., 
             8.1169}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.874, 6.2383}, {6.9515, 4.1733}, {7.0475, 
             3.9423}, {12., 6.0193}, {16.952, 3.9423}, {17.048, 4.1733}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{17.125, 14.139}, {17.125, 19.86}, {16.875,
              19.86}, {16.875, 14.139}, {17., 13.92}, {21.952, 11.843}, {
             22.049, 12.074}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{7.125, 14.139}, {7.125, 19.86}, {6.875, 
             19.86}, {6.875, 14.139}, {1.952, 12.074}, {2.048, 11.843}, {7., 
             13.92}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.875, 21.363}, {11.875, 18.356}, {12., 18.303}, {
             12.125, 18.356}, {12.125, 21.363}, {12., 21.415}}}]}, {
            FaceForm[{
              RGBColor[0.749, 0.749, 0.749], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{8.292, 
              19.859}, {12., 21.415}, {15.707, 19.859}, {12., 18.303}}, {{
              17.5, 19.527}, {17.5, 20.192}, {12., 22.5}, {6.5, 20.192}, {6.5,
               19.528}, {12., 17.219}, {12., 17.219}, {15.7, 18.772}, {17.5, 
              19.527}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 5.4026}, {12.5,
              5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 9.5283}, {21.5, 
              11.207}}, {{21.5, 12.711}, {21.5, 12.291}, {17., 10.403}, {16.5,
               10.613}, {16.5, 10.194}, {15.707, 9.8613}, {16.5, 9.5283}, {
              16.5, 4.8083}, {16.5, 4.8093}, {16.5, 4.3903}, {15.707, 
              4.0573}, {17., 3.5143}, {22.5, 5.8223}, {22.5, 12.291}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 11.207}, {6.5, 
              9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {7.5, 9.5286}, {8.292, 
              9.8616}, {7.5, 10.194}, {7.5, 10.614}, {7., 10.404}, {2.5, 
              12.291}, {2.5, 12.711}, {1.5, 12.292}, {1.5, 5.8226}, {7., 
              3.5146}, {8.293, 4.0576}, {7.5, 4.3906}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{3.2925, 17.762}, {7.0005, 19.318}, {10.708, 
              17.762}, {7.0005, 16.206}}, {{6.5005, 10.612}, {2.5005, 
              12.291}, {2.5005, 17.01}, {6.5005, 15.332}}, {{7.5005, 
              10.193}, {7.5005, 10.612}, {7.5005, 15.332}, {12., 17.22}, {
              12.5, 17.01}, {12.5, 18.095}, {7.0005, 20.403}, {1.5005, 
              18.095}, {1.5005, 11.626}, {7.0005, 9.3182}, {8.2935, 
              9.8612}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {17.5, 15.332}, {
              21.5, 17.01}}, {{13.293, 17.762}, {17., 19.318}, {20.708, 
              17.762}, {17., 16.207}}, {{17., 20.403}, {11.5, 18.095}, {11.5, 
              17.01}, {12., 17.22}, {16.5, 15.332}, {16.5, 10.612}, {16.5, 
              10.194}, {15.706, 9.861}, {17., 9.318}, {22.5, 11.626}, {22.5, 
              18.095}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{16.5, 4.3906}, {12.5, 2.7116}, {12.5, 7.4316}, {
              16.5, 9.1096}}, {{11.5, 2.7116}, {7.4995, 4.3906}, {7.4995, 
              9.1096}, {11.5, 7.4316}}, {{16.5, 10.614}, {16.5, 10.195}, {12.,
               8.3056}, {8.2915, 9.8616}, {7.4995, 10.194}, {7.4995, 
              10.615}, {6.4995, 10.195}, {6.4995, 3.7256}, {12., 1.4176}, {
              17.5, 3.7256}, {17.5, 10.195}}}]}, {
            FaceForm[{
              RGBColor[0.965, 0.765, 0.749], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{12., 17.662}, {16.945, 15.586}, {16.945, 9.9376}, {
             12., 7.8636}, {7.055, 9.9376}, {7.055, 15.586}}}]}, {
            FaceForm[{
              RGBColor[0.91, 0.655, 0.635], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 17.763}, {
             11.875, 17.763}, {11.875, 12.041}, {6.952, 9.9757}, {7.048, 
             9.7447}, {12., 11.823}, {16.952, 9.7447}, {17.048, 9.9757}, {
             12.125, 12.041}}}]}, {
            FaceForm[{
              RGBColor[0.867, 0.067, 0.], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5, 
              8.5146}, {12.5, 13.234}, {16.5, 14.912}, {16.5, 10.193}}, {{7.5,
               14.912}, {11.5, 13.234}, {11.5, 8.5146}, {7.5, 10.193}}, {{
              15.708, 15.664}, {12., 14.109}, {8.292, 15.664}, {12., 
              17.221}}, {{12., 18.305}, {6.5, 15.996}, {6.5, 9.5286}, {12., 
              7.2206}, {17.5, 9.5286}, {17.5, 15.996}}}]}}, {
          ImageSize -> 12, AspectRatio -> Automatic, ImageSize -> {24., 24.}, 
           PlotRange -> {{0., 24.}, {0., 24.}}}]}, 
        Alignment -> {Right, Bottom}]& )}], 
   Cell[
    StyleData[
    "MainGuideChooser", StyleDefinitions -> 
     StyleData["PacletDirectoryChooser"]], CellGroupingRules -> 
    "NormalGrouping"], 
   Cell[
    StyleData["MainGuideChooserTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        TagBox[
         GridBox[{{
            PaneSelectorBox[{True -> RowBox[{
                 TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                 StyleBox["/", FontColor -> GrayLevel[0.5]]}], False -> 
              RowBox[{
                 TemplateBox[{}, "FileManagerNBIconTemplate"], 
                 StyleBox["/", ShowContents -> False]}]}, 
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "Relative"}]]], 
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "MainGuidePageString"}]], 
             String, FieldHint -> "Choose a guide page", 
             BaseStyle -> {FontSize -> 12, FontColor -> GrayLevel[0.25]}, 
             ImageSize -> {Full, 24}, BaselinePosition -> Baseline, 
             FrameMargins -> {{3, 3}, {1, 1}}], 
            ButtonBox[
             StyleBox[
             "\"Browse\[Ellipsis]\"", "Text", FontSize -> 12, StripOnInput -> 
              False], ButtonFunction :> 
             With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                EvaluationCell[]}, 
               WithCleanup[NotebookDelete[
                  Cells[RSNB`cell, AttachedCell -> True]]; 
                CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = True, 
                
                Module[{RSNB`initial$, RSNB`res$}, 
                 RSNB`initial$ = SelectFirst[{
                    FileNameJoin[{
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], "Documentation", $Language, 
                    "Guides"}], 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], 
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]}, DirectoryQ, 
                    Directory[]]; 
                 RSNB`res$ = SystemDialogInput["FileOpen", RSNB`initial$]; If[
                   And[
                    StringQ[
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]]], 
                    StringQ[RSNB`res$], 
                    StringStartsQ[RSNB`res$, 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]]]], RSNB`res$ = StringReplace[
                    StringDelete[RSNB`res$, 
                    StringExpression[StartOfString, 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], 
                    Alternatives[$PathnameSeparator, ""]]], "\\" -> "/"]; 
                   CurrentValue[RSNB`cell, {TaggingRules, "Relative"}] = True,
                    CurrentValue[RSNB`cell, {TaggingRules, "Relative"}] = 
                   False]; If[
                   StringQ[RSNB`res$], 
                   CurrentValue[
                    RSNB`cell, {TaggingRules, "MainGuidePageString"}] = 
                   RSNB`res$]], 
                CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                False]], Method -> "Queued", ImageSize -> {Automatic, 24}, 
             Enabled -> Dynamic[
               Not[
                CurrentValue[
                 EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
             Appearance -> Automatic, Evaluator -> Automatic]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
          False, GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "ColumnsIndexed" -> {2 -> 0.2}, "Rows" -> {{Automatic}}}, 
          BaseStyle -> {"Text"}], "Grid"], Background -> GrayLevel[0.98], 
        FrameMargins -> 10, FrameStyle -> GrayLevel[0.8], ImageSize -> {
          Scaled[1], Automatic}, StripOnInput -> False]& )}], 
   Cell[
    StyleData["AttachedMessage"], Deletable -> True, 
    CellMargins -> {{60, 40}, {15, 5}}]}, Visible -> False, FrontEndVersion -> 
  "14.0 for Microsoft Windows (64-bit) (December 12, 2023)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"2c7c274f-fa21-442a-a8a3-a86aa7faa44b"
]

